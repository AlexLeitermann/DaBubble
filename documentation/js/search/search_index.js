var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ActivityService.html",[0,0.989,1,2.057]],["body/injectables/ActivityService.html",[0,1.307,1,2.719,2,1.543,3,0.136,4,0.117,5,0.117,6,3.014,7,0.156,8,0.332,9,1.751,10,6.37,11,2.281,12,4.819,13,4.301,14,5.607,15,5.607,16,2.4,17,3.913,18,2.803,19,6.37,20,0.425,21,5.607,22,5.209,23,4.877,24,6.06,25,6.06,26,2.667,27,6.06,28,4.877,29,6.06,30,4.649,31,3.896,32,5.209,33,1.015,34,0.467,35,4.877,36,3.507,37,0.631,38,0.019,39,0.595,40,3.507,41,4.877,42,3.507,43,0.425,44,0.189,45,0.357,46,0.425,47,4.446,48,3.507,49,4.877,50,2.528,51,4.877,52,4.877,53,4.877,54,4.877,55,4.877,56,2.911,57,3.404,58,0.829,59,4.877,60,4.877,61,4.877,62,4.877,63,3.135,64,1.036,65,3.507,66,3.507,67,3.507,68,4.877,69,3.507,70,3.507,71,3.507,72,3.082,73,3.507,74,3.507,75,1.509,76,0.845,77,0.845,78,3.507,79,2.551,80,3.507,81,0.449,82,3.507,83,3.507,84,2.402,85,4.877,86,4.819,87,3.507,88,2.719,89,3.507,90,3.507,91,0.49,92,2.268,93,0.854,94,0.239,95,1.389,96,3.507,97,3.014,98,1.389,99,3.507,100,1.631,101,1.543,102,0.136,103,0.043,104,1.195,105,3.507,106,3.507,107,4.192,108,3.014,109,2.69,110,2.448,111,2.254,112,3.014,113,2.448,114,1.123,115,2.448,116,5.607,117,3.507,118,2.448,119,3.507,120,6.764,121,3.507,122,3.507,123,3.507,124,3.507,125,3.507,126,3.507,127,3.507,128,5.607,129,3.507,130,3.507,131,6.37,132,3.604,133,5.607,134,1.034,135,3.507,136,2.607,137,1.727,138,0.986,139,1.746,140,2.254,141,2.69,142,2.69,143,3.507,144,3.507,145,3.507,146,3.507,147,3.741,148,3.404,149,3.741,150,4.192,151,3.741,152,3.507,153,3.014,154,0.012,155,0.012]],["title/components/AddChannelComponent.html",[156,0.157,157,0.48]],["body/components/AddChannelComponent.html",[3,0.136,4,0.117,5,0.117,7,0.156,8,0.333,9,1.304,18,2.471,20,0.426,33,0.885,34,0.409,37,0.49,38,0.019,39,0.533,43,0.49,44,0.263,45,0.34,46,0.556,50,2.039,58,0.636,64,0.821,76,0.431,77,0.431,81,0.382,91,0.513,94,0.239,102,0.136,103,0.043,138,1.374,154,0.012,155,0.012,156,0.24,157,0.79,158,0.675,159,0.514,160,0.514,161,0.514,162,4.725,163,4.725,164,2.456,165,0.514,166,1.13,167,1.13,168,0.689,169,3.276,170,0.714,171,0.714,172,1.435,173,2.471,174,0.714,175,3.749,176,0.714,177,3.749,178,2.822,179,4.888,180,6.069,181,2.612,182,2.557,183,2.1,184,2.966,185,3.775,186,2.824,187,5.193,188,4.888,189,4.888,190,1.017,191,3.518,192,2.917,193,3.024,194,2.557,195,3.175,196,3.518,197,2.725,198,2.725,199,0.989,200,2.989,201,3.518,202,0.817,203,1.468,204,1.393,205,0.636,206,3.518,207,2.456,208,3.024,209,2.699,210,2.1,211,4.888,212,0.943,213,2.557,214,1.259,215,1.841,216,1.841,217,1.841,218,1.733,219,3.518,220,3.518,221,4.201,222,3.024,223,3.518,224,3.518,225,3.518,226,3.518,227,4.236,228,2.917,229,3.411,230,4.201,231,3.749,232,3.749,233,4.201,234,4.201,235,4.888,236,4.888,237,2.725,238,4.888,239,4.201,240,4.888,241,3.749,242,4.888,243,4.201,244,0.514,245,0.714,246,0.714,247,0.514,248,0.887,249,0.514,250,0.821,251,0.458,252,0.486,253,0.458,254,0.514,255,0.458,256,0.514,257,0.514,258,0.458,259,0.514,260,0.458,261,0.514,262,0.458,263,0.514,264,0.714,265,0.458,266,0.932,267,0.486,268,0.79,269,0.714,270,0.458,271,0.838,272,0.887,273,0.458,274,0.514,275,0.514,276,0.458,277,0.514,278,0.458,279,0.514,280,0.458,281,0.514,282,0.458,283,0.514,284,0.514,285,0.458,286,0.514,287,0.458,288,0.486,289,0.431,290,0.486,291,0.514,292,0.458,293,0.458,294,0.514,295,0.514,296,0.458,297,0.636,298,0.514,299,0.458,300,0.514,301,0.458,302,0.514,303,0.458,304,0.458,305,0.514,306,0.458,307,0.514,308,0.458,309,0.514,310,0.458,311,0.514,312,0.486,313,0.514,314,0.458,315,0.486,316,0.514,317,0.458,318,0.514,319,0.514,320,0.458,321,0.514,322,0.458,323,0.514,324,0.514,325,0.458,326,0.514,327,0.514,328,0.458,329,0.514,330,0.514,331,0.514]],["title/components/AddMembersAfterAddChannelComponent.html",[156,0.157,251,0.48]],["body/components/AddMembersAfterAddChannelComponent.html",[3,0.159,4,0.136,5,0.136,7,0.182,8,0.369,34,0.336,38,0.019,39,0.557,44,0.21,45,0.303,58,0.705,76,0.664,77,0.664,81,0.279,91,0.451,94,0.279,102,0.159,103,0.05,154,0.013,155,0.013,156,0.259,157,0.533,158,0.748,159,0.598,160,0.598,161,0.598,162,4.238,163,4.238,164,2.859,165,0.598,166,1.14,167,1.14,168,0.721,169,2.384,170,0.792,171,0.792,172,1.385,173,2.384,174,0.792,175,4.156,176,0.792,177,4.156,190,0.981,202,0.951,203,1.708,205,0.533,227,3.782,228,3.234,244,0.598,245,0.792,246,0.792,247,0.598,248,0.944,249,0.598,250,0.887,251,0.841,252,1.029,253,0.533,254,0.598,255,0.533,256,0.598,257,0.598,258,0.533,259,0.598,260,0.533,261,0.598,262,0.533,263,0.598,264,0.792,265,0.533,266,0.982,267,0.565,268,0.841,269,0.792,270,0.533,271,0.892,272,0.944,273,0.533,274,0.598,275,0.598,276,0.533,277,0.598,278,0.533,279,0.598,280,0.533,281,0.598,282,0.533,283,0.598,284,0.598,285,0.533,286,0.598,287,0.533,288,0.565,289,0.502,290,0.565,291,0.598,292,0.533,293,0.533,294,0.598,295,0.598,296,0.533,297,0.705,298,0.598,299,0.533,300,0.598,301,0.533,302,0.598,303,0.533,304,0.533,305,0.598,306,0.533,307,0.598,308,0.533,309,0.598,310,0.533,311,0.598,312,0.565,313,0.598,314,0.533,315,0.565,316,0.598,317,0.533,318,0.598,319,0.598,320,0.533,321,0.598,322,0.533,323,0.598,324,0.598,325,0.533,326,0.598,327,0.598,328,0.533,329,0.598,330,0.598,331,0.598,332,4.658,333,6.072,334,3.176,335,3.52,336,4.095,337,4.095,338,5.554,339,4.819,340,4.657,341,4.657,342,3.782,343,5.418,344,5.418]],["title/components/AddMembersComponent.html",[156,0.157,253,0.48]],["body/components/AddMembersComponent.html",[1,3.488,3,0.129,4,0.111,5,0.111,7,0.148,8,0.321,20,0.411,22,2.87,33,0.605,34,0.448,37,0.566,38,0.019,39,0.604,43,0.411,44,0.23,45,0.381,46,0.411,58,0.711,64,1.026,75,1.458,76,0.795,77,0.795,81,0.227,91,0.496,94,0.227,98,1.322,102,0.129,103,0.041,104,1.606,134,1.749,138,0.939,154,0.011,155,0.011,156,0.233,157,0.435,158,0.65,159,0.488,160,0.488,161,0.488,162,5.079,165,0.488,166,1.127,167,1.127,168,0.66,170,0.688,171,0.688,172,1.395,173,2.403,174,0.688,176,0.688,178,2.539,184,2.758,190,0.853,202,0.775,203,1.393,204,1.322,205,0.435,213,1.747,228,2.813,244,0.488,245,0.688,246,0.688,247,0.488,248,0.867,249,0.488,250,0.798,251,0.435,252,0.754,253,0.772,254,0.488,255,0.435,256,0.488,257,0.488,258,0.435,259,0.488,260,0.435,261,0.488,262,0.435,263,0.488,264,0.688,265,0.435,266,0.914,267,0.461,268,0.772,269,0.688,270,0.435,271,0.819,272,0.867,273,0.435,274,0.488,275,0.488,276,0.435,277,0.488,278,0.435,279,0.488,280,0.435,281,0.488,282,0.435,283,0.488,284,0.488,285,0.435,286,0.488,287,0.435,288,0.461,289,0.409,290,0.461,291,0.488,292,0.435,293,0.772,294,0.688,295,0.488,296,0.435,297,0.613,298,0.488,299,0.435,300,0.488,301,0.435,302,0.488,303,0.435,304,0.435,305,0.488,306,0.435,307,0.488,308,0.435,309,0.488,310,0.435,311,0.488,312,0.461,313,0.488,314,0.435,315,0.461,316,0.488,317,0.435,318,0.488,319,0.488,320,0.435,321,0.488,322,0.435,323,0.488,324,0.488,325,0.435,326,0.488,327,0.488,328,0.435,329,0.488,330,0.488,331,0.488,332,4.189,334,3.624,338,4.05,339,4.14,345,5.582,346,2.87,347,2.69,348,4.712,349,4.712,350,4.694,351,5.46,352,5.46,353,5.46,354,5.46,355,5.932,356,5.932,357,4.55,358,2.922,359,5.932,360,4.712,361,3.339,362,4.712,363,3.339,364,3.339,365,3.339,366,3.339,367,3.339,368,4.712,369,3.339,370,3.339,371,3.339,372,3.339,373,3.339,374,3.339,375,2.331,376,2.561,377,3.339,378,1.993,379,3.339,380,5.46,381,3.339,382,4.712,383,3.339,384,3.339,385,3.339,386,3.339,387,5.46,388,4.712,389,3.339,390,3.614,391,4.712,392,4.712,393,3.289]],["title/components/AnimationIntroComponent.html",[156,0.157,255,0.48]],["body/components/AnimationIntroComponent.html",[3,0.125,4,0.107,5,0.107,7,0.143,8,0.397,9,1.49,20,0.401,34,0.441,37,0.56,38,0.019,39,0.518,43,0.467,44,0.208,45,0.359,46,0.281,50,2.816,56,2.743,57,2.25,58,0.804,63,2.954,64,0.965,75,2.222,76,0.715,77,0.786,81,0.313,91,0.398,93,0.785,94,0.219,102,0.125,103,0.04,104,1.566,114,0.921,134,1.722,154,0.011,155,0.011,156,0.282,157,0.42,158,0.634,159,0.471,160,0.471,161,0.471,165,0.471,166,1.124,167,1.124,168,0.549,170,0.672,171,0.672,172,1.369,174,0.672,176,0.672,186,2.436,199,0.906,202,0.748,205,0.42,212,0.864,244,0.471,245,0.672,246,0.672,247,0.471,248,0.853,249,0.471,250,0.783,251,0.42,252,0.445,253,0.42,254,0.471,255,0.76,256,1.108,257,0.471,258,0.42,259,0.471,260,0.42,261,0.471,262,0.42,263,0.471,264,0.672,265,0.42,266,0.902,267,0.445,268,0.76,269,0.672,270,0.42,271,0.806,272,0.853,273,0.42,274,0.471,275,0.471,276,0.42,277,0.471,278,0.42,279,0.471,280,0.42,281,0.471,282,0.42,283,0.471,284,0.471,285,0.42,286,0.471,287,0.42,288,0.445,289,0.395,290,0.445,291,0.471,292,0.42,293,0.42,294,0.471,295,0.471,296,0.42,297,0.598,298,0.471,299,0.42,300,0.471,301,0.42,302,0.471,303,0.42,304,0.42,305,0.471,306,0.42,307,0.471,308,0.42,309,0.471,310,0.42,311,0.471,312,0.445,313,0.471,314,0.42,315,0.445,316,0.471,317,0.42,318,0.471,319,0.471,320,0.42,321,0.471,322,0.42,323,0.471,324,0.471,325,0.42,326,0.471,327,0.471,328,0.42,329,0.471,330,0.471,331,0.471,347,2.638,358,2.876,394,6.175,395,5.014,396,2.771,397,2.137,398,3.255,399,5.019,400,4.596,401,5.839,402,4.596,403,4.596,404,4.479,405,2.866,406,4.479,407,4.596,408,4.596,409,4.596,410,3.208,411,4.596,412,4.596,413,4.596,414,5.356,415,5.839,416,5.839,417,5.839,418,2.264,419,5.356,420,6.173,421,3.208,422,3.526,423,3.224,424,4.596,425,3.738,426,3.224,427,3.224,428,2.743,429,4.596,430,2.563,431,5.019,432,4.596,433,4.596,434,2.954,435,3.951,436,4.479,437,4.479,438,4.596,439,3.224,440,4.596,441,4.596,442,3.224,443,3.951,444,4.596,445,3.224,446,3.526,447,2.743,448,4.596,449,3.526,450,1.73,451,2.404,452,3.224,453,3.224,454,2.954,455,3.224,456,3.224,457,3.224,458,3.224,459,3.208,460,3.224,461,4.596,462,4.596,463,3.224,464,3.224,465,3.224,466,2.473,467,3.224,468,2.771,469,3.224,470,3.224]],["title/components/AppComponent.html",[156,0.157,258,0.48]],["body/components/AppComponent.html",[3,0.119,4,0.102,5,0.102,7,0.136,8,0.302,9,1.208,11,2.147,20,0.387,26,2.51,33,0.943,34,0.437,37,0.55,38,0.019,39,0.583,43,0.267,44,0.202,45,0.339,46,0.267,50,2.778,57,2.139,58,0.847,64,0.922,72,2.987,75,1.951,76,0.816,77,0.773,79,2.318,81,0.388,86,2.634,91,0.469,92,2.421,93,0.746,94,0.209,95,1.213,101,1.95,102,0.119,103,0.038,104,1.51,114,0.888,115,2.139,134,1.307,138,1.246,139,2.167,154,0.011,155,0.011,156,0.284,157,0.399,158,0.871,159,0.448,160,0.448,161,0.448,165,0.448,166,1.121,167,1.121,168,0.536,170,0.648,171,0.648,172,1.33,174,0.648,176,0.648,186,2.831,190,0.943,199,1.246,200,2.183,202,0.711,205,0.399,212,0.821,214,1.097,222,2.634,244,0.448,245,0.648,246,0.648,247,0.448,248,0.833,249,0.448,250,0.761,251,0.399,252,0.423,253,0.399,254,0.448,255,0.743,256,0.95,257,0.448,258,0.743,259,0.448,260,0.399,261,0.448,262,0.399,263,0.448,264,0.648,265,0.399,266,0.884,267,0.423,268,0.743,269,0.648,270,0.399,271,0.787,272,0.833,273,0.399,274,0.448,275,0.448,276,0.399,277,0.448,278,0.399,279,0.448,280,0.399,281,0.448,282,0.399,283,0.448,284,0.448,285,0.399,286,0.448,287,0.399,288,0.423,289,0.375,290,0.423,291,0.448,292,0.399,293,0.399,294,0.448,295,0.448,296,0.399,297,0.577,298,0.448,299,0.399,300,0.448,301,0.399,302,0.448,303,0.399,304,0.399,305,0.448,306,0.399,307,0.448,308,0.399,309,0.448,310,0.399,311,0.448,312,0.423,313,0.448,314,0.399,315,0.423,316,0.448,317,0.399,318,0.448,319,0.448,320,0.399,321,0.448,322,0.399,323,0.448,324,0.448,325,0.399,326,0.448,327,0.448,328,0.399,329,0.448,330,0.448,331,0.448,334,2.984,347,2.564,358,2.81,378,1.829,395,2.139,397,2.061,398,2.471,399,4.903,406,2.35,428,2.645,430,2.471,431,3.809,447,3.107,450,2.751,466,2.35,471,2.634,472,4.432,473,4.432,474,3.809,475,4.432,476,2.471,477,4.432,478,4.432,479,3.993,480,4.432,481,4.432,482,5.206,483,3.993,484,4.475,485,4.475,486,5.704,487,6.308,488,4.903,489,2.634,490,4.432,491,3.405,492,2.471,493,4.432,494,3.064,495,4.475,496,4.432,497,4.432,498,3.809,499,5.422,500,4.432,501,4.432,502,4.432,503,4.432,504,4.432,505,4.432,506,3.809,507,2.645,508,4.903,509,4.432,510,4.432,511,4.432,512,3.064,513,3.809,514,3.064,515,3.399,516,3.18,517,3.064,518,3.064,519,3.809,520,3.064,521,3.064,522,3.064,523,3.064,524,3.064,525,2.634,526,1.509,527,3.064,528,3.064,529,2.634,530,2.35,531,3.064,532,2.634,533,3.064,534,3.064,535,3.064,536,2.634,537,2.634,538,3.064,539,2.634,540,3.399,541,2.634,542,4.432,543,3.064,544,3.064,545,3.064,546,3.064,547,4.432]],["title/components/AuthComponent.html",[156,0.157,260,0.48]],["body/components/AuthComponent.html",[3,0.169,4,0.145,5,0.145,38,0.019,39,0.567,44,0.219,58,0.734,81,0.296,91,0.465,94,0.296,102,0.169,103,0.054,154,0.014,155,0.014,156,0.267,157,0.566,158,0.969,159,0.636,160,0.636,161,0.636,165,0.636,166,1.143,167,1.143,168,0.621,170,0.824,171,0.824,174,0.824,176,0.824,186,2.351,199,1.223,205,0.566,212,1.166,244,0.636,245,0.824,246,0.824,247,0.636,248,0.967,249,0.636,250,0.914,251,0.566,252,0.601,253,0.566,254,0.636,255,0.566,256,0.636,257,0.636,258,0.566,259,0.636,260,0.861,261,0.636,262,0.566,263,0.636,264,0.824,265,0.566,266,1.001,267,0.601,268,0.861,269,0.824,270,0.566,271,0.913,272,0.967,273,0.566,274,0.636,275,0.636,276,0.566,277,0.636,278,0.566,279,0.636,280,0.566,281,0.636,282,0.861,283,0.824,284,0.636,285,0.566,286,0.636,287,0.566,288,0.601,289,0.533,290,0.601,291,0.636,292,0.566,293,0.566,294,0.636,295,0.636,296,0.566,297,0.734,298,0.636,299,0.566,300,0.636,301,0.566,302,0.636,303,0.566,304,0.566,305,0.636,306,0.566,307,0.636,308,0.566,309,0.636,310,0.566,311,0.636,312,0.601,313,0.636,314,0.566,315,0.601,316,0.636,317,0.566,318,0.636,319,0.636,320,0.566,321,0.636,322,0.566,323,0.636,324,0.636,325,0.566,326,0.636,327,0.636,328,0.566,329,0.636,330,0.636,331,0.636,397,2.622,449,4.324,450,2.121,474,4.846,479,4.797,507,3.365,548,3.74,549,5.637,550,5.637,551,5.637,552,5.637,553,5.637,554,5.637,555,2.276,556,2.597]],["title/injectables/AuthService.html",[0,0.989,11,1.388]],["body/injectables/AuthService.html",[0,1.632,2,1.561,3,0.138,4,0.118,5,0.118,7,0.157,8,0.334,11,1.85,16,1.946,20,0.429,34,0.445,37,0.641,38,0.019,39,0.621,43,0.531,44,0.279,45,0.341,46,0.531,63,3.915,76,0.602,77,0.602,81,0.241,91,0.453,93,0.864,94,0.241,95,1.404,100,1.649,101,1.561,102,0.138,103,0.044,114,1.407,138,1.944,139,2.18,148,3.431,154,0.012,155,0.012,190,1.382,199,1.712,214,2.369,217,3.186,288,0.955,289,0.746,315,0.678,410,3.431,449,2.72,450,2.675,451,3.618,476,2.74,491,2.934,498,4.225,557,3.049,558,3.186,559,4.915,560,4.915,561,4.225,562,4.915,563,4.225,564,4.915,565,1.76,566,4.225,567,5.64,568,6.09,569,6.09,570,5.235,571,5.235,572,5.235,573,6.09,574,4.225,575,3.77,576,3.547,577,3.547,578,5.497,579,4.915,580,4.915,581,4.866,582,3.547,583,3.95,584,6.347,585,3.547,586,3.547,587,3.547,588,4.915,589,3.547,590,4.915,591,3.547,592,3.77,593,4.915,594,4.915,595,3.547,596,3.77,597,4.915,598,3.547,599,4.915,600,3.547,601,4.915,602,4.915,603,4.915,604,4.915,605,4.915,606,3.547,607,3.547,608,3.547,609,4.915,610,4.915,611,3.547,612,4.361,613,6.617,614,3.547,615,3.547,616,3.547,617,6.785,618,3.547,619,4.915,620,3.547]],["title/classes/Channel.html",[103,0.045,169,1.624]],["body/classes/Channel.html",[3,0.19,4,0.163,5,0.163,7,0.218,8,0.414,20,0.53,33,0.887,34,0.459,37,0.427,38,0.019,43,0.427,44,0.281,45,0.411,46,0.427,84,3.255,102,0.19,103,0.06,114,0.982,132,3.149,154,0.015,155,0.015,169,2.675,190,1.386,192,4.24,199,1.997,621,2.924,622,4.211,623,6.105,624,4.958,625,6.105,626,4.441,627,3.907,628,6.078,629,4.38,630,2.732,631,4.899,632,4.899,633,4.899,634,4.899,635,4.899,636,4.899,637,5.224,638,5.224,639,5.224,640,5.224,641,6.078,642,6.078,643,6.078,644,6.078,645,6.078,646,6.078,647,4.662,648,4.662]],["title/injectables/ChannelsService.html",[0,0.989,185,2.057]],["body/injectables/ChannelsService.html",[0,1.317,2,1.559,3,0.137,4,0.118,5,0.118,7,0.157,8,0.334,20,0.429,26,2.679,33,1.021,34,0.452,37,0.62,38,0.019,39,0.534,43,0.558,44,0.257,45,0.387,46,0.558,64,0.518,72,2.162,76,0.691,77,0.691,81,0.384,91,0.492,92,2.284,93,0.863,94,0.241,95,1.403,98,1.403,100,1.648,101,1.559,102,0.137,103,0.044,104,1.208,114,1.22,138,1.585,139,1.759,154,0.012,155,0.012,168,0.53,169,3.231,181,3.368,185,2.739,190,1.198,192,2.932,199,1.381,210,2.115,214,2.179,217,3.719,218,2.999,229,5.012,232,2.718,393,2.473,450,1.849,540,3.768,558,2.57,565,1.759,612,3.158,623,3.046,625,3.046,649,3.046,650,4.898,651,5.638,652,3.624,653,3.624,654,3.913,655,3.158,656,4.912,657,4.67,658,3.624,659,4.912,660,3.158,661,4.912,662,3.544,663,4.825,664,4.616,665,3.158,666,3.158,667,3.429,668,4.912,669,3.544,670,2.932,671,3.158,672,3.544,673,3.856,674,3.624,675,4.222,676,3.544,677,3.158,678,3.624,679,4.912,680,3.544,681,3.544,682,3.158,683,3.544,684,4.912,685,3.544,686,3.634,687,3.158,688,3.158,689,2.932,690,3.544,691,4.11,692,3.544,693,3.158,694,3.544,695,2.278,696,2.278,697,2.278,698,4.912,699,2.718,700,2.278,701,2.115,702,2.278,703,3.544,704,3.046,705,3.544,706,2.278,707,2.718,708,2.278,709,2.278,710,2.473,711,4.912,712,2.473,713,5.638,714,2.473,715,3.544,716,3.185,717,2.679,718,3.394,719,2.278,720,3.158,721,3.544,722,2.278,723,3.544,724,2.278,725,3.544,726,3.544,727,3.046,728,3.544,729,2.718,730,3.544,731,3.046,732,3.544,733,2.473,734,3.544,735,3.544,736,3.544,737,3.544]],["title/components/DirectMessageComponent.html",[156,0.157,262,0.48]],["body/components/DirectMessageComponent.html",[3,0.154,4,0.132,5,0.132,7,0.177,8,0.362,20,0.464,33,0.72,34,0.396,37,0.347,38,0.019,39,0.564,43,0.347,44,0.232,45,0.223,46,0.347,58,0.831,64,0.776,76,0.651,77,0.651,81,0.271,91,0.509,94,0.271,102,0.154,103,0.049,134,1.567,154,0.013,155,0.013,156,0.255,157,0.518,158,0.733,159,0.581,160,0.581,161,0.581,165,0.581,166,1.138,167,1.138,168,0.6,170,0.776,171,0.776,172,1.529,174,0.776,176,0.776,202,0.923,204,1.575,205,0.518,244,0.581,245,0.776,246,0.776,247,0.581,248,0.933,249,0.581,250,0.874,251,0.518,252,0.549,253,0.518,254,0.581,255,0.518,256,0.581,257,0.581,258,0.518,259,0.581,260,0.518,261,0.581,262,0.831,263,1.022,264,0.776,265,0.518,266,0.972,267,0.549,268,0.831,269,0.776,270,0.518,271,0.945,272,0.933,273,0.518,274,0.581,275,0.581,276,0.518,277,0.581,278,0.518,279,0.581,280,0.518,281,0.581,282,0.518,283,0.581,284,0.581,285,0.518,286,0.581,287,0.518,288,0.549,289,0.487,290,0.549,291,0.581,292,0.518,293,0.518,294,0.581,295,0.581,296,0.831,297,0.866,298,0.581,299,0.518,300,0.581,301,0.518,302,0.581,303,0.518,304,0.518,305,0.581,306,0.518,307,0.581,308,0.518,309,0.581,310,0.518,311,0.581,312,0.549,313,0.581,314,0.518,315,0.549,316,0.581,317,0.518,318,0.581,319,0.581,320,0.518,321,0.581,322,0.518,323,0.581,324,0.581,325,0.518,326,0.581,327,0.581,328,0.692,329,0.581,330,0.581,331,0.581,378,2.374,738,5.721,739,5.721,740,3.051,741,4.176,742,4.567,743,4.567,744,4.176,745,5.143,746,4.458,747,3.051,748,3.146,749,3.977,750,2.617,751,3.977,752,3.977,753,3.977,754,2.556,755,2.217,756,2.556,757,2.556,758,3.051,759,2.374,760,2.217,761,2.776,762,4.458,763,4.458,764,3.171,765,5.313,766,5.313,767,4.567,768,5.313,769,3.977,770,5.313,771,4.567,772,5.313,773,3.051]],["title/components/EditChannelComponent.html",[156,0.157,265,0.48]],["body/components/EditChannelComponent.html",[3,0.133,4,0.114,5,0.114,7,0.153,8,0.327,20,0.42,33,0.623,34,0.446,37,0.587,38,0.019,39,0.529,43,0.3,44,0.245,45,0.354,46,0.3,58,0.626,64,0.983,75,2.027,76,0.736,77,0.736,81,0.234,91,0.446,94,0.234,102,0.133,103,0.042,134,2.056,154,0.012,155,0.012,156,0.237,157,0.448,158,0.664,159,0.502,160,0.502,161,0.502,164,2.4,165,0.502,166,1.129,167,1.129,168,0.565,169,3.02,170,0.703,171,0.703,172,1.418,173,2.441,174,0.703,175,3.69,176,0.703,177,3.69,178,2.237,183,2.052,184,2.794,190,0.871,193,2.955,202,0.798,203,1.434,204,1.361,205,0.448,213,1.799,228,2.871,231,3.69,232,3.69,243,4.135,244,0.502,245,0.703,246,0.703,247,0.502,248,0.878,249,0.502,250,0.811,251,0.448,252,0.475,253,0.448,254,0.502,255,0.448,256,0.502,257,0.502,258,0.448,259,0.502,260,0.448,261,0.502,262,0.448,263,0.502,264,0.703,265,0.782,266,1.043,267,0.475,268,0.782,269,0.703,270,0.448,271,0.829,272,0.878,273,0.448,274,0.502,275,0.502,276,0.448,277,0.502,278,0.448,279,0.502,280,0.448,281,0.502,282,0.448,283,0.502,284,0.502,285,0.448,286,0.502,287,0.448,288,0.475,289,0.421,290,0.475,291,0.502,292,0.448,293,0.448,294,0.502,295,0.502,296,0.448,297,0.626,298,0.502,299,0.448,300,0.502,301,0.448,302,0.502,303,0.448,304,0.448,305,0.502,306,0.448,307,0.502,308,0.448,309,0.502,310,0.448,311,0.502,312,0.475,313,0.502,314,0.448,315,0.475,316,0.502,317,0.448,318,0.502,319,0.502,320,0.448,321,0.502,322,0.448,323,0.502,324,0.502,325,0.448,326,0.502,327,0.502,328,0.448,329,0.502,330,0.502,331,0.502,335,2.955,342,3.357,378,2.052,390,5.027,729,3.69,733,3.357,762,3.357,763,3.357,774,5.57,775,6.242,776,4.769,777,5.548,778,5.548,779,5.548,780,6.009,781,6.009,782,6.009,783,6.009,784,6.009,785,6.009,786,6.009,787,3.438,788,3.438,789,3.438,790,3.438,791,3.438,792,3.438,793,3.438,794,3.438,795,3.438,796,3.438,797,5.548,798,5.548,799,5.548,800,4.194,801,4.609,802,4.135,803,2.682,804,4.81,805,4.81,806,3.69,807,4.81,808,4.81,809,4.135,810,4.81,811,3.357,812,4.81,813,3.357,814,4.81,815,4.81,816,4.81,817,4.81,818,4.81,819,4.81,820,4.135,821,4.81]],["title/components/EditMainUserProfileCardComponent.html",[156,0.157,270,0.48]],["body/components/EditMainUserProfileCardComponent.html",[3,0.118,4,0.101,5,0.101,7,0.135,8,0.3,9,1.4,16,2.25,18,3.1,20,0.384,33,0.798,34,0.426,37,0.496,38,0.019,39,0.623,43,0.384,44,0.244,45,0.352,46,0.384,58,0.573,64,0.757,76,0.635,77,0.635,81,0.411,88,2.456,91,0.482,93,1.073,94,0.207,98,1.203,102,0.118,103,0.037,154,0.011,155,0.011,156,0.221,157,0.396,158,0.608,159,0.444,160,0.444,161,0.444,165,0.444,166,1.12,167,1.12,168,0.534,170,0.644,171,0.644,173,2.28,174,0.644,176,0.644,178,2.049,181,2.41,182,2.304,183,1.814,184,3.018,194,2.304,195,2.973,200,1.497,203,1.268,204,1.203,205,0.396,212,0.814,213,1.59,215,1.59,216,1.59,218,1.497,237,2.456,244,0.444,245,0.644,246,0.644,247,0.444,248,0.83,249,0.444,250,0.757,251,0.396,252,0.419,253,0.396,254,0.444,255,0.396,256,0.444,257,0.444,258,0.396,259,0.444,260,0.396,261,0.444,262,0.396,263,0.444,264,0.644,265,0.396,266,1.029,267,0.608,268,0.994,269,0.644,270,0.74,271,1.051,272,0.83,273,0.396,274,0.444,275,0.444,276,0.396,277,0.444,278,0.396,279,0.444,280,0.396,281,0.444,282,0.396,283,0.444,284,0.444,285,0.396,286,0.444,287,0.396,288,0.419,289,0.372,290,0.419,291,0.444,292,0.396,293,0.396,294,0.444,295,0.444,296,0.396,297,0.573,298,0.444,299,0.396,300,0.444,301,0.396,302,0.444,303,0.396,304,0.396,305,0.444,306,0.396,307,0.444,308,0.396,309,0.444,310,0.396,311,0.444,312,0.419,313,0.444,314,0.396,315,0.419,316,0.444,317,0.396,318,0.444,319,0.444,320,0.396,321,0.444,322,0.396,323,0.444,324,0.444,325,0.396,326,0.444,327,0.444,328,0.396,329,0.757,330,0.444,331,0.444,451,1.59,565,2.379,583,1.59,748,2.971,750,3.098,764,2.629,800,3.075,801,3.379,803,2.456,822,4.863,823,5.345,824,4.863,825,1.814,826,2.052,827,2.832,828,2.832,829,3.877,830,3.974,831,4.884,832,5.682,833,5.682,834,4.454,835,4.405,836,2.612,837,3.039,838,3.039,839,3.039,840,2.121,841,3.075,842,3.039,843,3.039,844,3.039,845,3.039,846,2.121,847,2.331,848,2.612,849,1.694,850,3.039,851,2.331,852,4.359,853,2.331,854,3.786,855,3.039,856,5.181,857,3.039,858,4.405,859,3.039,860,3.039,861,2.612,862,3.039,863,3.039,864,3.786,865,3.039,866,2.612,867,2.612,868,2.612,869,2.612,870,2.121,871,2.612,872,2.121,873,3.379,874,2.832,875,3.786,876,3.786,877,3.786,878,2.832,879,3.786,880,3.379,881,3.379,882,2.5,883,2.643,884,2.973,885,3.786,886,4.405,887,3.075,888,3.075,889,3.075,890,3.786]],["title/components/EditUserProfileCardComponent.html",[156,0.157,273,0.48]],["body/components/EditUserProfileCardComponent.html",[3,0.167,4,0.144,5,0.144,38,0.018,39,0.609,44,0.256,58,0.73,81,0.294,91,0.416,94,0.294,102,0.167,103,0.053,154,0.014,155,0.014,156,0.266,157,0.561,158,0.774,159,0.63,160,0.63,161,0.63,165,0.63,166,1.143,167,1.143,168,0.619,170,0.819,171,0.819,174,0.819,176,0.819,205,0.561,212,1.156,244,0.63,245,0.819,246,0.819,247,0.63,248,0.963,249,0.63,250,0.91,251,0.561,252,0.595,253,0.561,254,0.63,255,0.561,256,0.63,257,0.63,258,0.561,259,0.63,260,0.561,261,0.63,262,0.561,263,0.63,264,0.819,265,0.561,266,1.085,267,0.595,268,0.858,269,0.819,270,0.561,271,1.031,272,0.963,273,0.858,274,0.63,275,0.63,276,0.561,277,0.63,278,0.561,279,0.63,280,0.561,281,0.63,282,0.561,283,0.63,284,0.63,285,0.561,286,0.63,287,0.561,288,0.595,289,0.528,290,0.595,291,0.63,292,0.561,293,0.561,294,0.63,295,0.63,296,0.561,297,0.73,298,0.63,299,0.561,300,0.63,301,0.561,302,0.63,303,0.561,304,0.561,305,0.63,306,0.561,307,0.63,308,0.561,309,0.63,310,0.561,311,0.63,312,0.595,313,0.63,314,0.561,315,0.595,316,0.63,317,0.561,318,0.63,319,0.63,320,0.561,321,0.63,322,0.561,323,0.63,324,0.63,325,0.561,326,0.63,327,0.63,328,0.561,329,0.91,330,0.63,331,0.63,774,3.308,800,3.912,801,4.299,824,3.01,825,2.574,826,2.466,827,3.603,828,3.603,873,4.299,874,3.603,875,4.818,882,2.466,883,2.607,884,2.932,890,4.818]],["title/injectables/EmojiService.html",[0,0.989,891,2.575]],["body/injectables/EmojiService.html",[0,1.696,2,2.302,3,0.203,4,0.174,5,0.174,7,0.232,8,0.431,9,1.579,20,0.552,34,0.421,37,0.552,38,0.019,43,0.456,44,0.203,45,0.405,46,0.456,64,0.764,76,0.641,77,0.641,84,2.577,91,0.389,94,0.356,100,2.433,101,2.302,102,0.203,103,0.065,114,1.048,136,2.433,154,0.015,155,0.015,190,1.28,755,2.917,891,4.416,892,6.075,893,5.421,894,4.497,895,5.847,896,4.854,897,6.075,898,6.327,899,4.748,900,5.232,901,5.232,902,5.232,903,5.847,904,5.847,905,4.854,906,5.232,907,6.327,908,5.232,909,5.232,910,6.327,911,5.232,912,5.232,913,5.232]],["title/components/ExpandableButtonComponent.html",[156,0.157,205,0.48]],["body/components/ExpandableButtonComponent.html",[3,0.133,4,0.114,5,0.114,7,0.153,8,0.327,9,0.798,20,0.42,33,0.871,34,0.45,37,0.42,38,0.019,39,0.529,43,0.3,44,0.215,45,0.311,46,0.3,58,0.908,64,0.811,76,0.736,77,0.736,81,0.234,91,0.487,94,0.234,102,0.133,103,0.042,138,0.967,154,0.012,155,0.012,156,0.237,157,0.626,158,0.664,159,0.502,160,0.502,161,0.502,163,2.4,165,0.502,166,1.129,167,1.129,168,0.632,169,3.069,170,0.703,171,0.703,172,1.418,174,0.703,176,0.703,178,1.599,184,2.58,190,0.871,202,0.798,204,1.361,205,0.782,207,5.102,210,2.052,212,0.922,244,0.502,245,0.703,246,0.703,247,0.502,248,0.878,249,0.502,250,0.811,251,0.448,252,0.475,253,0.448,254,0.502,255,0.448,256,0.502,257,0.502,258,0.448,259,0.502,260,0.448,261,0.502,262,0.448,263,0.502,264,0.703,265,0.448,266,0.924,267,0.475,268,0.782,269,0.703,270,0.448,271,0.829,272,0.878,273,0.448,274,0.983,275,0.502,276,0.448,277,0.502,278,0.448,279,0.502,280,0.448,281,0.502,282,0.448,283,0.502,284,0.502,285,0.448,286,0.502,287,0.448,288,0.475,289,0.421,290,0.475,291,0.502,292,0.448,293,0.448,294,0.502,295,0.502,296,0.448,297,0.626,298,0.502,299,0.448,300,0.502,301,0.448,302,0.502,303,0.448,304,0.448,305,0.502,306,0.448,307,0.502,308,0.448,309,0.502,310,0.448,311,0.502,312,0.475,313,0.502,314,0.448,315,0.475,316,0.502,317,0.448,318,0.502,319,0.502,320,0.448,321,0.502,322,0.448,323,0.502,324,0.502,325,0.448,326,0.502,327,0.502,328,0.448,329,0.502,330,0.502,331,0.502,339,3.357,405,2.506,418,2.369,484,5.782,745,4.769,747,2.637,748,2.96,750,2.369,762,4.194,763,4.194,773,5.265,811,3.357,826,2.197,914,6.283,915,2.955,916,3.357,917,3.69,918,3.69,919,4.135,920,4.81,921,4.81,922,6.727,923,5.548,924,6.324,925,6.009,926,6.009,927,3.311,928,4.851,929,4.81,930,3.438,931,4.256,932,4.81,933,4.81,934,4.81,935,3.438,936,3.438,937,3.438,938,3.438,939,3.438,940,4.256,941,4.81,942,3.438,943,3.438,944,2.637,945,3.438,946,4.81,947,4.81,948,3.69,949,4.135,950,4.81,951,4.135,952,5.9]],["title/components/HeaderComponent.html",[156,0.157,276,0.48]],["body/components/HeaderComponent.html",[1,3.985,3,0.141,4,0.121,5,0.121,7,0.162,8,0.341,9,1.327,11,2.571,16,2.706,18,3.108,20,0.437,33,0.906,34,0.413,37,0.318,38,0.019,39,0.587,43,0.318,44,0.222,45,0.361,46,0.318,58,0.651,64,0.731,76,0.446,77,0.446,81,0.419,91,0.525,94,0.248,98,1.442,102,0.141,103,0.045,136,1.693,138,1.023,151,2.793,154,0.012,155,0.012,156,0.244,157,0.474,158,0.691,159,0.532,160,0.532,161,0.532,165,0.532,166,1.133,167,1.133,168,0.579,170,0.731,171,0.731,172,1.461,174,0.731,176,0.731,178,2.864,183,2.173,184,3.178,186,2.85,202,0.845,204,1.442,205,0.474,212,0.976,244,0.532,245,0.731,246,0.731,247,0.532,248,0.9,249,0.532,250,0.836,251,0.474,252,0.503,253,0.474,254,0.532,255,0.474,256,0.532,257,0.532,258,0.474,259,0.532,260,0.474,261,0.532,262,0.474,263,0.532,264,0.731,265,0.474,266,0.943,267,0.503,268,0.84,269,0.731,270,0.474,271,0.85,272,0.9,273,0.474,274,0.532,275,0.532,276,0.802,277,0.532,278,0.474,279,0.532,280,0.474,281,0.532,282,0.474,283,0.532,284,0.532,285,0.474,286,0.532,287,0.802,288,0.503,289,0.701,290,0.503,291,0.532,292,0.474,293,0.474,294,0.532,295,0.532,296,0.474,297,0.651,298,0.532,299,0.474,300,0.532,301,0.474,302,0.532,303,0.474,304,0.474,305,0.532,306,0.474,307,0.532,308,0.474,309,0.532,310,0.474,311,0.532,312,0.503,313,0.532,314,0.474,315,0.503,316,0.532,317,0.474,318,0.532,319,0.532,320,0.474,321,0.532,322,0.474,323,0.532,324,0.532,325,0.474,326,0.532,327,0.532,328,0.474,329,0.532,330,0.532,331,0.532,375,2.541,405,2.088,418,2.465,451,2.618,526,1.793,565,1.303,572,3.129,748,3.18,750,3.286,760,2.03,829,3.959,849,2.03,852,2.793,870,2.541,872,2.541,916,3.493,917,3.839,918,3.839,953,3.129,954,5.005,955,4.916,956,5.005,957,5.005,958,6.158,959,5.005,960,3.641,961,3.641,962,3.641,963,3.641,964,2.793,965,2.793,966,3.641,967,3.641,968,3.641,969,3.641,970,3.129,971,3.129,972,3.641,973,3.129,974,3.641,975,3.641,976,4.302]],["title/components/HomeComponent.html",[156,0.157,278,0.48]],["body/components/HomeComponent.html",[1,3.192,3,0.12,4,0.103,5,0.103,7,0.137,8,0.303,9,1.707,11,2.154,12,4.494,13,4.011,16,2.267,17,3.649,18,3.184,20,0.389,26,2.519,30,4.391,31,3.68,32,4.921,34,0.459,37,0.593,38,0.019,39,0.57,43,0.269,44,0.203,45,0.293,46,0.269,58,0.745,64,1.022,72,3.137,76,0.857,77,0.857,79,2.331,81,0.463,88,2.485,91,0.534,93,0.752,94,0.21,95,1.223,98,1.223,102,0.12,103,0.038,107,3.83,108,2.654,109,2.369,110,2.155,111,1.985,112,2.654,113,2.155,114,1.048,115,2.155,118,2.155,137,2.195,138,0.868,139,1.595,140,1.985,141,2.369,142,2.369,153,2.654,154,0.011,155,0.011,156,0.223,157,0.402,158,0.615,159,0.451,160,0.451,161,0.451,165,0.451,166,1.121,167,1.121,168,0.538,169,2.783,170,0.651,171,0.651,172,1.336,174,0.651,176,0.651,185,3.192,202,0.717,205,0.402,209,2.369,210,1.843,212,0.828,229,2.155,244,0.451,245,0.651,246,0.651,247,0.451,248,0.836,249,0.451,250,0.764,251,0.402,252,0.426,253,0.402,254,0.451,255,0.402,256,0.451,257,0.451,258,0.402,259,0.451,260,0.402,261,0.451,262,0.402,263,0.451,264,0.651,265,0.402,266,0.887,267,0.426,268,0.745,269,0.651,270,0.402,271,0.79,272,0.836,273,0.402,274,0.451,275,0.451,276,0.745,277,0.451,278,0.745,279,0.451,280,0.402,281,0.451,282,0.402,283,0.451,284,0.451,285,0.402,286,0.451,287,0.402,288,0.426,289,0.378,290,0.79,291,0.451,292,0.402,293,0.402,294,0.451,295,0.451,296,0.402,297,0.58,298,0.451,299,0.402,300,0.451,301,0.745,302,0.451,303,0.402,304,0.402,305,0.451,306,0.402,307,0.451,308,0.402,309,0.451,310,0.402,311,0.451,312,0.426,313,0.451,314,0.402,315,0.426,316,0.451,317,0.402,318,0.451,319,0.451,320,0.745,321,0.451,322,0.402,323,0.451,324,0.451,325,0.402,326,0.451,327,0.451,328,0.402,329,0.451,330,0.451,331,0.451,358,2.82,375,2.155,479,4.011,526,1.521,530,3.418,657,4.391,699,2.369,849,1.722,928,4.011,977,2.654,978,4.456,979,4.456,980,4.494,981,5.218,982,3.121,983,5.725,984,4.456,985,5.725,986,3.088,987,3.088,988,3.088,989,4.456,990,3.088,991,3.088,992,3.088,993,3.088,994,3.088,995,3.088,996,4.456,997,3.088,998,3.088,999,3.088,1000,3.418,1001,3.088,1002,3.088,1003,3.088,1004,3.088,1005,3.088,1006,3.088,1007,3.088,1008,3.088,1009,3.088,1010,3.088,1011,3.088,1012,2.654,1013,2.369,1014,2.654,1015,2.654,1016,3.088,1017,4.456,1018,2.654,1019,3.088,1020,3.088,1021,2.654,1022,3.088,1023,3.088,1024,3.088,1025,3.088,1026,3.088,1027,4.456,1028,5.725,1029,5.725,1030,4.456,1031,4.456]],["title/components/ImpressComponent.html",[156,0.157,280,0.48]],["body/components/ImpressComponent.html",[3,0.165,4,0.142,5,0.142,7,0.189,9,0.989,20,0.485,33,1.007,34,0.345,37,0.372,38,0.019,39,0.563,43,0.372,44,0.24,45,0.239,46,0.372,58,0.724,64,0.623,81,0.29,91,0.413,94,0.29,102,0.165,103,0.053,154,0.013,155,0.013,156,0.264,157,0.555,158,0.768,159,0.623,160,0.623,161,0.623,165,0.623,166,1.142,167,1.142,168,0.617,170,0.813,171,0.623,174,0.813,176,0.813,202,0.989,205,0.555,244,0.623,245,0.813,246,0.813,247,0.623,248,0.959,249,0.623,250,0.905,251,0.555,252,0.588,253,0.555,254,0.623,255,0.555,256,0.623,257,0.623,258,0.555,259,0.623,260,0.555,261,0.623,262,0.555,263,0.623,264,0.813,265,0.555,266,0.995,267,0.588,268,0.854,269,0.813,270,0.555,271,0.906,272,0.959,273,0.555,274,0.623,275,0.623,276,0.555,277,0.623,278,0.555,279,0.623,280,0.854,281,0.623,282,0.555,283,0.623,284,0.623,285,0.555,286,0.623,287,0.555,288,0.588,289,0.522,290,0.588,291,0.623,292,0.555,293,0.555,294,0.623,295,0.623,296,0.555,297,0.724,298,0.623,299,0.555,300,0.623,301,0.555,302,0.623,303,0.555,304,0.555,305,0.623,306,0.555,307,0.623,308,0.555,309,0.623,310,0.555,311,0.623,312,0.588,313,0.623,314,0.555,315,0.588,316,0.623,317,0.555,318,0.623,319,0.623,320,0.555,321,0.623,322,0.555,323,0.623,324,0.623,325,0.555,326,0.623,327,0.623,328,0.555,329,0.623,330,0.623,331,0.623,882,2.448,883,2.587,1032,3.664,1033,5.562,1034,5.562,1035,5.562,1036,5.641,1037,3.664,1038,6.001,1039,4.262,1040,4.262,1041,3.664,1042,4.267,1043,4.781,1044,4.781,1045,4.781,1046,4.781,1047,4.781,1048,4.781,1049,4.781,1050,4.781,1051,4.262,1052,4.262]],["title/components/LegalFooterComponent.html",[156,0.157,282,0.48]],["body/components/LegalFooterComponent.html",[3,0.169,4,0.145,5,0.145,38,0.019,39,0.566,44,0.218,58,0.733,81,0.296,91,0.419,94,0.296,102,0.169,103,0.054,154,0.014,155,0.014,156,0.305,157,0.566,158,0.778,159,0.635,160,0.635,161,0.635,165,0.635,166,1.143,167,1.143,168,0.621,170,0.823,171,0.823,174,0.823,176,0.823,186,2.35,199,1.222,205,0.566,212,1.165,244,0.635,245,0.823,246,0.823,247,0.635,248,0.966,249,0.635,250,0.913,251,0.566,252,0.6,253,0.566,254,0.635,255,0.566,256,0.635,257,0.635,258,0.566,259,0.635,260,0.566,261,0.635,262,0.566,263,0.635,264,0.823,265,0.566,266,1.001,267,0.6,268,0.861,269,0.823,270,0.566,271,0.913,272,0.966,273,0.566,274,0.635,275,0.635,276,0.566,277,0.635,278,0.566,279,0.635,280,0.566,281,0.635,282,0.861,283,1.044,284,0.635,285,0.566,286,0.635,287,0.566,288,0.6,289,0.533,290,0.6,291,0.635,292,0.566,293,0.566,294,0.635,295,0.635,296,0.566,297,0.733,298,0.635,299,0.566,300,0.635,301,0.566,302,0.635,303,0.566,304,0.566,305,0.635,306,0.566,307,0.635,308,0.566,309,0.635,310,0.566,311,0.635,312,0.6,313,0.635,314,0.566,315,0.6,316,0.635,317,0.566,318,0.635,319,0.635,320,0.566,321,0.635,322,0.566,323,0.635,324,0.635,325,0.566,326,0.635,327,0.635,328,0.566,329,0.635,330,0.635,331,0.635,397,2.62,435,4.842,555,2.274,826,2.475,1042,4.321,1053,3.736,1054,3.736,1055,4.842,1056,5.634,1057,5.634,1058,5.634,1059,6.612,1060,5.634,1061,5.634,1062,4.321]],["title/components/LogOutCardComponent.html",[156,0.157,287,0.48]],["body/components/LogOutCardComponent.html",[3,0.136,4,0.117,5,0.117,7,0.156,8,0.332,9,0.815,18,3.182,20,0.426,33,0.884,34,0.434,37,0.529,38,0.019,39,0.573,43,0.306,44,0.218,45,0.357,46,0.306,58,0.635,64,0.886,81,0.239,91,0.45,93,0.855,94,0.239,102,0.136,103,0.043,154,0.012,155,0.012,156,0.239,157,0.457,158,0.674,159,0.513,160,0.513,161,0.513,165,0.513,166,1.13,167,1.13,168,0.57,170,0.713,171,0.713,174,0.713,176,0.713,178,2.963,184,3.299,186,2.751,204,1.39,205,0.457,212,0.941,213,2.553,244,0.513,245,0.713,246,0.713,247,0.513,248,0.886,249,0.513,250,0.82,251,0.457,252,0.484,253,0.457,254,0.513,255,0.457,256,0.513,257,0.513,258,0.457,259,0.513,260,0.457,261,0.513,262,0.457,263,0.513,264,0.713,265,0.457,266,0.989,267,0.484,268,0.829,269,0.713,270,0.457,271,0.91,272,0.886,273,0.457,274,0.513,275,0.513,276,0.457,277,0.513,278,0.457,279,0.513,280,0.457,281,0.513,282,0.457,283,0.513,284,0.513,285,0.457,286,0.513,287,0.789,288,0.967,289,0.939,290,0.484,291,0.513,292,0.635,293,0.457,294,0.513,295,0.513,296,0.457,297,0.635,298,0.513,299,0.457,300,0.513,301,0.457,302,0.513,303,0.457,304,0.457,305,0.513,306,0.457,307,0.513,308,0.457,309,0.513,310,0.457,311,0.513,312,0.484,313,0.513,314,0.457,315,0.484,316,0.513,317,0.457,318,0.513,319,0.513,320,0.457,321,0.513,322,0.457,323,0.513,324,0.513,325,0.457,326,0.513,327,0.513,328,0.457,329,0.82,330,0.513,331,0.513,451,1.836,489,3.017,565,2.47,748,3.138,750,3.249,760,1.957,822,4.952,825,2.095,826,2.221,827,3.137,828,3.137,829,2.256,836,3.017,840,2.45,841,3.406,846,2.45,851,2.692,853,2.692,870,2.45,872,2.45,874,3.137,916,2.45,917,2.692,918,2.692,955,4.821,964,5.442,965,5.442,970,3.017,971,3.017,1042,3.743,1062,3.743,1063,5.477,1064,6.062,1065,6.062,1066,6.062,1067,6.062,1068,3.51,1069,3.51,1070,3.51,1071,3.51,1072,3.017,1073,3.017,1074,3.017,1075,3.017,1076,2.692,1077,3.51,1078,3.017,1079,3.51,1080,3.017,1081,3.51,1082,3.51,1083,3.51,1084,3.51]],["title/components/LoginComponent.html",[156,0.157,285,0.48]],["body/components/LoginComponent.html",[3,0.08,4,0.069,5,0.069,7,0.092,8,0.224,9,1.41,11,1.757,16,1.848,20,0.287,34,0.443,37,0.607,38,0.019,39,0.603,43,0.496,44,0.254,45,0.362,46,0.496,50,3.064,56,1.967,58,0.791,64,0.959,75,1.444,76,0.723,77,0.723,79,1.724,81,0.413,88,1.837,91,0.462,93,0.505,94,0.141,98,0.821,102,0.08,103,0.026,114,0.935,134,1.598,138,1.312,139,1.671,154,0.008,155,0.008,156,0.217,157,0.27,158,0.455,159,0.303,160,0.303,161,0.303,165,0.303,166,1.085,167,1.085,168,0.439,170,0.481,171,0.481,172,1.047,173,1.804,174,0.481,176,0.481,181,1.906,182,1.724,186,1.947,190,1.127,194,1.724,195,2.442,197,1.837,198,1.837,199,1.658,200,2.904,202,0.482,203,0.865,205,0.27,212,0.556,214,2.034,215,1.085,216,1.085,218,1.623,227,2.3,237,1.837,244,0.303,245,0.481,246,0.481,247,0.303,248,0.682,249,0.303,250,0.599,251,0.27,252,0.286,253,0.27,254,0.303,255,0.608,256,0.481,257,0.303,258,0.27,259,0.303,260,0.27,261,0.303,262,0.27,263,0.303,264,0.481,265,0.27,266,0.744,267,0.286,268,0.608,269,0.481,270,0.27,271,0.644,272,0.682,273,0.27,274,0.303,275,0.303,276,0.27,277,0.303,278,0.27,279,0.303,280,0.27,281,0.303,282,0.608,283,0.481,284,0.303,285,0.608,286,0.303,287,0.27,288,0.991,289,0.254,290,0.286,291,0.303,292,0.27,293,0.27,294,0.303,295,0.303,296,0.27,297,0.706,298,0.303,299,0.27,300,0.303,301,0.27,302,0.303,303,0.27,304,0.27,305,0.303,306,0.27,307,0.303,308,0.27,309,0.303,310,0.27,311,0.303,312,0.286,313,0.303,314,0.27,315,0.286,316,0.303,317,0.27,318,0.303,319,0.303,320,0.27,321,0.303,322,0.27,323,0.599,324,0.303,325,0.608,326,0.682,327,0.303,328,0.27,329,0.303,330,0.303,331,0.303,334,2.664,393,1.448,395,1.448,397,1.532,398,1.837,410,2.3,428,1.967,430,1.837,437,2.527,443,4.012,446,2.527,447,1.967,450,1.757,454,2.118,476,3.47,491,4.122,492,1.837,507,2.786,515,3.581,516,2.603,525,1.783,526,1.022,529,2.832,530,4.359,555,1.085,556,1.238,561,2.832,565,1.671,570,4.012,571,4.012,581,2.118,583,2.144,612,2.118,630,1.837,716,1.724,717,3.081,764,1.967,771,2.832,803,1.837,811,2.3,813,2.3,826,1.623,830,3.144,849,1.157,878,2.118,882,2.241,883,2.643,884,2.664,885,2.832,887,2.3,888,2.3,889,2.3,951,2.832,973,1.783,982,3.519,1085,1.783,1086,2.118,1087,3.295,1088,3.295,1089,4.659,1090,2.635,1091,4.098,1092,2.861,1093,3.258,1094,3.295,1095,3.295,1096,3.295,1097,3.295,1098,2.3,1099,4.668,1100,4.668,1101,4.668,1102,4.668,1103,4.668,1104,2.527,1105,2.074,1106,2.3,1107,2.118,1108,2.118,1109,3.295,1110,2.074,1111,5.896,1112,4.82,1113,4.668,1114,3.168,1115,3.295,1116,2.074,1117,5.556,1118,3.295,1119,2.074,1120,2.832,1121,3.295,1122,4.012,1123,4.012,1124,2.527,1125,2.832,1126,3.295,1127,2.074,1128,3.295,1129,4.668,1130,3.295,1131,2.832,1132,2.074,1133,4.668,1134,2.074,1135,4.668,1136,2.074,1137,2.832,1138,2.074,1139,2.832,1140,2.3,1141,2.3,1142,3.039,1143,2.074,1144,3.295,1145,3.295,1146,2.527,1147,2.832,1148,3.295,1149,3.295,1150,2.074,1151,2.074,1152,2.074,1153,2.074,1154,2.074,1155,2.832,1156,2.832,1157,3.295,1158,2.074,1159,2.074,1160,2.074,1161,2.074,1162,3.581,1163,2.074,1164,2.074,1165,2.074,1166,2.074,1167,2.074,1168,1.238,1169,1.448,1170,2.074,1171,3.001,1172,3.784,1173,2.074,1174,2.074,1175,2.861,1176,4.098,1177,4.377,1178,2.074,1179,2.074,1180,2.074,1181,4.668,1182,3.295,1183,3.295,1184,2.074,1185,3.295,1186,3.295,1187,2.074,1188,2.074,1189,1.591,1190,2.074,1191,2.074,1192,4.098,1193,1.783,1194,2.074,1195,2.074,1196,2.074,1197,2.527,1198,2.074,1199,2.074,1200,2.074,1201,2.074,1202,2.074,1203,3.039,1204,3.523,1205,4.098,1206,1.448,1207,3.295,1208,2.074,1209,2.074,1210,2.074,1211,2.074,1212,2.832,1213,3.295,1214,3.258,1215,2.3,1216,3.295,1217,4.012,1218,2.3,1219,3.295,1220,3.295,1221,4.668,1222,2.832,1223,3.295,1224,3.295,1225,2.118,1226,3.001,1227,3.295,1228,3.295,1229,4.012,1230,3.295,1231,3.295,1232,2.527]],["title/components/MainUserProfileCardComponent.html",[156,0.157,292,0.48]],["body/components/MainUserProfileCardComponent.html",[1,3.872,3,0.123,4,0.106,5,0.106,7,0.141,8,0.309,9,1.055,18,3.197,20,0.396,33,0.823,34,0.424,37,0.463,38,0.019,39,0.624,43,0.396,44,0.225,45,0.368,46,0.396,58,0.591,64,0.776,76,0.389,77,0.389,81,0.361,91,0.5,93,0.773,94,0.216,98,1.256,102,0.123,103,0.039,148,3.172,149,3.485,154,0.011,155,0.011,156,0.226,157,0.413,158,0.627,159,0.464,160,0.464,161,0.464,165,0.464,166,1.123,167,1.123,168,0.545,170,0.664,171,0.664,172,1.357,174,0.664,176,0.664,178,2.113,183,1.894,184,3.269,202,0.736,204,1.256,205,0.413,212,0.85,213,1.66,244,0.464,245,0.664,246,0.664,247,0.464,248,0.847,249,0.464,250,0.776,251,0.413,252,0.438,253,0.413,254,0.464,255,0.413,256,0.464,257,0.464,258,0.413,259,0.464,260,0.413,261,0.464,262,0.413,263,0.464,264,0.664,265,0.413,266,0.933,267,0.627,268,0.946,269,0.664,270,0.591,271,1.057,272,0.847,273,0.413,274,0.464,275,0.464,276,0.413,277,0.464,278,0.413,279,0.464,280,0.413,281,0.464,282,0.413,283,0.464,284,0.464,285,0.413,286,0.464,287,0.413,288,0.438,289,0.389,290,0.438,291,0.464,292,0.755,293,0.413,294,0.464,295,0.464,296,0.413,297,0.591,298,0.464,299,0.413,300,0.464,301,0.413,302,0.464,303,0.413,304,0.413,305,0.464,306,0.413,307,0.464,308,0.413,309,0.464,310,0.413,311,0.464,312,0.438,313,0.464,314,0.413,315,0.438,316,0.464,317,0.413,318,0.464,319,0.464,320,0.413,321,0.464,322,0.413,323,0.464,324,0.464,325,0.413,326,0.464,327,0.464,328,0.413,329,0.776,330,0.464,331,0.464,375,2.214,405,1.323,451,2.377,565,2.45,748,3.022,750,3.238,760,1.769,800,3.172,822,4.848,823,2.434,824,2.214,825,1.894,826,2.102,827,2.921,828,2.921,829,3.944,831,4.983,834,4.563,840,2.214,841,3.172,846,2.214,847,2.434,848,2.727,851,2.434,852,4.072,853,2.434,861,2.727,864,3.906,866,2.727,867,2.727,868,2.727,869,2.727,870,3.172,871,2.727,872,3.172,874,2.921,882,2,883,2.113,884,2.377,976,3.906,1063,5.273,1072,2.727,1073,2.727,1074,2.727,1075,2.727,1076,5.328,1078,2.727,1080,2.727,1233,5.97,1234,5.797,1235,4.544,1236,4.544,1237,3.173,1238,3.173,1239,4.544,1240,3.173,1241,3.173,1242,3.173,1243,3.173,1244,5.797,1245,3.906,1246,4.544,1247,4.544,1248,4.544]],["title/components/MemberListComponent.html",[156,0.157,293,0.48]],["body/components/MemberListComponent.html",[3,0.148,4,0.127,5,0.127,7,0.169,8,0.351,9,0.883,18,2.575,20,0.45,33,0.689,34,0.419,37,0.51,38,0.019,39,0.587,43,0.332,44,0.227,45,0.378,46,0.332,58,0.671,64,0.916,81,0.259,91,0.53,93,0.927,94,0.259,98,1.507,102,0.148,103,0.047,154,0.012,155,0.012,156,0.25,157,0.495,158,0.712,159,0.556,160,0.556,161,0.556,165,0.556,166,1.135,167,1.135,168,0.616,170,0.754,171,0.754,172,1.495,174,0.754,176,0.754,178,2.721,184,2.917,202,0.883,204,2.317,205,0.495,213,1.99,228,3.078,244,0.556,245,0.754,246,0.754,247,0.556,248,0.916,249,0.556,250,0.855,251,0.495,252,0.525,253,0.671,254,0.556,255,0.495,256,0.556,257,0.556,258,0.495,259,0.556,260,0.495,261,0.556,262,0.495,263,0.556,264,0.754,265,0.495,266,0.958,267,0.525,268,0.817,269,0.754,270,0.495,271,0.933,272,0.916,273,0.495,274,0.556,275,0.556,276,0.495,277,0.556,278,0.495,279,0.556,280,0.495,281,0.556,282,0.495,283,0.556,284,0.556,285,0.495,286,0.556,287,0.495,288,0.525,289,0.466,290,0.712,291,0.556,292,0.495,293,0.817,294,1.01,295,0.556,296,0.495,297,0.671,298,0.556,299,0.495,300,0.556,301,0.495,302,0.556,303,0.495,304,0.495,305,0.556,306,0.495,307,0.556,308,0.495,309,0.556,310,0.495,311,0.556,312,0.525,313,0.556,314,0.495,315,0.525,316,0.556,317,0.495,318,0.556,319,0.556,320,0.495,321,0.556,322,0.495,323,0.556,324,0.556,325,0.495,326,0.556,327,0.556,328,0.671,329,0.556,330,0.556,331,0.556,339,3.6,341,5.392,345,2.918,350,5.392,357,4.811,376,5.303,393,3.6,565,2.245,701,3.078,746,4.378,748,2.882,750,2.54,759,2.271,760,2.121,761,2.656,840,2.656,841,2.656,846,2.656,899,4.084,1012,3.27,1013,2.918,1014,3.27,1249,5.942,1250,3.27,1251,5.157,1252,5.157,1253,5.851,1254,3.805,1255,5.157,1256,3.805,1257,3.805,1258,3.805,1259,3.805,1260,3.805,1261,3.805,1262,3.805,1263,3.805,1264,3.805,1265,3.805,1266,3.805,1267,5.157]],["title/components/MessageBoxComponent.html",[156,0.157,296,0.48]],["body/components/MessageBoxComponent.html",[3,0.148,4,0.127,5,0.127,7,0.17,8,0.352,20,0.452,34,0.419,37,0.452,38,0.019,39,0.546,43,0.334,44,0.228,45,0.368,46,0.334,50,2.16,58,0.674,64,0.559,75,1.602,76,0.635,77,0.635,81,0.352,91,0.436,94,0.261,102,0.148,103,0.047,114,0.767,134,1.527,154,0.013,155,0.013,156,0.25,157,0.498,158,0.715,159,0.559,160,0.559,161,0.559,165,0.559,166,1.136,167,1.136,168,0.636,170,0.757,171,0.757,173,2.583,174,0.757,176,0.757,182,2.709,190,1.063,194,2.709,195,3.29,197,2.887,198,2.887,199,1.076,200,3.41,203,1.597,205,0.498,214,1.37,215,2.003,216,2.003,244,0.559,245,0.757,246,0.757,247,0.559,248,0.919,249,0.559,250,0.858,251,0.498,252,0.528,253,0.498,254,0.559,255,0.498,256,0.559,257,0.559,258,0.498,259,0.559,260,0.498,261,0.559,262,0.498,263,0.559,264,0.757,265,0.498,266,0.96,267,0.528,268,0.819,269,0.757,270,0.498,271,0.868,272,0.919,273,0.498,274,0.559,275,0.559,276,0.498,277,0.559,278,0.498,279,0.559,280,0.498,281,0.559,282,0.498,283,0.559,284,0.559,285,0.498,286,0.559,287,0.498,288,0.528,289,0.469,290,0.528,291,0.559,292,0.498,293,0.498,294,0.559,295,0.559,296,0.819,297,0.939,298,0.559,299,0.498,300,0.559,301,0.498,302,0.559,303,0.498,304,0.498,305,0.559,306,0.498,307,0.559,308,0.498,309,0.559,310,0.498,311,0.559,312,0.528,313,0.559,314,0.498,315,0.528,316,0.559,317,0.498,318,0.559,319,0.559,320,0.498,321,0.559,322,0.498,323,0.559,324,0.559,325,0.498,326,0.559,327,0.559,328,0.498,329,0.559,330,0.559,331,0.559,405,2.448,418,2.551,421,3.615,425,4.096,459,3.615,491,3.753,565,2.101,592,3.972,757,4.451,776,5.045,1114,2.134,1268,5.311,1269,3.29,1270,5.179,1271,5.179,1272,5.179,1273,6.288,1274,5.869,1275,5.869,1276,3.828,1277,3.828,1278,3.828,1279,3.828,1280,3.828,1281,3.828,1282,2.003,1283,2.461,1284,3.828,1285,2.936,1286,2.936,1287,3.828,1288,3.828,1289,3.828,1290,5.179,1291,5.179]],["title/components/MessageItemComponent.html",[156,0.157,299,0.48]],["body/components/MessageItemComponent.html",[3,0.1,4,0.086,5,0.086,7,0.114,8,0.265,9,1.559,11,2.315,13,3.607,16,2.436,17,3.282,18,2.069,20,0.34,26,2.307,30,4.022,31,3.37,33,0.706,34,0.459,37,0.586,38,0.019,39,0.571,43,0.491,44,0.239,45,0.396,46,0.566,58,0.507,64,0.926,72,2.707,75,1.206,76,0.776,77,0.776,81,0.431,84,2.774,91,0.521,92,2.187,93,0.628,94,0.175,95,1.02,98,1.02,102,0.1,103,0.032,104,1.329,109,1.977,110,1.799,111,1.657,113,1.799,114,1.128,118,1.799,134,1.747,136,2.438,138,0.724,139,2.016,140,1.657,141,1.977,142,1.977,154,0.009,155,0.009,156,0.201,157,0.335,158,0.538,159,0.377,160,0.377,161,0.377,165,0.377,166,1.106,167,1.106,168,0.493,170,0.57,171,0.57,172,1.202,174,0.57,176,0.57,190,1.197,202,0.598,204,1.02,205,0.335,244,0.377,245,0.57,246,0.57,247,0.377,248,0.766,249,0.377,250,0.687,251,0.335,252,0.356,253,0.335,254,0.377,255,0.335,256,0.377,257,0.377,258,0.335,259,0.377,260,0.335,261,0.377,262,0.335,263,0.377,264,0.57,265,0.335,266,0.823,267,0.356,268,0.683,269,0.57,270,0.335,271,0.818,272,0.766,273,0.335,274,0.377,275,0.377,276,0.335,277,0.377,278,0.335,279,0.377,280,0.335,281,0.377,282,0.335,283,0.377,284,0.377,285,0.335,286,0.377,287,0.335,288,0.356,289,0.316,290,0.356,291,0.377,292,0.335,293,0.335,294,0.377,295,0.377,296,0.335,297,0.825,298,0.377,299,0.683,300,0.377,301,0.335,302,0.377,303,0.335,304,0.335,305,0.377,306,0.335,307,0.377,308,0.335,309,0.377,310,0.335,311,0.377,312,0.356,313,0.377,314,0.335,315,0.356,316,0.377,317,0.335,318,0.377,319,0.377,320,0.335,321,0.377,322,0.683,323,0.57,324,0.377,325,0.335,326,0.377,327,0.377,328,0.507,329,0.377,330,0.377,331,0.377,347,1.269,405,2.471,418,1.92,421,2.721,425,3.282,434,1.657,459,2.721,526,1.269,629,1.538,741,3.282,744,3.282,746,2.721,747,1.977,748,2.583,750,1.92,754,1.657,755,3.686,756,1.657,759,1.538,760,1.437,761,1.799,806,1.977,849,1.437,896,2.991,899,1.799,905,1.977,927,2.327,982,1.538,1214,1.799,1215,1.799,1268,5.695,1282,3.314,1283,1.657,1285,2.991,1292,5.695,1293,2.215,1294,3.899,1295,3.899,1296,3.899,1297,4.702,1298,4.702,1299,4.702,1300,4.702,1301,3.37,1302,5.243,1303,3.899,1304,3.899,1305,5.243,1306,5.243,1307,5.243,1308,4.702,1309,4.702,1310,4.702,1311,5.631,1312,4.702,1313,3.955,1314,3.955,1315,3.899,1316,2.577,1317,2.577,1318,2.577,1319,2.577,1320,2.577,1321,2.577,1322,3.351,1323,2.577,1324,2.577,1325,2.577,1326,3.899,1327,2.577,1328,3.899,1329,2.577,1330,2.577,1331,2.577,1332,3.899,1333,2.577,1334,2.577,1335,2.577,1336,2.577,1337,2.577,1338,2.577,1339,2.577,1340,2.577,1341,3.361,1342,2.577,1343,3.351,1344,2.577,1345,2.577,1346,1.977,1347,2.577,1348,2.215,1349,2.215,1350,1.977,1351,2.215,1352,2.215,1353,3.899,1354,3.899,1355,2.577,1356,2.577,1357,4.507,1358,2.577,1359,2.577,1360,2.577,1361,2.577,1362,2.577,1363,2.215,1364,2.577,1365,2.577,1366,4.702,1367,2.577,1368,2.577,1369,2.577,1370,2.577,1371,2.215,1372,2.577,1373,2.577,1374,2.577,1375,3.899,1376,2.577,1377,2.577,1378,2.215,1379,4.702,1380,2.577,1381,3.899,1382,2.506,1383,2.215,1384,2.577,1385,4.507,1386,3.899,1387,3.351,1388,3.899,1389,3.899,1390,3.351,1391,3.899,1392,3.899,1393,3.899,1394,3.351,1395,2.991,1396,3.899,1397,2.991,1398,3.351,1399,3.899]],["title/components/NavigationComponent.html",[156,0.157,301,0.48]],["body/components/NavigationComponent.html",[3,0.162,4,0.139,5,0.139,7,0.186,34,0.38,38,0.019,39,0.561,44,0.213,45,0.343,58,0.848,75,1.7,76,0.752,77,0.752,81,0.285,91,0.503,94,0.285,102,0.162,103,0.052,154,0.013,155,0.013,156,0.262,157,0.545,158,0.759,159,0.612,160,0.612,161,0.612,165,0.612,166,1.141,167,1.141,168,0.612,169,2.7,170,0.803,171,0.803,172,1.568,174,0.803,176,0.803,190,0.995,202,0.972,205,0.848,207,2.921,208,3.598,210,2.498,212,1.122,244,0.612,245,0.803,246,0.803,247,0.612,248,0.952,249,0.612,250,0.897,251,0.545,252,0.578,253,0.545,254,0.612,255,0.545,256,0.612,257,0.612,258,0.545,259,0.612,260,0.545,261,0.612,262,0.545,263,0.612,264,0.803,265,0.545,266,0.989,267,0.578,268,0.848,269,0.803,270,0.545,271,0.899,272,0.952,273,0.545,274,0.803,275,0.612,276,0.545,277,0.612,278,0.545,279,0.612,280,0.545,281,0.612,282,0.545,283,0.612,284,0.612,285,0.545,286,0.612,287,0.545,288,0.578,289,0.513,290,0.578,291,0.612,292,0.545,293,0.545,294,0.612,295,0.612,296,0.545,297,0.715,298,0.612,299,0.545,300,0.612,301,0.848,302,0.612,303,0.545,304,0.545,305,0.612,306,0.545,307,0.612,308,0.545,309,0.612,310,0.545,311,0.612,312,0.578,313,0.612,314,0.545,315,0.578,316,0.612,317,0.545,318,0.612,319,0.612,320,0.545,321,0.612,322,0.545,323,0.612,324,0.612,325,0.545,326,0.612,327,0.612,328,0.545,329,0.612,330,0.612,331,0.612,405,2.718,418,2.707,826,2.43,927,3.663,928,4.707,981,5.275,1400,3.598,1401,5.496,1402,5.496,1403,5.496,1404,4.185,1405,4.185,1406,4.185,1407,5.496]],["title/components/NewMessageComponent.html",[156,0.157,303,0.48]],["body/components/NewMessageComponent.html",[3,0.167,4,0.143,5,0.143,7,0.191,8,0.381,34,0.267,38,0.019,39,0.565,44,0.217,58,0.729,76,0.527,77,0.527,81,0.485,91,0.489,94,0.293,102,0.167,103,0.053,134,1.651,154,0.014,155,0.014,156,0.265,157,0.56,158,0.773,159,0.629,160,0.629,161,0.629,165,0.629,166,1.143,167,1.143,168,0.619,170,0.818,171,0.818,172,1.59,174,0.818,176,0.818,202,0.999,205,0.56,244,0.629,245,0.818,246,0.818,247,0.629,248,0.963,249,0.629,250,0.909,251,0.56,252,0.594,253,0.56,254,0.629,255,0.56,256,0.629,257,0.629,258,0.56,259,0.629,260,0.56,261,0.629,262,0.56,263,0.629,264,0.818,265,0.56,266,0.998,267,0.594,268,0.858,269,0.818,270,0.56,271,0.909,272,0.963,273,0.56,274,0.629,275,0.629,276,0.56,277,0.629,278,0.56,279,0.629,280,0.56,281,0.629,282,0.56,283,0.629,284,0.629,285,0.56,286,0.629,287,0.56,288,0.594,289,0.527,290,0.594,291,0.629,292,0.56,293,0.56,294,0.629,295,0.629,296,0.858,297,0.889,298,0.629,299,0.56,300,0.629,301,0.56,302,0.629,303,0.858,304,0.56,305,0.629,306,0.56,307,0.629,308,0.56,309,0.629,310,0.56,311,0.629,312,0.594,313,0.629,314,0.56,315,0.594,316,0.629,317,0.56,318,0.629,319,0.629,320,0.56,321,0.629,322,0.56,323,0.629,324,0.629,325,0.56,326,0.629,327,0.629,328,0.56,329,0.629,330,0.629,331,0.629,740,3.302,741,4.342,742,4.812,743,4.812,744,4.342,754,2.767,755,2.4,756,2.767,757,2.767,758,3.302,1286,4.294,1408,4.812,1409,4.812,1410,4.304,1411,5.598]],["title/components/PLAYGROUNDComponent.html",[156,0.157,306,0.48]],["body/components/PLAYGROUNDComponent.html",[3,0.117,4,0.101,5,0.101,7,0.134,8,0.299,18,3.097,20,0.383,26,2.496,34,0.46,37,0.565,38,0.019,39,0.507,43,0.264,44,0.2,45,0.352,46,0.264,58,0.572,64,0.88,72,3.211,76,0.878,77,0.878,81,0.479,91,0.511,92,2.404,93,0.737,94,0.206,95,1.198,102,0.117,103,0.037,104,1.497,114,1.136,154,0.011,155,0.011,156,0.276,157,0.394,158,0.606,159,0.442,160,0.442,161,0.442,165,0.442,166,1.12,167,1.12,168,0.533,169,3.024,170,0.642,171,0.442,174,0.642,176,0.642,185,3.162,190,0.936,192,2.621,199,0.851,205,0.394,209,2.321,210,1.806,229,4.797,244,0.442,245,0.642,246,0.642,247,0.442,248,0.829,249,0.442,250,0.755,251,0.394,252,0.418,253,0.394,254,0.442,255,0.394,256,0.442,257,0.442,258,0.394,259,0.442,260,0.394,261,0.442,262,0.394,263,0.442,264,0.642,265,0.394,266,0.88,267,0.418,268,0.738,269,0.642,270,0.394,271,0.783,272,0.829,273,0.394,274,0.442,275,0.442,276,0.394,277,0.442,278,0.394,279,0.442,280,0.394,281,0.442,282,0.394,283,0.442,284,0.442,285,0.394,286,0.442,287,0.394,288,0.418,289,0.371,290,0.418,291,0.442,292,0.394,293,0.394,294,0.442,295,0.442,296,0.394,297,0.572,298,0.442,299,0.394,300,0.442,301,0.394,302,0.442,303,0.394,304,0.394,305,0.442,306,0.738,307,0.442,308,0.394,309,0.442,310,0.394,311,0.442,312,0.418,313,0.442,314,0.394,315,0.418,316,0.442,317,0.394,318,0.442,319,0.442,320,0.394,321,0.442,322,0.394,323,0.442,324,0.442,325,0.394,326,0.442,327,0.442,328,0.394,329,0.442,330,0.442,331,0.442,334,2.967,347,2.546,358,2.793,483,3.369,657,4.35,670,3.385,689,2.621,699,2.321,704,2.601,948,4.35,949,3.775,980,4.443,1000,3.369,1015,2.601,1018,2.601,1146,3.369,1282,2.967,1283,1.945,1313,3.646,1314,3.646,1341,3.385,1348,2.601,1350,2.321,1351,2.601,1363,2.601,1412,2.601,1413,4.392,1414,4.392,1415,4.392,1416,4.392,1417,4.392,1418,4.392,1419,4.392,1420,5.169,1421,5.169,1422,4.875,1423,3.646,1424,5.169,1425,4.875,1426,5.169,1427,5.399,1428,5.169,1429,4.392,1430,4.875,1431,4.875,1432,4.875,1433,3.026,1434,3.026,1435,4.392,1436,3.026,1437,3.026,1438,3.026,1439,3.026,1440,3.026,1441,3.026,1442,3.775,1443,3.026,1444,3.026,1445,3.026,1446,4.102,1447,3.026,1448,3.026,1449,3.775,1450,3.026,1451,3.026,1452,3.026,1453,4.392,1454,3.026,1455,3.026,1456,3.026,1457,4.392,1458,3.026,1459,3.026,1460,2.321,1461,3.026,1462,3.026,1463,2.601,1464,3.026,1465,2.601,1466,3.026,1467,2.601,1468,3.026,1469,3.026,1470,3.026,1471,3.026,1472,3.026,1473,2.601,1474,3.026,1475,2.601,1476,3.026,1477,3.026,1478,3.026,1479,3.026,1480,4.392,1481,4.392,1482,4.392,1483,3.775]],["title/components/PickAvatarComponent.html",[156,0.157,304,0.48]],["body/components/PickAvatarComponent.html",[3,0.082,4,0.07,5,0.204,7,0.228,8,0.228,9,1.508,11,1.777,16,1.87,17,2.899,20,0.292,26,2.078,31,3.035,34,0.448,37,0.605,38,0.019,39,0.573,43,0.5,44,0.256,45,0.364,46,0.5,50,3.055,56,2.818,58,0.746,63,2.153,64,0.963,72,2.971,75,1.461,76,0.808,77,0.783,79,1.752,81,0.35,88,1.867,91,0.465,92,1.932,93,0.516,94,0.144,95,0.838,98,0.838,102,0.082,103,0.026,104,1.141,110,1.478,111,1.361,113,1.478,114,0.946,115,1.478,118,1.478,134,1.392,138,0.941,139,1.841,140,1.361,154,0.008,155,0.008,156,0.219,157,0.276,158,0.462,159,0.309,160,0.309,161,0.309,165,0.309,166,1.088,167,1.088,168,0.444,170,0.489,171,0.489,172,1.062,173,1.828,174,0.489,176,0.489,181,2.543,182,1.752,186,1.97,190,1.194,194,1.752,195,2.47,197,2.633,198,1.867,199,1.67,200,2.925,202,0.492,203,0.883,205,0.276,212,0.568,214,2.051,215,1.108,216,1.108,244,0.309,245,0.489,246,0.69,247,0.309,248,0.69,249,0.309,250,0.607,251,0.276,252,0.292,253,0.276,254,0.309,255,0.276,256,0.309,257,0.309,258,0.276,259,0.309,260,0.276,261,0.309,262,0.276,263,0.309,264,0.489,265,0.276,266,0.752,267,0.292,268,0.615,269,0.489,270,0.276,271,0.755,272,0.69,273,0.276,274,0.309,275,0.309,276,0.276,277,0.309,278,0.276,279,0.309,280,0.276,281,0.309,282,0.615,283,0.489,284,0.309,285,0.276,286,0.309,287,0.276,288,0.292,289,0.259,290,0.292,291,0.309,292,0.276,293,0.276,294,0.309,295,0.309,296,0.276,297,0.712,298,0.309,299,0.276,300,0.309,301,0.276,302,0.309,303,0.276,304,0.615,305,0.933,306,0.276,307,0.309,308,0.276,309,0.309,310,0.276,311,0.309,312,0.292,313,0.309,314,0.276,315,0.292,316,0.309,317,0.276,318,0.309,319,0.309,320,0.276,321,0.309,322,0.276,323,0.309,324,0.309,325,0.276,326,0.309,327,0.309,328,0.276,329,0.309,330,0.309,331,0.309,332,2.569,334,2.691,347,2.046,358,2.326,397,1.557,405,1.733,428,3.264,434,3.306,450,2.235,454,2.153,476,2.633,485,3.571,488,4.059,492,1.867,499,4.701,508,2.879,513,2.879,515,2.569,516,3.491,519,4.059,526,1.043,536,1.82,537,1.82,539,1.82,555,1.108,556,1.264,565,1.199,630,1.867,686,2.818,712,1.478,716,1.752,717,3.072,826,1.645,830,3.945,849,1.181,854,1.82,882,1.474,919,2.879,948,2.569,982,3.545,1086,2.153,1090,2.67,1098,2.337,1112,4.713,1114,1.181,1117,4.059,1120,2.879,1122,4.059,1123,4.059,1124,4.195,1125,2.879,1137,2.879,1140,2.337,1141,2.337,1142,1.999,1146,2.569,1155,2.879,1156,2.879,1162,5.648,1171,3.035,1177,2.879,1189,2.569,1206,1.478,1218,2.337,1484,6.237,1485,6.237,1486,1.82,1487,5.469,1488,3.349,1489,3.349,1490,4.154,1491,5.728,1492,4.154,1493,3.296,1494,3.349,1495,3.349,1496,3.349,1497,4.722,1498,3.349,1499,3.349,1500,4.722,1501,4.722,1502,4.722,1503,3.349,1504,2.117,1505,3.349,1506,5.491,1507,2.117,1508,2.117,1509,3.349,1510,2.117,1511,5.469,1512,3.349,1513,2.879,1514,3.349,1515,3.349,1516,3.349,1517,2.117,1518,4.722,1519,2.117,1520,2.117,1521,2.117,1522,3.349,1523,2.117,1524,4.722,1525,2.879,1526,3.349,1527,3.349,1528,3.349,1529,2.117,1530,2.117,1531,3.349,1532,2.117,1533,2.117,1534,3.349,1535,2.117,1536,2.117,1537,3.349,1538,3.349,1539,3.349,1540,3.349,1541,2.117,1542,2.117,1543,2.117,1544,2.117,1545,2.117,1546,2.117,1547,3.349,1548,2.117,1549,3.571,1550,2.117,1551,2.117,1552,2.117,1553,2.117,1554,2.117,1555,3.349,1556,2.117,1557,3.349,1558,2.117,1559,3.349,1560,4.722,1561,2.117,1562,4.154,1563,2.117,1564,2.117,1565,2.117,1566,2.117,1567,2.117,1568,2.117,1569,2.117,1570,2.117,1571,2.117,1572,2.117,1573,3.349,1574,2.117,1575,2.117,1576,2.117,1577,1.82,1578,2.117,1579,2.117,1580,2.117,1581,3.349,1582,3.349,1583,3.349,1584,2.879,1585,3.349,1586,3.349,1587,2.117,1588,3.349,1589,2.879,1590,3.349,1591,3.349,1592,2.879,1593,3.349,1594,2.879,1595,2.117]],["title/classes/Post.html",[103,0.045,1282,1.93]],["body/classes/Post.html",[3,0.195,4,0.167,5,0.167,7,0.223,8,0.42,20,0.538,33,0.909,34,0.457,37,0.438,38,0.019,43,0.438,44,0.195,45,0.408,46,0.438,84,3.291,102,0.195,103,0.062,114,1.006,136,2.336,154,0.015,155,0.015,190,1.381,297,0.931,621,2.998,624,4.993,626,4.48,627,3.967,629,4.347,630,2.8,647,4.734,648,4.734,927,4.27,944,4.734,1282,3.229,1382,4.599,1596,4.317,1597,4.993,1598,6.172,1599,5.023,1600,5.023,1601,5.023,1602,5.023,1603,5.023,1604,5.305,1605,5.305,1606,6.172,1607,6.172,1608,5.305,1609,5.305,1610,5.305]],["title/injectables/PostsService.html",[0,0.989,1423,2.372]],["body/injectables/PostsService.html",[0,1.329,2,1.58,3,0.139,4,0.119,5,0.119,7,0.159,8,0.337,20,0.432,26,2.694,33,1.028,34,0.453,37,0.622,38,0.019,43,0.56,44,0.249,45,0.388,46,0.56,64,0.525,72,2.181,76,0.696,77,0.696,81,0.386,91,0.477,92,2.305,93,0.874,94,0.244,95,1.422,100,1.67,101,1.58,102,0.139,103,0.044,104,1.223,114,1.227,132,2.308,138,1.393,154,0.012,155,0.012,168,0.466,181,3.274,190,1.275,199,1.393,214,2.191,217,3.728,218,2.796,450,1.865,558,2.593,565,1.774,650,4.912,652,3.649,653,3.649,654,3.935,655,3.186,658,3.649,660,3.186,663,4.832,664,4.627,665,3.186,666,3.186,667,3.46,670,2.959,671,3.186,673,3.868,674,3.649,677,3.186,678,3.649,682,3.186,686,3.654,687,3.186,688,3.186,689,2.959,691,4.129,693,3.186,695,2.308,696,2.308,697,2.308,700,2.308,701,2.143,702,2.308,706,2.308,708,2.308,709,2.308,710,2.506,712,2.506,714,2.506,716,2.97,717,2.498,718,3.165,719,2.308,720,3.186,722,2.308,724,2.308,1282,3.932,1283,2.308,1382,4.129,1422,6.324,1423,3.186,1430,5.262,1465,3.086,1475,3.086,1597,4.273,1611,3.086,1612,5.677,1613,4.957,1614,4.957,1615,4.957,1616,3.59,1617,4.957,1618,3.59,1619,3.59,1620,4.957,1621,3.59,1622,4.957,1623,3.59,1624,3.59,1625,3.59,1626,4.957,1627,3.59,1628,3.59,1629,3.59,1630,3.59,1631,4.957,1632,3.59,1633,3.59,1634,4.957,1635,4.957,1636,3.59,1637,3.59,1638,3.59,1639,3.59,1640,3.59,1641,3.59,1642,3.59,1643,2.754,1644,3.086,1645,3.086,1646,3.59,1647,3.59,1648,3.59]],["title/components/PrivacypolicyComponent.html",[156,0.157,308,0.48]],["body/components/PrivacypolicyComponent.html",[3,0.059,4,0.051,5,0.051,7,0.067,8,0.174,9,0.593,20,0.223,33,0.462,34,0.24,37,0.223,38,0.018,39,0.377,43,0.133,44,0.193,45,0.143,46,0.288,58,0.332,64,0.483,75,0.79,76,0.186,77,0.186,81,0.103,91,0.245,94,0.103,102,0.059,103,0.019,104,0.87,134,0.974,136,3.16,154,0.006,155,0.006,156,0.141,157,0.198,158,0.352,159,0.222,160,0.222,161,0.222,165,0.222,166,1.048,167,1.048,168,0.364,170,0.373,171,0.373,172,0.844,174,0.373,176,0.373,187,2.97,202,0.353,205,0.198,212,0.407,230,2.195,233,4.821,234,3.328,237,3.737,239,3.328,241,4.003,244,0.222,245,0.373,246,0.373,247,0.222,248,0.566,249,0.222,250,0.483,251,0.198,252,0.21,253,0.198,254,0.222,255,0.198,256,0.222,257,0.222,258,0.198,259,0.222,260,0.198,261,0.222,262,0.198,263,0.222,264,0.373,265,0.198,266,0.631,267,0.21,268,0.504,269,0.373,270,0.198,271,0.534,272,0.566,273,0.198,274,0.222,275,0.222,276,0.198,277,0.222,278,0.198,279,0.222,280,0.198,281,0.222,282,0.198,283,0.222,284,0.222,285,0.198,286,0.222,287,0.198,288,0.796,289,0.186,290,0.21,291,0.222,292,0.198,293,0.198,294,0.222,295,0.222,296,0.198,297,0.332,298,0.222,299,0.198,300,0.222,301,0.198,302,0.222,303,0.198,304,0.198,305,0.222,306,0.198,307,0.222,308,0.504,309,0.222,310,0.198,311,0.222,312,0.21,313,0.222,314,0.198,315,0.21,316,0.222,317,0.198,318,0.222,319,0.222,320,0.198,321,0.222,322,0.198,323,0.222,324,0.222,325,0.198,326,0.222,327,0.222,328,0.198,329,0.222,330,0.222,331,0.222,340,2.195,342,4.742,347,1.627,358,1.907,398,2.607,447,1.972,491,1.524,727,4.486,729,5.374,731,2.195,733,5.092,764,3.524,767,3.328,802,3.328,803,3.522,806,1.959,809,2.195,813,4.12,880,1.959,881,2.97,882,2.058,883,1.801,884,2.73,1036,3.328,1037,1.306,1038,4.02,1041,1.306,1043,2.195,1044,2.195,1045,2.195,1046,3.328,1047,2.195,1048,2.195,1049,2.195,1050,1.306,1055,2.195,1062,2.97,1203,2.311,1204,4.486,1214,5.237,1215,4.281,1217,4.821,1218,5.309,1225,1.641,1226,3.355,1371,3.328,1395,1.959,1397,2.97,1584,4.486,1589,2.195,1643,1.959,1649,1.306,1650,2.554,1651,2.554,1652,2.554,1653,3.303,1654,2.554,1655,1.519,1656,1.519,1657,1.306,1658,1.519,1659,1.519,1660,2.554,1661,3.872,1662,2.554,1663,2.554,1664,2.554,1665,2.554,1666,4.676,1667,6.318,1668,7.349,1669,2.554,1670,3.872,1671,7.11,1672,3.872,1673,4.676,1674,5.219,1675,4.676,1676,2.554,1677,2.554,1678,6.794,1679,5.074,1680,2.554,1681,5.903,1682,2.554,1683,2.554,1684,5.609,1685,3.872,1686,2.554,1687,3.872,1688,2.554,1689,3.872,1690,4.676,1691,5.903,1692,3.872,1693,5.609,1694,6.874,1695,7.006,1696,3.872,1697,1.519,1698,6.702,1699,2.554,1700,3.872,1701,2.554,1702,2.554,1703,2.554,1704,4.676,1705,2.554,1706,4.486,1707,2.554,1708,2.554,1709,3.872,1710,3.872,1711,2.554,1712,2.554,1713,4.02,1714,2.554,1715,1.782,1716,5.219,1717,3.872,1718,2.554,1719,3.872,1720,2.554,1721,2.554,1722,2.554,1723,1.782,1724,2.554,1725,4.528,1726,3.872,1727,2.554,1728,2.554,1729,2.554,1730,2.554,1731,2.554,1732,2.554,1733,2.554,1734,2.554,1735,2.554,1736,3.872,1737,2.554,1738,4.302,1739,2.554,1740,3.872,1741,2.554,1742,4.486,1743,2.554,1744,4.676,1745,2.554,1746,2.554,1747,2.554,1748,2.554,1749,2.554,1750,5.609,1751,3.872,1752,2.554,1753,2.554,1754,2.554,1755,2.554,1756,2.554,1757,2.554,1758,3.872,1759,4.676,1760,5.903,1761,4.528,1762,6.133,1763,5.219,1764,5.903,1765,4.676,1766,7.061,1767,2.554,1768,3.872,1769,2.554,1770,2.554,1771,2.554,1772,5.609,1773,1.959,1774,4.676,1775,3.872,1776,2.554,1777,2.554,1778,2.554,1779,2.554,1780,2.554,1781,2.554,1782,5.074,1783,2.554,1784,2.554,1785,3.872,1786,2.554,1787,2.554,1788,5.609,1789,2.554,1790,2.554,1791,2.554,1792,2.554,1793,2.554,1794,2.554,1795,2.554,1796,5.903,1797,2.554,1798,2.554,1799,2.554,1800,5.219,1801,2.554,1802,2.554,1803,2.554,1804,2.554,1805,5.609,1806,2.554,1807,4.676,1808,2.554,1809,3.872,1810,2.554,1811,2.554,1812,6.318,1813,2.554,1814,5.219,1815,2.554,1816,2.554,1817,2.554,1818,2.554,1819,2.554,1820,2.554,1821,4.02,1822,3.872,1823,4.676,1824,2.554,1825,2.554,1826,2.554,1827,3.872,1828,3.872,1829,2.195,1830,4.676,1831,5.219,1832,2.554,1833,2.554,1834,2.554,1835,2.554,1836,3.872,1837,2.554,1838,2.554,1839,2.554,1840,4.676,1841,2.554,1842,2.554,1843,2.554,1844,2.554,1845,2.554,1846,3.872,1847,2.195,1848,3.872,1849,5.219,1850,5.219,1851,5.219,1852,3.872,1853,3.872,1854,3.872,1855,2.554,1856,2.554,1857,3.872,1858,2.554,1859,3.872,1860,3.872,1861,3.872,1862,2.554,1863,2.554,1864,2.554,1865,2.554,1866,2.554,1867,3.872,1868,3.328,1869,2.554,1870,2.554,1871,2.554,1872,2.554,1873,2.554,1874,2.554,1875,2.554,1876,2.554,1877,4.676,1878,2.554,1879,2.554,1880,1.959,1881,2.554,1882,2.554,1883,2.554,1884,2.554,1885,2.554,1886,6.133,1887,2.554,1888,3.872,1889,4.676,1890,5.609,1891,2.554,1892,2.195,1893,2.554,1894,2.195,1895,2.554,1896,2.554,1897,2.554,1898,2.554,1899,4.676,1900,2.554,1901,2.554,1902,2.554,1903,2.554,1904,2.554,1905,2.554,1906,2.554,1907,2.554,1908,2.554,1909,2.554,1910,2.554,1911,2.554,1912,4.676,1913,2.554,1914,2.554,1915,2.554,1916,2.554,1917,2.554,1918,2.554,1919,2.554,1920,2.554,1921,2.554,1922,2.554,1923,2.554,1924,2.554,1925,2.554,1926,2.554,1927,2.554,1928,2.554,1929,2.554,1930,2.554,1931,2.554,1932,3.872,1933,2.554,1934,3.872,1935,2.554,1936,2.554,1937,2.554,1938,2.554,1939,2.554,1940,2.554,1941,3.872,1942,2.554,1943,2.554,1944,2.554,1945,2.554,1946,2.554,1947,2.554,1948,3.872,1949,2.554,1950,2.554,1951,2.554,1952,2.554,1953,3.872,1954,2.554,1955,2.554,1956,2.554,1957,2.554,1958,2.554,1959,2.554,1960,2.554,1961,2.554,1962,2.554,1963,2.554,1964,2.554,1965,2.554,1966,2.554,1967,2.554,1968,2.554,1969,2.554,1970,2.554,1971,2.554,1972,2.554,1973,1.519,1974,2.554,1975,2.554,1976,2.554,1977,2.554,1978,2.554,1979,2.554,1980,2.554,1981,2.554,1982,2.554,1983,2.554,1984,2.554,1985,2.554,1986,2.554,1987,2.554,1988,2.554,1989,2.554,1990,1.519]],["title/classes/Reaction.html",[103,0.045,1341,2.202]],["body/classes/Reaction.html",[3,0.201,4,0.172,5,0.172,7,0.23,8,0.428,20,0.548,33,0.936,34,0.454,37,0.451,38,0.019,43,0.451,44,0.201,45,0.404,46,0.451,102,0.201,103,0.064,114,1.036,154,0.015,155,0.015,190,1.366,621,3.086,626,4.525,627,4.038,629,4.305,630,2.883,755,4.021,927,4.305,944,4.819,1341,3.75,1382,4.636,1604,5.4,1605,5.4,1608,5.4,1991,4.444,1992,6.2,1993,6.282,1994,5.17,1995,5.17,1996,5.17,1997,5.17,1998,6.282,1999,6.282,2000,6.282,2001,6.282]],["title/injectables/ReactionsService.html",[0,0.989,1314,2.372]],["body/injectables/ReactionsService.html",[0,1.292,2,1.518,3,0.134,4,0.115,5,0.115,7,0.153,8,0.328,16,2.597,20,0.421,26,2.648,33,1.006,34,0.453,37,0.623,38,0.019,39,0.389,43,0.572,44,0.254,45,0.396,46,0.572,64,0.504,72,2.121,76,0.681,77,0.681,81,0.328,84,2.374,88,2.688,91,0.487,92,2.242,93,0.84,94,0.235,95,1.366,97,2.965,100,1.604,101,1.518,102,0.134,103,0.043,104,1.175,114,1.269,137,1.699,138,1.562,139,1.235,154,0.012,155,0.012,168,0.453,181,3.246,190,1.315,214,2.154,217,3.651,218,2.737,450,1.814,558,2.522,565,1.726,650,4.876,652,3.572,653,3.572,654,3.868,655,3.099,658,3.572,660,3.099,663,4.774,664,4.593,665,3.099,666,3.099,667,3.365,670,2.877,671,2.217,673,3.83,674,3.572,677,3.099,678,3.572,682,3.099,686,3.591,687,3.099,688,3.099,689,2.877,691,4.07,693,3.099,695,2.217,696,2.217,697,2.217,700,2.217,701,2.059,702,2.217,706,2.217,707,2.646,708,2.217,709,2.217,710,2.407,712,2.407,714,2.407,716,2.907,717,2.445,718,3.098,719,2.217,720,3.099,722,2.217,724,2.217,899,2.407,905,4.263,982,3.317,1314,3.099,1341,4.45,1350,2.646,1352,4.144,1378,2.965,1382,3.572,1425,5.999,1431,5.172,1467,2.965,1992,4.777,2002,2.965,2003,5.557,2004,4.821,2005,4.821,2006,4.821,2007,4.821,2008,3.449,2009,4.821,2010,3.449,2011,3.449,2012,4.821,2013,3.449,2014,4.821,2015,3.449,2016,4.821,2017,3.449,2018,3.449,2019,3.449,2020,4.821,2021,3.449,2022,3.449,2023,3.449,2024,3.449,2025,4.821,2026,3.449,2027,3.449,2028,4.821,2029,4.821,2030,3.449,2031,3.449,2032,3.449,2033,3.449,2034,3.449,2035,3.449,2036,4.821,2037,3.449,2038,4.821,2039,3.449,2040,3.449,2041,3.449]],["title/components/RequestPwResetComponent.html",[156,0.157,310,0.48]],["body/components/RequestPwResetComponent.html",[3,0.123,4,0.106,5,0.106,7,0.141,8,0.31,9,1.235,11,2.185,20,0.397,34,0.417,37,0.507,38,0.019,39,0.516,43,0.278,44,0.206,45,0.325,46,0.278,50,2.807,58,0.756,64,0.848,75,1.796,76,0.711,77,0.711,79,2.383,81,0.217,91,0.489,93,0.776,94,0.217,102,0.123,103,0.039,134,1.884,154,0.011,155,0.011,156,0.262,157,0.414,158,0.629,159,0.465,160,0.465,161,0.465,165,0.465,166,1.123,167,1.123,168,0.545,170,0.666,171,0.666,172,1.359,173,2.341,174,0.666,176,0.666,182,2.383,194,2.383,195,3.037,197,3.237,198,2.54,199,1.281,200,3.315,202,0.739,203,1.328,205,0.414,212,0.853,214,1.14,215,1.666,216,1.666,237,3.237,244,0.465,245,0.666,246,0.666,247,0.465,248,0.848,249,0.465,250,0.777,251,0.414,252,0.439,253,0.414,254,0.465,255,0.414,256,0.465,257,0.465,258,0.414,259,0.465,260,0.414,261,0.465,262,0.414,263,0.465,264,0.666,265,0.414,266,0.898,267,0.439,268,0.756,269,0.666,270,0.414,271,0.801,272,0.848,273,0.414,274,0.465,275,0.465,276,0.414,277,0.465,278,0.414,279,0.465,280,0.414,281,0.465,282,0.756,283,0.666,284,0.465,285,0.414,286,0.465,287,0.414,288,0.439,289,0.39,290,0.439,291,0.465,292,0.414,293,0.414,294,0.465,295,0.465,296,0.414,297,0.593,298,0.465,299,0.414,300,0.465,301,0.414,302,0.465,303,0.414,304,0.414,305,0.465,306,0.414,307,0.465,308,0.414,309,0.465,310,0.756,311,1.074,312,1.042,313,0.465,314,0.414,315,0.946,316,0.465,317,0.414,318,0.465,319,0.465,320,0.414,321,0.465,322,0.414,323,0.465,324,0.465,325,0.756,326,0.848,327,0.465,328,0.414,329,0.465,330,0.465,331,0.465,397,2.119,404,3.494,430,2.54,450,1.714,492,2.54,516,2.54,526,1.568,555,1.666,556,1.901,565,1.904,574,4.991,581,4.108,583,2.383,717,1.401,718,1.775,764,2.719,803,2.54,826,2.106,878,2.928,882,2.961,883,3.233,884,3.037,887,3.18,888,3.18,889,3.18,1086,2.928,1090,3.419,1092,3.713,1093,4.053,1106,3.18,1107,2.928,1108,2.928,1114,1.775,1142,1.901,1168,1.901,1169,2.222,1171,3.419,1172,2.222,1175,2.222,1203,3.466,1212,3.916,1214,3.18,1225,2.928,1226,2.928,1679,3.916,1713,3.916,1723,3.18,1725,3.494,1742,3.916,1782,3.916,2042,5.889,2043,5.889,2044,2.737,2045,4.556,2046,4.556,2047,5.806,2048,3.184,2049,3.184,2050,3.184,2051,3.184,2052,4.556,2053,3.184,2054,3.184,2055,3.184,2056,3.184,2057,3.184,2058,3.184,2059,3.184,2060,3.916,2061,3.916,2062,5.806,2063,3.916]],["title/components/ResetPwComponent.html",[156,0.157,314,0.48]],["body/components/ResetPwComponent.html",[3,0.104,4,0.089,5,0.089,7,0.119,8,0.274,9,1.523,11,2.015,20,0.351,34,0.441,37,0.572,38,0.019,39,0.518,43,0.351,44,0.208,45,0.349,46,0.351,50,2.971,56,2.401,58,0.697,64,0.937,75,1.773,76,0.786,77,0.786,79,2.104,81,0.183,91,0.447,93,0.654,94,0.183,102,0.104,103,0.033,104,1.371,114,0.538,134,1.69,137,2.824,154,0.01,155,0.01,156,0.245,157,0.35,158,0.555,159,0.392,160,0.392,161,0.392,165,0.392,166,1.11,167,1.11,168,0.503,170,0.588,171,0.588,173,2.122,174,0.588,176,0.588,182,2.104,186,2.233,187,2.06,190,0.969,194,2.104,195,3.264,197,2.985,198,2.242,199,1.355,200,3.454,203,1.12,205,0.35,212,0.72,214,1.726,215,1.405,216,2.104,237,3.196,244,0.392,245,0.588,246,0.588,247,0.392,248,0.782,249,0.392,250,0.704,251,0.35,252,0.371,253,0.35,254,0.392,255,0.35,256,0.392,257,0.392,258,0.35,259,0.392,260,0.35,261,0.392,262,0.35,263,0.392,264,0.588,265,0.35,266,0.838,267,0.371,268,0.697,269,0.588,270,0.35,271,0.739,272,0.782,273,0.35,274,0.392,275,0.392,276,0.35,277,0.392,278,0.35,279,0.392,280,0.35,281,0.392,282,0.697,283,0.588,284,0.392,285,0.35,286,0.392,287,0.35,288,0.371,289,0.329,290,0.371,291,0.392,292,0.35,293,0.35,294,0.392,295,0.392,296,0.35,297,0.697,298,0.392,299,0.35,300,0.392,301,0.35,302,0.392,303,0.35,304,0.35,305,0.392,306,0.35,307,0.392,308,0.35,309,0.392,310,0.35,311,0.392,312,0.665,313,0.392,314,0.697,315,1.017,316,0.392,317,0.35,318,0.392,319,0.392,320,0.35,321,0.392,322,0.35,323,0.392,324,0.392,325,0.697,326,0.782,327,0.392,328,0.35,329,0.392,330,0.392,331,0.392,334,2.801,347,2.375,358,2.637,397,1.87,404,3.085,405,1.678,428,2.401,430,2.242,447,2.878,450,1.513,451,2.104,454,2.585,476,2.242,492,2.242,516,2.242,526,1.323,532,3.457,555,1.405,556,1.603,558,2.104,575,4.106,581,4.507,583,2.104,596,4.785,717,2.356,826,1.909,878,3.685,1086,2.585,1089,4.785,1090,3.099,1092,3.365,1093,3.736,1098,3.736,1104,4.106,1106,2.807,1107,2.585,1108,2.585,1114,1.497,1124,3.085,1140,2.807,1141,2.807,1142,1.603,1168,1.603,1169,1.875,1171,2.585,1172,1.875,1175,1.875,1197,2.06,1203,3.987,1206,1.875,1225,3.441,1226,4.124,1657,2.309,1723,2.807,1725,3.085,1761,3.085,1821,3.457,1880,2.06,2060,4.144,2063,3.457,2064,6.161,2065,6.161,2066,2.309,2067,4.022,2068,4.022,2069,4.821,2070,5.353,2071,4.022,2072,2.686,2073,2.686,2074,4.022,2075,4.022,2076,2.686,2077,2.686,2078,2.686,2079,2.686,2080,4.022,2081,2.686,2082,4.022,2083,2.686,2084,4.022,2085,4.022,2086,4.022,2087,2.686,2088,2.686,2089,2.686,2090,2.686,2091,4.022,2092,2.686,2093,4.022,2094,2.686,2095,2.686,2096,2.686,2097,2.686,2098,2.686,2099,2.686,2100,2.686,2101,2.686,2102,2.686,2103,2.686,2104,2.686,2105,2.686,2106,2.309,2107,2.309,2108,2.309,2109,2.309,2110,2.686,2111,4.601,2112,5.172,2113,3.457,2114,3.457,2115,3.457,2116,3.457,2117,4.022,2118,4.022,2119,4.022,2120,4.022,2121,4.022,2122,4.022,2123,4.022,2124,4.022,2125,4.022]],["title/components/SignUpComponent.html",[156,0.157,317,0.48]],["body/components/SignUpComponent.html",[3,0.107,4,0.092,5,0.092,7,0.123,8,0.28,9,1.535,11,2.045,16,2.152,20,0.359,34,0.433,37,0.531,38,0.019,39,0.569,43,0.242,44,0.236,45,0.325,46,0.242,50,2.884,56,2.456,58,0.707,64,0.889,75,1.681,76,0.772,77,0.772,79,2.152,81,0.37,88,2.294,91,0.491,93,0.674,94,0.188,98,1.096,102,0.107,103,0.034,134,1.712,137,2.026,138,1.157,139,1.945,140,1.78,154,0.01,155,0.01,156,0.248,157,0.36,158,0.568,159,0.405,160,0.405,161,0.405,165,0.405,166,1.112,167,1.112,168,0.511,170,0.601,171,0.601,172,1.254,173,2.16,174,0.601,176,0.601,182,2.152,186,2.267,190,0.745,194,2.152,195,2.843,197,2.294,198,2.294,199,1.157,200,3.188,202,0.643,203,1.155,205,0.36,212,0.742,214,1.757,215,1.448,216,1.448,227,2.872,231,3.156,237,3.238,244,0.405,245,0.601,246,0.601,247,0.405,248,0.794,249,0.405,250,0.717,251,0.36,252,0.382,253,0.36,254,0.405,255,0.36,256,0.405,257,0.405,258,0.36,259,0.405,260,0.36,261,0.405,262,0.36,263,0.405,264,0.601,265,0.36,266,0.849,267,0.382,268,0.707,269,0.601,270,0.36,271,0.75,272,0.794,273,0.36,274,0.405,275,0.405,276,0.36,277,0.405,278,0.36,279,0.405,280,0.36,281,0.405,282,0.707,283,0.601,284,0.405,285,0.36,286,0.405,287,0.36,288,0.568,289,0.339,290,0.382,291,0.405,292,0.36,293,0.36,294,0.405,295,0.405,296,0.36,297,0.536,298,0.405,299,0.36,300,0.405,301,0.36,302,0.405,303,0.36,304,0.36,305,0.405,306,0.36,307,0.405,308,0.36,309,0.405,310,0.36,311,0.405,312,0.382,313,0.405,314,0.36,315,0.382,316,0.405,317,0.707,318,0.966,319,0.405,320,0.36,321,0.405,322,0.36,323,0.405,324,0.405,325,0.707,326,0.794,327,0.405,328,0.36,329,0.405,330,0.405,331,0.405,334,2.843,397,1.913,398,2.294,428,2.456,430,2.294,450,1.548,454,2.645,476,3.03,492,2.294,507,2.456,516,2.294,526,1.364,555,1.448,556,1.653,581,2.645,583,2.568,717,2.16,733,2.872,764,2.456,803,2.294,811,2.872,813,2.872,826,1.944,849,1.544,873,3.156,876,3.536,877,3.536,878,3.733,879,3.536,880,3.156,881,4.169,882,2.391,883,2.83,884,2.843,887,2.872,888,2.872,889,2.872,1086,2.645,1089,5.073,1090,3.156,1092,3.427,1093,3.793,1098,3.793,1104,4.169,1106,2.872,1107,2.645,1108,2.645,1112,2.872,1114,1.544,1139,3.536,1140,2.872,1141,2.872,1142,1.653,1168,1.653,1169,1.932,1171,2.645,1172,1.932,1175,1.932,1193,2.38,1197,2.124,1203,3.244,1206,1.932,1215,2.872,1218,2.872,1222,3.536,1225,2.645,1226,3.493,1232,4.169,1594,3.536,1723,2.872,1761,3.156,1829,3.536,1880,2.124,2061,3.536,2106,3.536,2107,2.38,2108,2.38,2109,2.38,2111,4.671,2112,4.671,2113,3.536,2114,3.536,2115,3.536,2116,3.536,2126,6.061,2127,6.061,2128,2.38,2129,6.061,2130,5.434,2131,4.114,2132,4.114,2133,5.434,2134,2.769,2135,2.769,2136,2.769,2137,2.769,2138,2.769,2139,2.769,2140,4.114,2141,2.769,2142,2.769,2143,2.769,2144,2.769,2145,2.769,2146,2.769,2147,2.769,2148,2.769,2149,2.769,2150,4.114,2151,2.769,2152,2.769,2153,2.769,2154,2.38,2155,2.769,2156,2.769,2157,4.114,2158,4.114,2159,4.114,2160,4.114,2161,4.114,2162,4.114,2163,4.114]],["title/injectables/StorageService.html",[0,0.989,1493,2.575]],["body/injectables/StorageService.html",[0,1.233,2,1.421,3,0.125,4,0.107,5,0.253,7,0.143,8,0.313,20,0.401,33,0.971,34,0.454,37,0.627,38,0.019,39,0.472,43,0.615,44,0.274,45,0.395,46,0.622,50,1.919,58,0.42,63,4.127,75,1.423,76,0.716,77,0.716,91,0.342,93,0.786,94,0.22,100,1.501,101,1.421,102,0.125,103,0.04,114,1.428,134,0.952,136,1.501,138,1.932,139,2.647,154,0.011,155,0.011,181,3.528,190,1.349,199,1.507,214,2.092,217,3.647,218,3.509,241,2.477,268,0.761,578,5.022,612,4.653,673,3.258,716,2.804,717,2.359,718,2.989,829,4.127,1162,3.529,1493,3.211,1506,5.309,1513,5.022,1525,5.022,1577,5.679,1592,2.775,1706,2.775,1738,3.529,2164,2.775,2165,5.36,2166,5.36,2167,5.36,2168,4.601,2169,4.601,2170,4.601,2171,4.601,2172,4.601,2173,4.601,2174,4.601,2175,4.601,2176,4.601,2177,4.601,2178,4.601,2179,4.601,2180,3.229,2181,4.601,2182,5.843,2183,5.843,2184,4.601,2185,3.229,2186,6.873,2187,4.601,2188,3.229,2189,6.42,2190,4.601,2191,3.229,2192,4.601,2193,3.229,2194,4.601,2195,4.601,2196,3.229,2197,6.754,2198,4.601,2199,3.229,2200,4.601,2201,3.229,2202,4.601,2203,3.229,2204,4.601,2205,3.229,2206,4.601,2207,3.229,2208,4.601,2209,6.754,2210,3.229,2211,4.601,2212,3.229,2213,3.229,2214,5.36,2215,3.229,2216,3.229,2217,3.229,2218,3.229,2219,3.229,2220,3.229,2221,3.229,2222,3.229,2223,3.229,2224,2.775,2225,3.229,2226,3.229,2227,2.775,2228,3.229,2229,3.229,2230,5.36,2231,4.601,2232,3.229,2233,3.229,2234,3.229,2235,3.229,2236,3.229,2237,3.229,2238,5.843,2239,4.601,2240,4.601,2241,4.601,2242,3.229,2243,3.229,2244,5.36,2245,3.229,2246,3.229,2247,4.601,2248,3.229,2249,3.229,2250,3.229,2251,3.229,2252,4.601,2253,3.229,2254,3.229,2255,3.229,2256,3.229,2257,4.601,2258,3.229,2259,3.229]],["title/classes/Thread.html",[103,0.045,1446,2.202]],["body/classes/Thread.html",[3,0.205,4,0.176,5,0.176,7,0.235,8,0.433,20,0.556,33,0.958,34,0.45,37,0.461,38,0.019,43,0.461,44,0.205,45,0.397,46,0.461,84,3.366,102,0.205,103,0.065,114,1.06,154,0.015,155,0.015,190,1.335,192,4.332,621,3.157,624,5.066,626,4.559,627,4.094,629,4.234,630,2.949,637,5.474,638,5.474,647,4.885,648,4.885,1446,3.801,1597,5.066,1609,5.474,1610,5.474,2260,4.546,2261,6.369,2262,5.289,2263,5.289,2264,5.289]],["title/components/ThreadComponent.html",[156,0.157,320,0.48]],["body/components/ThreadComponent.html",[3,0.135,4,0.116,5,0.116,7,0.155,8,0.33,9,0.808,20,0.423,33,0.63,34,0.433,37,0.527,38,0.019,39,0.545,43,0.487,44,0.246,45,0.313,46,0.487,58,0.727,64,0.961,75,1.728,76,0.427,77,0.427,81,0.237,91,0.52,94,0.237,102,0.135,103,0.043,104,1.654,114,0.698,134,1.431,136,2.81,154,0.012,155,0.012,156,0.238,157,0.453,158,0.67,159,0.509,160,0.509,161,0.509,165,0.509,166,1.13,167,1.13,168,0.568,170,0.709,171,0.709,172,1.427,174,0.709,176,0.709,202,0.808,204,1.379,205,0.453,228,2.896,244,0.509,245,0.709,246,0.709,247,0.509,248,0.883,249,0.509,250,0.816,251,0.453,252,0.481,253,0.453,254,0.509,255,0.453,256,0.509,257,0.509,258,0.453,259,0.509,260,0.453,261,0.509,262,0.453,263,0.509,264,0.709,265,0.453,266,0.928,267,0.481,268,0.786,269,0.709,270,0.453,271,0.908,272,0.883,273,0.453,274,0.509,275,0.509,276,0.453,277,0.509,278,0.453,279,0.509,280,0.453,281,0.509,282,0.453,283,0.509,284,0.509,285,0.453,286,0.509,287,0.453,288,0.481,289,0.427,290,0.481,291,0.509,292,0.453,293,0.453,294,0.509,295,0.509,296,0.786,297,0.786,298,0.509,299,0.786,300,0.509,301,0.453,302,0.509,303,0.453,304,0.453,305,0.509,306,0.453,307,0.509,308,0.453,309,0.509,310,0.453,311,0.509,312,0.481,313,0.509,314,0.453,315,0.481,316,0.509,317,0.453,318,0.509,319,0.509,320,0.786,321,0.509,322,0.453,323,0.509,324,0.509,325,0.453,326,0.509,327,0.509,328,0.632,329,0.509,330,0.509,331,0.509,342,3.387,347,2.751,358,2.976,378,2.078,390,3.722,405,2.024,418,2.39,422,3.722,434,2.238,516,1.941,741,3.899,744,3.899,746,4.217,748,2.976,750,2.751,754,2.238,755,1.941,756,2.238,757,2.238,758,2.671,759,2.078,760,1.941,761,2.43,762,3.387,763,3.387,803,2.706,891,4.592,893,2.671,895,4.801,896,3.722,897,2.993,903,2.993,904,2.993,931,2.671,940,2.671,1285,4.634,1292,2.671,1322,4.171,1357,4.801,1383,2.993,1385,5.193,1387,4.171,1390,4.171,1394,4.171,1395,3.722,1397,4.634,1398,5.193,1446,4.228,1460,2.671,1715,3.387,1773,4.634,1847,4.171,2265,2.993,2266,4.853,2267,4.853,2268,4.853,2269,3.482,2270,4.853,2271,4.853,2272,3.482,2273,4.853,2274,3.482,2275,4.853,2276,3.482,2277,3.482,2278,3.482,2279,3.482,2280,3.482,2281,3.482,2282,3.482,2283,3.482,2284,3.482,2285,4.853,2286,4.853,2287,4.171,2288,4.853,2289,6.042,2290,6.042]],["title/injectables/ThreadsService.html",[0,0.989,1313,2.372]],["body/injectables/ThreadsService.html",[0,1.256,2,1.458,3,0.129,4,0.11,5,0.11,7,0.147,8,0.319,9,1.262,20,0.409,26,2.601,33,0.985,34,0.453,37,0.619,38,0.019,43,0.565,44,0.251,45,0.387,46,0.565,64,0.484,72,2.062,76,0.724,77,0.724,81,0.425,91,0.495,92,2.18,93,0.807,94,0.226,95,1.312,100,1.541,101,1.458,102,0.129,103,0.041,104,1.129,114,1.298,132,2.13,138,1.82,139,1.186,154,0.011,155,0.011,168,0.44,181,3.329,190,1.343,192,4.128,199,0.932,214,2.116,217,3.618,218,3.19,297,0.708,450,1.764,558,2.452,565,1.678,612,3.8,650,4.869,652,3.496,653,3.496,654,3.8,655,3.013,658,3.496,660,3.013,663,4.749,664,4.558,665,3.013,666,3.013,667,3.271,670,2.798,671,2.13,673,3.791,674,3.496,677,3.013,678,3.496,682,3.013,686,3.529,687,3.013,688,3.013,689,2.798,691,4.01,693,3.013,695,2.13,696,2.13,697,2.13,700,2.13,701,1.978,702,2.13,706,2.13,708,2.13,709,2.13,710,2.313,714,3.271,716,2.452,717,2.062,718,3.296,719,2.13,720,3.013,722,2.13,724,2.13,927,1.978,1112,2.313,1142,3.529,1282,2.845,1283,2.13,1313,3.013,1423,3.8,1427,6.247,1432,5.081,1446,4.475,1449,4.029,1460,2.542,1463,2.848,1473,2.848,1483,4.029,1597,4.746,1643,2.542,1644,2.848,1645,2.848,2154,4.029,2224,4.029,2291,2.848,2292,5.438,2293,4.687,2294,4.687,2295,4.687,2296,4.687,2297,3.314,2298,4.687,2299,5.912,2300,3.314,2301,4.687,2302,3.314,2303,4.687,2304,3.314,2305,3.314,2306,4.687,2307,3.314,2308,3.314,2309,3.314,2310,4.687,2311,3.314,2312,3.314,2313,3.314,2314,3.314,2315,3.314,2316,3.314,2317,4.687,2318,3.314,2319,3.314,2320,4.687,2321,4.687,2322,3.314,2323,3.314,2324,3.314,2325,3.314,2326,3.314,2327,3.314,2328,3.314,2329,3.314,2330,3.314,2331,3.314,2332,3.314,2333,3.314]],["title/components/TimeSeparatorComponent.html",[156,0.157,322,0.48]],["body/components/TimeSeparatorComponent.html",[3,0.166,4,0.143,5,0.143,7,0.191,8,0.38,18,2.734,34,0.385,38,0.019,39,0.564,44,0.217,58,0.809,76,0.526,77,0.526,81,0.292,91,0.415,93,1.045,94,0.292,102,0.166,103,0.053,154,0.014,155,0.014,156,0.265,157,0.559,158,0.771,159,0.627,160,0.627,161,0.627,165,0.627,166,1.143,167,1.143,168,0.618,170,0.816,171,0.627,174,0.816,176,0.816,205,0.559,244,0.627,245,0.816,246,0.816,247,0.627,248,0.961,249,0.627,250,0.908,251,0.559,252,0.592,253,0.559,254,0.627,255,0.559,256,0.627,257,0.627,258,0.559,259,0.627,260,0.559,261,0.627,262,0.559,263,0.627,264,0.816,265,0.559,266,0.997,267,0.592,268,0.857,269,0.816,270,0.559,271,0.908,272,0.961,273,0.559,274,0.627,275,0.627,276,0.559,277,0.627,278,0.559,279,0.627,280,0.559,281,0.627,282,0.559,283,0.627,284,0.627,285,0.559,286,0.627,287,0.559,288,0.592,289,0.526,290,0.592,291,0.627,292,0.559,293,0.559,294,0.627,295,0.627,296,0.559,297,0.727,298,0.627,299,0.559,300,0.627,301,0.559,302,0.627,303,0.559,304,0.559,305,0.627,306,0.559,307,0.627,308,0.559,309,0.627,310,0.559,311,0.627,312,0.592,313,0.627,314,0.559,315,0.592,316,0.627,317,0.559,318,0.627,319,0.627,320,0.559,321,0.627,322,0.857,323,1.041,324,0.627,325,0.559,326,0.627,327,0.627,328,0.559,329,0.627,330,0.627,331,0.627,405,1.79,418,2.752,931,3.292,940,3.292,1301,4.23,1343,4.802,1346,5.047,1349,3.689,2334,5.656,2335,3.689,2336,5.587,2337,5.587,2338,5.587,2339,5.865,2340,5.587,2341,4.292,2342,5.587]],["title/injectables/TimeService.html",[0,0.989,1301,2.372]],["body/injectables/TimeService.html",[0,1.513,2,1.918,3,0.169,4,0.145,5,0.145,7,0.194,20,0.492,33,1.133,34,0.435,37,0.598,38,0.019,43,0.598,44,0.266,45,0.384,46,0.598,81,0.493,84,3.734,91,0.324,94,0.297,100,2.027,101,1.918,102,0.169,103,0.054,114,1.433,136,2.027,137,3.083,138,2.167,154,0.014,155,0.014,190,1.337,410,4.369,624,4.903,1301,3.628,1773,3.344,2339,5.69,2343,3.747,2344,5.644,2345,5.644,2346,5.644,2347,5.644,2348,5.644,2349,4.36,2350,5.644,2351,4.36,2352,6.259,2353,5.644,2354,4.36,2355,5.644,2356,4.36,2357,5.644,2358,4.36,2359,5.644,2360,4.36,2361,6.62,2362,4.36,2363,4.36,2364,4.36,2365,4.36,2366,5.644,2367,4.36,2368,5.644,2369,4.36,2370,4.36,2371,4.36,2372,4.36,2373,4.36,2374,4.36,2375,4.36,2376,4.36,2377,4.36,2378,4.36,2379,4.36,2380,4.36,2381,4.36,2382,4.36,2383,4.36,2384,4.36,2385,4.36,2386,4.36,2387,4.36,2388,4.36,2389,4.36,2390,4.36,2391,5.644,2392,4.36,2393,5.644,2394,4.36,2395,5.644,2396,4.36,2397,5.644,2398,5.644,2399,5.644,2400,5.644,2401,5.644,2402,6.259,2403,5.644,2404,6.259,2405,5.644,2406,5.644,2407,4.36,2408,4.36,2409,4.36,2410,4.36,2411,4.36,2412,4.36,2413,4.36,2414,4.36]],["title/components/ToastNotificationComponent.html",[156,0.157,325,0.48]],["body/components/ToastNotificationComponent.html",[3,0.138,4,0.119,5,0.119,7,0.158,8,0.336,9,1.314,20,0.431,34,0.421,37,0.431,38,0.019,39,0.559,43,0.311,44,0.22,45,0.359,46,0.311,57,2.492,58,0.737,64,0.721,75,2.103,76,0.605,77,0.748,81,0.336,91,0.367,94,0.243,102,0.138,103,0.044,114,0.715,134,1.669,154,0.012,155,0.012,156,0.29,157,0.465,158,0.681,159,0.522,160,0.522,161,0.522,165,0.522,166,1.131,167,1.131,168,0.574,170,0.721,171,0.721,172,1.446,174,0.721,176,0.721,199,1.004,202,0.829,205,0.465,244,0.522,245,0.721,246,0.721,247,0.522,248,0.892,249,0.522,250,0.827,251,0.465,252,0.493,253,0.465,254,0.522,255,0.465,256,0.522,257,0.522,258,0.465,259,0.522,260,0.465,261,0.522,262,0.465,263,0.522,264,0.721,265,0.465,266,0.937,267,0.493,268,0.795,269,0.721,270,0.465,271,0.843,272,0.892,273,0.465,274,0.522,275,0.522,276,0.465,277,0.522,278,0.465,279,0.522,280,0.465,281,0.522,282,0.465,283,0.522,284,0.522,285,0.465,286,0.522,287,0.465,288,0.493,289,0.437,290,0.493,291,0.522,292,0.465,293,0.465,294,0.522,295,0.522,296,0.465,297,0.971,298,0.522,299,0.465,300,0.522,301,0.465,302,0.522,303,0.465,304,0.465,305,0.522,306,0.465,307,0.522,308,0.465,309,0.522,310,0.465,311,0.522,312,0.493,313,0.522,314,0.465,315,0.493,316,0.522,317,0.465,318,0.522,319,0.522,320,0.465,321,0.522,322,0.465,323,0.522,324,0.522,325,0.795,326,1.028,327,0.522,328,0.465,329,0.522,330,0.522,331,0.522,397,2.296,405,2.674,406,3.787,418,2.432,421,3.446,422,3.787,425,3.95,430,2.753,434,3.174,459,4.262,466,2.738,468,3.068,491,3.958,506,4.244,507,2.947,583,3.195,592,3.787,820,4.244,882,2.173,883,2.296,1107,3.926,1108,3.174,1168,4.135,1203,2.947,1229,4.244,1232,3.787,2129,5.249,2415,5.955,2416,3.068,2417,4.937,2418,4.937,2419,4.937,2420,4.937,2421,5.66,2422,6.107,2423,6.41,2424,6.107,2425,3.57,2426,4.937,2427,3.57,2428,3.57,2429,3.57,2430,3.57,2431,3.57,2432,3.57,2433,3.57,2434,5.66,2435,3.57,2436,3.57,2437,4.937,2438,4.937,2439,4.937,2440,4.937]],["title/classes/User.html",[39,0.298,103,0.045]],["body/classes/User.html",[3,0.195,4,0.167,5,0.167,7,0.223,8,0.42,20,0.538,33,0.909,34,0.457,37,0.438,38,0.019,39,0.498,43,0.438,44,0.282,45,0.408,46,0.438,84,3.291,102,0.195,103,0.062,114,1.006,137,2.474,139,2.561,154,0.015,155,0.015,190,1.381,541,5.305,583,3.742,621,2.998,626,4.48,627,3.967,629,4.347,630,2.8,639,5.305,640,5.305,1189,5.487,1549,4.317,2441,4.317,2442,7.154,2443,6.172,2444,5.023,2445,5.023,2446,5.023,2447,5.023,2448,5.023,2449,6.172,2450,6.172,2451,6.172,2452,6.172,2453,6.172,2454,6.172,2455,6.172]],["title/components/UserProfileCardComponent.html",[156,0.157,328,0.48]],["body/components/UserProfileCardComponent.html",[3,0.161,4,0.138,5,0.138,7,0.184,20,0.477,33,0.751,34,0.339,37,0.362,38,0.019,39,0.599,43,0.362,44,0.237,45,0.232,46,0.362,58,0.711,64,0.606,81,0.282,91,0.483,94,0.282,102,0.161,103,0.051,154,0.013,155,0.013,156,0.261,157,0.54,158,0.754,159,0.606,160,0.606,161,0.606,165,0.606,166,1.141,167,1.141,168,0.61,170,0.799,171,0.799,174,0.799,176,0.799,178,2.542,183,2.477,184,3.021,204,1.643,205,0.54,212,1.465,213,2.171,244,0.606,245,0.799,246,0.799,247,0.606,248,0.949,249,0.606,250,0.893,251,0.54,252,0.573,253,0.54,254,0.606,255,0.54,256,0.606,257,0.606,258,0.54,259,0.606,260,0.54,261,0.606,262,0.54,263,0.606,264,0.799,265,0.54,266,0.986,267,0.573,268,0.845,269,0.799,270,0.54,271,1.044,272,0.949,273,0.54,274,0.606,275,0.606,276,0.54,277,0.606,278,0.54,279,0.606,280,0.54,281,0.606,282,0.54,283,0.606,284,0.606,285,0.54,286,0.606,287,0.54,288,0.573,289,0.508,290,0.573,291,0.606,292,0.54,293,0.54,294,0.606,295,0.606,296,0.54,297,0.711,298,0.606,299,0.54,300,0.606,301,0.54,302,0.606,303,0.54,304,0.54,305,0.606,306,0.54,307,0.606,308,0.54,309,0.606,310,0.54,311,0.606,312,0.573,313,0.606,314,0.54,315,0.573,316,0.606,317,0.54,318,0.606,319,0.606,320,0.54,321,0.606,322,0.54,323,0.606,324,0.606,325,0.54,326,0.606,327,0.606,328,0.845,329,0.893,330,0.606,331,0.606,357,4.982,378,2.477,759,3.648,773,4.192,825,2.477,826,2.164,827,3.513,828,3.513,874,3.513,882,2.405,883,2.542,884,2.859,952,4.698,1245,4.698,1286,4.192,2456,5.253,2457,5.465,2458,4.15,2459,4.15,2460,4.15,2461,4.15,2462,4.15]],["title/interfaces/UserState.html",[47,2.575,2463,2.575]],["body/interfaces/UserState.html",[3,0.223,4,0.191,5,0.191,7,0.255,8,0.456,38,0.019,45,0.375,47,4.672,102,0.223,139,2.61,147,5.592,148,4.942,149,5.431,150,6.086,154,0.016,155,0.016,190,1.282,2463,4.015,2464,5.753,2465,4.945]],["title/injectables/UsersService.html",[0,0.989,16,1.461]],["body/injectables/UsersService.html",[0,1.548,2,1.385,3,0.122,4,0.105,5,0.105,7,0.14,8,0.307,9,1.227,11,1.7,16,1.789,20,0.394,26,2.542,31,3.713,33,0.957,34,0.45,37,0.629,38,0.019,39,0.626,43,0.555,44,0.247,45,0.382,46,0.555,50,1.885,64,0.46,72,2.542,75,1.398,76,0.708,77,0.708,81,0.36,91,0.473,92,2.101,93,0.767,94,0.214,95,1.246,98,1.246,100,1.464,101,1.385,102,0.122,103,0.039,104,1.073,111,2.023,114,1.225,132,2.023,137,1.55,138,1.27,139,2.513,151,2.414,154,0.011,155,0.011,168,0.424,181,3.177,185,3.22,190,1.284,199,1.79,214,2.279,217,3.771,218,2.603,436,3.466,437,3.466,446,4.43,450,2.396,451,2.364,476,2.519,540,2.414,558,3.021,565,1.617,566,3.884,584,3.884,650,4.9,652,2.023,653,2.023,654,3.713,655,2.904,658,2.023,660,2.904,663,2.023,664,4.599,665,2.904,666,2.904,670,2.697,671,2.904,673,3.741,674,3.397,675,3.884,677,2.904,678,3.397,682,2.904,686,3.447,687,2.904,688,2.904,689,2.697,691,3.931,693,2.904,695,2.023,696,2.023,697,2.023,700,2.023,701,1.879,702,2.023,706,2.023,707,2.414,708,2.023,709,2.904,716,2.765,717,2.326,718,2.947,719,2.904,720,2.904,722,2.023,724,2.023,982,4.418,1000,3.466,1021,2.706,1114,3.22,1131,3.884,1442,4.964,2466,2.706,2467,4.518,2468,4.518,2469,4.518,2470,4.518,2471,5.776,2472,4.518,2473,5.285,2474,4.518,2475,4.518,2476,4.518,2477,4.518,2478,4.518,2479,4.518,2480,4.518,2481,3.148,2482,4.518,2483,4.518,2484,3.148,2485,3.148,2486,3.148,2487,4.518,2488,3.148,2489,4.518,2490,4.518,2491,4.518,2492,3.148,2493,4.518,2494,4.518,2495,4.518,2496,3.148,2497,3.148,2498,4.518,2499,4.518,2500,4.518,2501,4.518,2502,4.518,2503,3.148,2504,3.148,2505,3.148,2506,3.148,2507,3.148,2508,3.148,2509,3.148,2510,4.518,2511,3.148,2512,3.148,2513,3.148,2514,3.148,2515,4.518,2516,3.148,2517,3.148,2518,3.148,2519,3.148,2520,3.148,2521,3.148,2522,3.148]],["title/coverage.html",[2523,4.341]],["body/coverage.html",[0,1.939,1,2.166,5,0.129,6,3.34,11,1.462,16,1.538,38,0.019,39,0.578,45,0.217,47,2.712,81,0.264,103,0.081,137,3.812,154,0.013,155,0.013,156,0.331,157,0.506,162,4.128,163,3.651,164,4.128,168,0.491,169,1.71,185,2.166,205,0.506,207,2.712,251,0.506,252,0.722,253,0.506,255,0.506,258,0.506,260,0.506,262,0.506,265,0.506,267,0.536,268,0.824,270,0.506,271,0.975,273,0.506,276,0.506,278,0.506,280,0.506,282,0.506,285,0.506,287,0.506,289,0.641,290,0.536,292,0.506,293,0.506,296,0.506,299,0.506,301,0.506,303,0.506,304,0.506,306,0.506,308,0.506,310,0.506,312,0.722,314,0.506,317,0.506,320,0.506,322,0.506,325,0.506,328,0.506,345,2.98,346,3.34,376,2.98,394,3.34,395,2.712,396,3.34,471,3.34,548,3.34,555,2.033,557,3.34,622,3.34,649,3.34,738,3.34,739,3.34,740,4.013,757,2.498,759,2.319,774,4.013,775,3.34,822,4.416,823,4.013,824,3.651,825,3.941,847,2.98,891,2.712,892,3.34,893,2.98,894,3.34,914,3.34,915,3.34,953,3.34,964,2.98,965,2.98,977,3.34,1013,2.98,1032,3.34,1053,3.34,1054,3.34,1076,2.98,1085,3.34,1168,2.319,1233,3.34,1249,3.34,1250,3.34,1268,4.013,1269,3.34,1282,2.033,1292,2.98,1293,3.34,1301,2.498,1313,2.498,1314,2.498,1341,2.319,1346,2.98,1400,3.34,1408,3.34,1409,3.34,1412,3.34,1423,2.498,1446,2.319,1484,3.34,1485,3.34,1486,4.496,1493,2.712,1596,3.34,1611,3.34,1649,3.34,1868,3.34,1894,3.34,1991,3.34,2002,3.34,2042,3.34,2043,3.34,2044,3.34,2064,3.34,2065,3.34,2066,3.34,2126,3.34,2127,3.34,2128,3.34,2164,3.34,2260,3.34,2265,3.34,2291,3.34,2334,3.34,2335,3.34,2343,3.34,2415,3.34,2416,3.34,2441,3.34,2456,3.34,2463,2.712,2465,3.34,2466,3.34,2523,3.34,2524,3.885,2525,3.885,2526,3.885,2527,5.231,2528,5.231,2529,6.327,2530,5.231,2531,3.885,2532,3.885,2533,5.231,2534,3.885,2535,3.34,2536,5.231,2537,3.34,2538,5.914,2539,5.231,2540,5.231,2541,5.231,2542,3.885,2543,3.885,2544,3.885,2545,3.885,2546,3.885,2547,3.885,2548,3.885,2549,6.327,2550,5.914,2551,3.885,2552,5.231,2553,3.885,2554,3.885,2555,3.885,2556,3.885,2557,5.914,2558,3.885,2559,5.231,2560,3.885,2561,6.327,2562,3.885,2563,3.885,2564,3.885,2565,3.885,2566,5.231,2567,3.885,2568,3.885,2569,3.34,2570,3.34,2571,5.231,2572,3.885,2573,3.885,2574,3.885,2575,3.885,2576,3.885,2577,3.885,2578,3.885,2579,3.885,2580,3.885,2581,3.885,2582,3.885]],["title/dependencies.html",[2583,2.358,2584,3.818]],["body/dependencies.html",[38,0.019,94,0.384,95,2.237,154,0.016,155,0.016,202,1.311,203,2.356,212,1.514,558,2.955,754,3.631,755,3.15,756,3.631,2584,4.856,2585,5.649,2586,7.607,2587,5.649,2588,6.623,2589,5.649,2590,5.649,2591,5.649,2592,5.649,2593,6.623,2594,6.623,2595,5.649,2596,5.649,2597,5.649,2598,5.649,2599,5.649,2600,5.649,2601,5.649,2602,5.649,2603,5.649,2604,5.649,2605,5.649]],["title/index.html",[7,0.136,2606,3.074,2607,3.074]],["body/index.html",[4,0.178,38,0.016,44,0.207,81,0.364,104,1.822,154,0.016,155,0.016,156,0.293,168,0.502,289,0.655,398,2.981,436,4.101,483,4.101,492,2.981,495,4.596,507,3.826,563,4.596,673,2.981,1147,4.596,1715,3.732,1738,4.101,2227,5.902,2287,5.902,2583,4.101,2608,6.41,2609,5.347,2610,6.866,2611,5.347,2612,5.347,2613,6.41,2614,7.279,2615,7.472,2616,5.347,2617,5.347,2618,5.347,2619,5.347,2620,5.347,2621,5.347,2622,5.347,2623,5.347,2624,5.347,2625,6.866,2626,5.347,2627,7.119,2628,5.347,2629,5.347,2630,5.347,2631,5.347,2632,6.41,2633,6.41,2634,7.119,2635,5.347,2636,6.41,2637,5.347,2638,7.391,2639,5.347,2640,5.347,2641,5.347,2642,6.41,2643,5.347,2644,5.347,2645,5.347,2646,6.866,2647,5.347,2648,4.101]],["title/modules.html",[2649,4.341]],["body/modules.html",[38,0.017,154,0.017,155,0.017,2649,5.24]],["title/overview.html",[2648,3.874]],["body/overview.html",[2,2.653,38,0.017,136,2.804,154,0.017,155,0.017,158,0.832,621,3.599,1892,5.183,2463,4.208,2648,4.625,2650,6.029,2651,6.029]],["title/properties.html",[8,0.302,2583,2.358]],["body/properties.html",[8,0.413,38,0.018,154,0.017,155,0.017,1715,4.237,2652,6.071]],["title/miscellaneous/variables.html",[2653,2.642,2654,3.818]],["body/miscellaneous/variables.html",[7,0.239,38,0.019,45,0.36,76,0.789,77,0.789,81,0.367,114,1.29,134,1.899,138,1.936,147,4.131,154,0.016,155,0.016,186,2.686,221,4.63,398,3.84,447,3.215,575,4.131,596,5.283,916,3.759,2535,4.63,2537,5.534,2569,4.63,2570,5.534,2653,4.63,2654,4.63,2655,5.386,2656,5.386,2657,5.386,2658,5.386,2659,5.386,2660,5.386,2661,5.386,2662,5.386,2663,5.386,2664,5.386,2665,5.386,2666,5.386,2667,5.386,2668,5.386,2669,5.386,2670,5.386,2671,5.386,2672,5.386,2673,5.386,2674,5.386,2675,5.386,2676,5.386,2677,5.386,2678,5.386,2679,5.386,2680,5.386,2681,6.439,2682,5.386,2683,5.386,2684,5.386,2685,5.386,2686,5.386]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":137,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"injectables/ReactionsService.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2652,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":2605,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2538,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2566,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2565,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2560,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2530,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2558,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2562,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2556,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2529,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2555,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2557,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2552,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2572,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2561,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2571,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2559,"title":{},"body":{"coverage.html":{}}}],["00','01','02','03','04','05",{"_index":1587,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["00\\',\\'01\\',\\'02\\',\\'03\\',\\'04\\',\\'05",{"_index":1595,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["1",{"_index":136,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/EmojiService.html":{},"components/HeaderComponent.html":{},"components/MessageItemComponent.html":{},"classes/Post.html":{},"components/PrivacypolicyComponent.html":{},"injectables/StorageService.html":{},"components/ThreadComponent.html":{},"injectables/TimeService.html":{},"overview.html":{}}}],["1.13.12",{"_index":2600,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2540,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":2574,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2551,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2528,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2650,"title":{},"body":{"overview.html":{}}}],["10.12.2",{"_index":2597,"title":{},"body":{"dependencies.html":{}}}],["10/34",{"_index":2564,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2539,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":86,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{}}}],["1048437261939",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11/16",{"_index":2580,"title":{},"body":{"coverage.html":{}}}],["1300",{"_index":2436,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["14",{"_index":2527,"title":{},"body":{"coverage.html":{}}}],["14:56",{"_index":2288,"title":{},"body":{"components/ThreadComponent.html":{}}}],["15",{"_index":1887,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["15:32",{"_index":2285,"title":{},"body":{"components/ThreadComponent.html":{}}}],["16",{"_index":1894,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"coverage.html":{}}}],["16/27",{"_index":2544,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1868,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"coverage.html":{}}}],["17.0.0",{"_index":2586,"title":{},"body":{"dependencies.html":{}}}],["17.0.6",{"_index":2611,"title":{},"body":{"index.html":{}}}],["17.1.0",{"_index":2591,"title":{},"body":{"dependencies.html":{}}}],["17.3.10",{"_index":2588,"title":{},"body":{"dependencies.html":{}}}],["17/25",{"_index":2542,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1896,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["180",{"_index":85,"title":{},"body":{"injectables/ActivityService.html":{}}}],["1:1048437261939:web:6545ca4790290b7b660c06",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1773,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/ThreadComponent.html":{},"injectables/TimeService.html":{}}}],["2.3.0",{"_index":2603,"title":{},"body":{"dependencies.html":{}}}],["2/22",{"_index":2568,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1898,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["21",{"_index":1904,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["2400",{"_index":469,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["257",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["257.appspot.com",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["257.developerakademie.net",{"_index":1912,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["257.firebaseapp.com",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":2563,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1902,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["3/17",{"_index":2579,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":129,"title":{},"body":{"injectables/ActivityService.html":{}}}],["34",{"_index":1888,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["35",{"_index":1892,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"overview.html":{}}}],["4",{"_index":2573,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":2577,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":2531,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":2533,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2651,"title":{},"body":{"overview.html":{}}}],["5/11",{"_index":2532,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2546,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2549,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":2547,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":2545,"title":{},"body":{"coverage.html":{}}}],["56410",{"_index":1971,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["57",{"_index":1970,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["59",{"_index":2543,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1761,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["6/12",{"_index":2575,"title":{},"body":{"coverage.html":{}}}],["6/13",{"_index":2534,"title":{},"body":{"coverage.html":{}}}],["64;sofia",{"_index":769,"title":{},"body":{"components/DirectMessageComponent.html":{}}}],["68",{"_index":2541,"title":{},"body":{"coverage.html":{}}}],["69a",{"_index":1047,"title":{},"body":{"components/ImpressComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["7",{"_index":1901,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["7.8.0",{"_index":2601,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":2550,"title":{},"body":{"coverage.html":{}}}],["7/15",{"_index":2576,"title":{},"body":{"coverage.html":{}}}],["7/16",{"_index":2578,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1915,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["81547",{"_index":1048,"title":{},"body":{"components/ImpressComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["86400000",{"_index":2403,"title":{},"body":{"injectables/TimeService.html":{}}}],["9",{"_index":2567,"title":{},"body":{"coverage.html":{}}}],["9.2.0",{"_index":2596,"title":{},"body":{"dependencies.html":{}}}],["9/17",{"_index":2548,"title":{},"body":{"coverage.html":{}}}],["_pause",{"_index":414,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["_showing",{"_index":2421,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["a.date",{"_index":1644,"title":{},"body":{"injectables/PostsService.html":{},"injectables/ThreadsService.html":{}}}],["abbrechen",{"_index":890,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{}}}],["abhalten",{"_index":815,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["abhängig",{"_index":1871,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["aborts",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["abruf",{"_index":1966,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["abs",{"_index":1762,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["abwesend",{"_index":1246,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["access",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["accessors",{"_index":422,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/ThreadComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["activatedroute",{"_index":187,"title":{},"body":{"components/AddChannelComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/ResetPwComponent.html":{}}}],["active",{"_index":148,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"components/MainUserProfileCardComponent.html":{},"interfaces/UserState.html":{}}}],["activeusers",{"_index":350,"title":{},"body":{"components/AddMembersComponent.html":{},"components/MemberListComponent.html":{}}}],["activity",{"_index":62,"title":{},"body":{"injectables/ActivityService.html":{}}}],["activityservice",{"_index":1,"title":{"injectables/ActivityService.html":{}},"body":{"injectables/ActivityService.html":{},"components/AddMembersComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainUserProfileCardComponent.html":{},"coverage.html":{}}}],["activityservice,private",{"_index":379,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["activityservice.getuserstate(mainuser).state",{"_index":1244,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["activitysettingallowed",{"_index":10,"title":{},"body":{"injectables/ActivityService.html":{}}}],["actual",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["actual_component",{"_index":331,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["add",{"_index":168,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["add_circle_outline",{"_index":950,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["add_reaction",{"_index":1385,"title":{},"body":{"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["addchannelcomponent",{"_index":157,"title":{"components/AddChannelComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["addchanneltoparams",{"_index":179,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["addchanneltoparams(channel_id",{"_index":189,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["adddoc",{"_index":652,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["adddoc(channel",{"_index":661,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["adddoc(post",{"_index":1615,"title":{},"body":{"injectables/PostsService.html":{}}}],["adddoc(reaction",{"_index":2007,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["adddoc(this.getcolref",{"_index":710,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{}}}],["adddoc(thread",{"_index":2296,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["added",{"_index":709,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["addemoji",{"_index":896,"title":{},"body":{"injectables/EmojiService.html":{},"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["addemoji(emoji",{"_index":898,"title":{},"body":{"injectables/EmojiService.html":{}}}],["addemoji(event",{"_index":1322,"title":{},"body":{"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["addmember",{"_index":1253,"title":{},"body":{"components/MemberListComponent.html":{}}}],["addmember():void",{"_index":1265,"title":{},"body":{"components/MemberListComponent.html":{}}}],["addmembersafteraddchannelcomponent",{"_index":251,"title":{"components/AddMembersAfterAddChannelComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["addmemberscomponent",{"_index":253,"title":{"components/AddMembersComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["address",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["adduser",{"_index":2474,"title":{},"body":{"injectables/UsersService.html":{}}}],["adduser(user",{"_index":2480,"title":{},"body":{"injectables/UsersService.html":{}}}],["addusertomembers",{"_index":355,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["adresse",{"_index":884,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/SignUpComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["affected",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["aftertoast",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["again",{"_index":59,"title":{},"body":{"injectables/ActivityService.html":{}}}],["aizasyduqgrrfgvvjvbjrhrprhg3bg61phevmvm",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aktiv",{"_index":1245,"title":{},"body":{"components/MainUserProfileCardComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["aktivitäten",{"_index":1952,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["aktuell",{"_index":2286,"title":{},"body":{"components/ThreadComponent.html":{}}}],["alexander",{"_index":1043,"title":{},"body":{"components/ImpressComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["alle",{"_index":340,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["alles",{"_index":804,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["allgemeine",{"_index":1660,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["allow",{"_index":60,"title":{},"body":{"injectables/ActivityService.html":{}}}],["als",{"_index":1831,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["alternate_email",{"_index":1291,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["anbieten",{"_index":1940,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["anbieter",{"_index":1724,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["andere",{"_index":1872,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["anderen",{"_index":1790,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["angezeigt",{"_index":1743,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["angular",{"_index":2287,"title":{},"body":{"components/ThreadComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":2585,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2587,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":202,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/ToastNotificationComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2589,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":94,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":2590,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/auth",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular/fire/firestore",{"_index":696,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["angular/fire/storage",{"_index":2219,"title":{},"body":{"injectables/StorageService.html":{}}}],["angular/forms",{"_index":203,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2592,"title":{},"body":{"dependencies.html":{}}}],["angular/material/dialog",{"_index":204,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["angular/platform",{"_index":2593,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":212,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/NavigationComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/UserProfileCardComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":419,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["animate]=\"false",{"_index":409,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["animation",{"_index":256,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["animationintrocomponent",{"_index":255,"title":{"components/AnimationIntroComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["anliegens",{"_index":1799,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["anmelden",{"_index":1229,"title":{},"body":{"components/LoginComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["anmeldung",{"_index":1205,"title":{},"body":{"components/LoginComponent.html":{}}}],["anonymisiert",{"_index":1852,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["anonymous",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{}}}],["anrede",{"_index":1779,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["answers",{"_index":1393,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["antrag",{"_index":1920,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["antwort",{"_index":1395,"title":{},"body":{"components/MessageItemComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/ThreadComponent.html":{}}}],["antworten",{"_index":1285,"title":{},"body":{"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["apikey",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":167,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["app.component.html",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":258,"title":{"components/AppComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appid",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":2620,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["april",{"_index":2382,"title":{},"body":{"injectables/TimeService.html":{}}}],["arbeit",{"_index":1219,"title":{},"body":{"components/LoginComponent.html":{}}}],["array",{"_index":1442,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/UsersService.html":{}}}],["arrow_drop_down",{"_index":946,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["arrow_right",{"_index":947,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["art",{"_index":1698,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["artifacts",{"_index":2628,"title":{},"body":{"index.html":{}}}],["artikel",{"_index":1886,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["aside",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["assets/img/avatar/avatar_${index}.svg",{"_index":1563,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["assets/img/profile_blank.svg",{"_index":1549,"title":{},"body":{"components/PickAvatarComponent.html":{},"classes/User.html":{}}}],["assortment",{"_index":1526,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["async",{"_index":181,"title":{},"body":{"components/AddChannelComponent.html":{},"injectables/ChannelsService.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["auch",{"_index":1757,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["auf",{"_index":1691,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["aufgeführten",{"_index":1687,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["aufruf",{"_index":1702,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["aufrufenden",{"_index":1707,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["aufsichtsbehörde",{"_index":1909,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["auftrag",{"_index":1963,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["august",{"_index":2386,"title":{},"body":{"injectables/TimeService.html":{}}}],["aus",{"_index":1584,"title":{},"body":{"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["ausführliche",{"_index":1680,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["auskunft",{"_index":1984,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["auskunftsrecht",{"_index":1885,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["ausnahme",{"_index":1815,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["auszuüben",{"_index":1906,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["auth",{"_index":449,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["auth'},{'name",{"_index":261,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["auth.component.html",{"_index":553,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":554,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.service",{"_index":96,"title":{},"body":{"injectables/ActivityService.html":{}}}],["auth/pickavatar",{"_index":1210,"title":{},"body":{"components/LoginComponent.html":{}}}],["authcomponent",{"_index":260,"title":{"components/AuthComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["authdata",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{}}}],["authdata.displayname",{"_index":1187,"title":{},"body":{"components/LoginComponent.html":{}}}],["authdata.email",{"_index":1188,"title":{},"body":{"components/LoginComponent.html":{}}}],["authdata.photourl",{"_index":1190,"title":{},"body":{"components/LoginComponent.html":{}}}],["authdata.uid",{"_index":1186,"title":{},"body":{"components/LoginComponent.html":{}}}],["authdomain",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":450,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["autherror",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["authguard",{"_index":2570,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":1297,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["author.name",{"_index":1388,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["author_id",{"_index":2299,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["author_uid",{"_index":623,"title":{},"body":{"classes/Channel.html":{},"injectables/ChannelsService.html":{}}}],["authservice",{"_index":11,"title":{"injectables/AuthService.html":{}},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["authsub",{"_index":12,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{}}}],["authuid",{"_index":2495,"title":{},"body":{"injectables/UsersService.html":{}}}],["automatically",{"_index":495,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["automatisch",{"_index":1703,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["avatar",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/StorageService.html":{}}}],["avatar'},{'name",{"_index":269,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["avatar.component",{"_index":848,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["avatar.component.html",{"_index":1488,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.scss",{"_index":1489,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts",{"_index":1486,"title":{},"body":{"components/PickAvatarComponent.html":{},"coverage.html":{}}}],["avatar.component.ts:100",{"_index":1533,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:109",{"_index":1523,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:119",{"_index":1510,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:135",{"_index":1519,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:145",{"_index":1517,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:159",{"_index":1529,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:170",{"_index":1504,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:182",{"_index":1521,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:191",{"_index":1536,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:201",{"_index":1520,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:25",{"_index":1541,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:26",{"_index":1548,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:27",{"_index":1551,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:28",{"_index":1546,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:29",{"_index":1550,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:34",{"_index":1553,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:35",{"_index":1552,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:36",{"_index":1542,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:37",{"_index":1545,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:38",{"_index":1544,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:39",{"_index":1543,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:45",{"_index":1508,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:53",{"_index":1507,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:63",{"_index":1532,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:82",{"_index":1530,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar.component.ts:91",{"_index":1535,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["avatar/edit",{"_index":847,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"coverage.html":{}}}],["avatar/pick",{"_index":1485,"title":{},"body":{"components/PickAvatarComponent.html":{},"coverage.html":{}}}],["avatars",{"_index":1525,"title":{},"body":{"components/PickAvatarComponent.html":{},"injectables/StorageService.html":{}}}],["avatarsrc",{"_index":1189,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"classes/User.html":{}}}],["avatarsref",{"_index":2165,"title":{},"body":{"injectables/StorageService.html":{}}}],["await",{"_index":218,"title":{},"body":{"components/AddChannelComponent.html":{},"injectables/ChannelsService.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["awaitanimation",{"_index":415,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["awaitinginit",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["awaitmax",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["b",{"_index":1643,"title":{},"body":{"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"injectables/ThreadsService.html":{}}}],["b.date",{"_index":1645,"title":{},"body":{"injectables/PostsService.html":{},"injectables/ThreadsService.html":{}}}],["bdsg",{"_index":1889,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["beantwortung",{"_index":1798,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["bearbeiten",{"_index":800,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["beauftragung",{"_index":1858,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["before",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{}}}],["begrüßt",{"_index":1958,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["behörde",{"_index":1923,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["bei",{"_index":1217,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["being",{"_index":1531,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["beispiel",{"_index":242,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["bekommen",{"_index":1373,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["belongs",{"_index":448,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["benutze",{"_index":726,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["benötigt",{"_index":1787,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["ber",{"_index":1713,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{}}}],["berblick",{"_index":1664,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["berechtigten",{"_index":1838,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["berechtigtes",{"_index":1758,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["berein",{"_index":2124,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["bereitgestellt",{"_index":1967,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["bereitstellung",{"_index":1768,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["berichtigung",{"_index":1893,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["bermittlung",{"_index":1977,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["bernimmt",{"_index":1946,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["berwiegen",{"_index":1841,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["beschreibung",{"_index":243,"title":{},"body":{"components/AddChannelComponent.html":{},"components/EditChannelComponent.html":{}}}],["beschriebenen",{"_index":1905,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["beschwerde",{"_index":1908,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["beschwerderecht",{"_index":1914,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["besten",{"_index":235,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["bestimmte",{"_index":344,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{}}}],["besuchen",{"_index":1672,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["betreiber",{"_index":1695,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["betrieb",{"_index":1770,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["betriebssystem",{"_index":1720,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["betroffenen",{"_index":1828,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["betroffener",{"_index":1879,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["bild",{"_index":1589,"title":{},"body":{"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["bitte",{"_index":878,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["blank",{"_index":1539,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["bleiben",{"_index":1855,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["boolean",{"_index":75,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/EditChannelComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"components/ThreadComponent.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["both",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":1270,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box'},{'name",{"_index":298,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["box.component",{"_index":758,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/NewMessageComponent.html":{},"components/ThreadComponent.html":{}}}],["box.component.html",{"_index":1271,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.scss",{"_index":1272,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts",{"_index":1269,"title":{},"body":{"components/MessageBoxComponent.html":{},"coverage.html":{}}}],["box.component.ts:13",{"_index":1281,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:16",{"_index":1277,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:17",{"_index":1276,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:18",{"_index":1278,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:20",{"_index":1279,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:28",{"_index":1280,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box/message",{"_index":757,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/NewMessageComponent.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["braun",{"_index":763,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/ThreadComponent.html":{}}}],["break",{"_index":1209,"title":{},"body":{"components/LoginComponent.html":{}}}],["browser",{"_index":2594,"title":{},"body":{"dependencies.html":{}}}],["browsers",{"_index":1718,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["build",{"_index":2627,"title":{},"body":{"index.html":{}}}],["button",{"_index":919,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"components/PickAvatarComponent.html":{}}}],["button'},{'name",{"_index":275,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["button.component",{"_index":208,"title":{},"body":{"components/AddChannelComponent.html":{},"components/NavigationComponent.html":{}}}],["button.component.html",{"_index":920,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["button.component.scss",{"_index":921,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["button.component.ts",{"_index":915,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:22",{"_index":937,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["button.component.ts:23",{"_index":934,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["button.component.ts:24",{"_index":932,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["button.component.ts:25",{"_index":933,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["button.component.ts:26",{"_index":938,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["button.component.ts:27",{"_index":930,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["button.component.ts:28",{"_index":929,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["button.component.ts:34",{"_index":936,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["button.component.ts:38",{"_index":935,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["button/expandable",{"_index":207,"title":{},"body":{"components/AddChannelComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{}}}],["c",{"_index":1836,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["c.channel_id",{"_index":1479,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["c.members_uids.includes(this.currentuser.uid",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{}}}],["called",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["calls",{"_index":443,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/LoginComponent.html":{}}}],["canactivatefn",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelavatar",{"_index":2168,"title":{},"body":{"injectables/StorageService.html":{}}}],["cancelavatar(uid",{"_index":2179,"title":{},"body":{"injectables/StorageService.html":{}}}],["capabilities",{"_index":2644,"title":{},"body":{"index.html":{}}}],["card",{"_index":329,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["card'},{'name",{"_index":272,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["card..constr",{"_index":851,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["card.component",{"_index":760,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["card.component.html",{"_index":827,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["card.component.scss",{"_index":828,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["card.component.ts",{"_index":825,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:13",{"_index":2458,"title":{},"body":{"components/UserProfileCardComponent.html":{}}}],["card.component.ts:15",{"_index":2459,"title":{},"body":{"components/UserProfileCardComponent.html":{}}}],["card.component.ts:17",{"_index":844,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["card.component.ts:18",{"_index":845,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["card.component.ts:19",{"_index":835,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["card.component.ts:21",{"_index":1236,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["card.component.ts:23",{"_index":1068,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["card.component.ts:24",{"_index":843,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["card.component.ts:25",{"_index":842,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["card.component.ts:26",{"_index":1074,"title":{},"body":{"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["card.component.ts:27",{"_index":1075,"title":{},"body":{"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["card.component.ts:28",{"_index":1073,"title":{},"body":{"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["card.component.ts:29",{"_index":1072,"title":{},"body":{"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["card.component.ts:34",{"_index":836,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LogOutCardComponent.html":{}}}],["card.component.ts:36",{"_index":1237,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["card.component.ts:38",{"_index":839,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["card.component.ts:40",{"_index":1240,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["card.component.ts:46",{"_index":1069,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["card.component.ts:49",{"_index":837,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["card.component.ts:50",{"_index":1070,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["card.component.ts:53",{"_index":838,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["card.component.ts:55",{"_index":1071,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["card.component.ts:56",{"_index":1238,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["card/edit",{"_index":824,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"coverage.html":{}}}],["card/log",{"_index":965,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"coverage.html":{}}}],["card/main",{"_index":1076,"title":{},"body":{"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"coverage.html":{}}}],["card/user",{"_index":759,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["case",{"_index":410,"title":{},"body":{"components/AnimationIntroComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/TimeService.html":{}}}],["catch",{"_index":2154,"title":{},"body":{"components/SignUpComponent.html":{},"injectables/ThreadsService.html":{}}}],["catch((err",{"_index":716,"title":{},"body":{"injectables/ChannelsService.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["center",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["central",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":2622,"title":{},"body":{"index.html":{}}}],["channel",{"_index":169,"title":{"classes/Channel.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/EditChannelComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/PLAYGROUNDComponent.html":{},"coverage.html":{}}}],["channel'},{'name",{"_index":250,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["channel(this.channels.find(c",{"_index":1478,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["channel.channel_id",{"_index":713,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["channel.component",{"_index":939,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["channel.component.html",{"_index":175,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/EditChannelComponent.html":{}}}],["channel.component.scss",{"_index":177,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/EditChannelComponent.html":{}}}],["channel.component.ts",{"_index":164,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/EditChannelComponent.html":{},"coverage.html":{}}}],["channel.component.ts:12",{"_index":335,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{},"components/EditChannelComponent.html":{}}}],["channel.component.ts:13",{"_index":336,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{}}}],["channel.component.ts:14",{"_index":795,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:15",{"_index":794,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:16",{"_index":796,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:17",{"_index":793,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:18",{"_index":188,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["channel.component.ts:19",{"_index":791,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:21",{"_index":201,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["channel.component.ts:23",{"_index":788,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:27",{"_index":193,"title":{},"body":{"components/AddChannelComponent.html":{},"components/EditChannelComponent.html":{}}}],["channel.component.ts:30",{"_index":792,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:34",{"_index":790,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:35",{"_index":196,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["channel.component.ts:38",{"_index":789,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:42",{"_index":787,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:43",{"_index":191,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["channel.name",{"_index":949,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"components/PLAYGROUNDComponent.html":{}}}],["channel.tojson",{"_index":711,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["channel/add",{"_index":163,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/ExpandableButtonComponent.html":{},"coverage.html":{}}}],["channel/edit",{"_index":775,"title":{},"body":{"components/EditChannelComponent.html":{},"coverage.html":{}}}],["channel_id",{"_index":192,"title":{},"body":{"components/AddChannelComponent.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/PLAYGROUNDComponent.html":{},"classes/Thread.html":{},"injectables/ThreadsService.html":{}}}],["channelname",{"_index":776,"title":{},"body":{"components/EditChannelComponent.html":{},"components/MessageBoxComponent.html":{}}}],["channels",{"_index":229,"title":{},"body":{"components/AddChannelComponent.html":{},"injectables/ChannelsService.html":{},"components/HomeComponent.html":{},"components/PLAYGROUNDComponent.html":{}}}],["channels.filter(c",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{}}}],["channels.push(element.data",{"_index":703,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["channelsservice",{"_index":185,"title":{"injectables/ChannelsService.html":{}},"body":{"components/AddChannelComponent.html":{},"injectables/ChannelsService.html":{},"components/HomeComponent.html":{},"components/PLAYGROUNDComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["channelssub",{"_index":980,"title":{},"body":{"components/HomeComponent.html":{},"components/PLAYGROUNDComponent.html":{}}}],["chat",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chat'},{'name",{"_index":291,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["chat.component",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{},"components/MemberListComponent.html":{}}}],["chat.component.ts",{"_index":2554,"title":{},"body":{"coverage.html":{}}}],["chat/main",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{},"components/MemberListComponent.html":{},"coverage.html":{}}}],["check",{"_index":436,"title":{},"body":{"components/AnimationIntroComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["checked",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UsersService.html":{}}}],["checking",{"_index":441,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["checks",{"_index":446,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/LoginComponent.html":{},"injectables/UsersService.html":{}}}],["children",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["choice",{"_index":2641,"title":{},"body":{"index.html":{}}}],["class",{"_index":103,"title":{"classes/Channel.html":{},"classes/Post.html":{},"classes/Reaction.html":{},"classes/Thread.html":{},"classes/User.html":{}},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["class=\"message",{"_index":1392,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["classes",{"_index":621,"title":{},"body":{"classes/Channel.html":{},"classes/Post.html":{},"classes/Reaction.html":{},"classes/Thread.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":1289,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["clearselection",{"_index":356,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["cli",{"_index":2610,"title":{},"body":{"index.html":{}}}],["click",{"_index":1514,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["clickable",{"_index":400,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["close",{"_index":228,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/EditChannelComponent.html":{},"components/MemberListComponent.html":{},"components/ThreadComponent.html":{}}}],["closecard",{"_index":357,"title":{},"body":{"components/AddMembersComponent.html":{},"components/MemberListComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["closechannel",{"_index":780,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["closed",{"_index":872,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["closedialog",{"_index":831,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["code",{"_index":2623,"title":{},"body":{"index.html":{}}}],["collection",{"_index":664,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["collection(this.firestore",{"_index":706,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["collectionreference",{"_index":674,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["collective",{"_index":737,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["command",{"_index":2642,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":172,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["communication",{"_index":2470,"title":{},"body":{"injectables/UsersService.html":{}}}],["complete",{"_index":2490,"title":{},"body":{"injectables/UsersService.html":{}}}],["completed",{"_index":438,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["completion",{"_index":429,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["component",{"_index":156,"title":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":249,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["components",{"_index":158,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"overview.html":{}}}],["components/expandable",{"_index":206,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["components/main",{"_index":1012,"title":{},"body":{"components/HomeComponent.html":{},"components/MemberListComponent.html":{}}}],["components/navigation/navigation.component",{"_index":1011,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/thread/thread.component",{"_index":1010,"title":{},"body":{"components/HomeComponent.html":{}}}],["compression",{"_index":2249,"title":{},"body":{"injectables/StorageService.html":{}}}],["computers",{"_index":1721,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["computersystem",{"_index":1705,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["confirmpasswordreset",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["considered",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.error(err",{"_index":718,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["console.log('edit",{"_index":850,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["console.log('logout",{"_index":1077,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["console.log('mainuser",{"_index":861,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["console.log('the",{"_index":870,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["console.log('update",{"_index":859,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["console.log(this.emojiservice.getemojis",{"_index":2283,"title":{},"body":{"components/ThreadComponent.html":{}}}],["const",{"_index":138,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructguestuser",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructguestuser(authdata",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AppComponent.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/ImpressComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":1261,"title":{},"body":{"components/MemberListComponent.html":{}}}],["constructor(activityservice",{"_index":361,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["constructor(data",{"_index":1254,"title":{},"body":{"components/MemberListComponent.html":{}}}],["constructor(dialog",{"_index":747,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/MessageItemComponent.html":{}}}],["constructor(dialogref",{"_index":183,"title":{},"body":{"components/AddChannelComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/HeaderComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["constructor(emojiservice",{"_index":2269,"title":{},"body":{"components/ThreadComponent.html":{}}}],["constructor(location",{"_index":1037,"title":{},"body":{"components/ImpressComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["constructor(obj",{"_index":627,"title":{},"body":{"classes/Channel.html":{},"classes/Post.html":{},"classes/Reaction.html":{},"classes/Thread.html":{},"classes/User.html":{}}}],["constructor(private",{"_index":378,"title":{},"body":{"components/AddMembersComponent.html":{},"components/AppComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["constructor(router",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"components/LogOutCardComponent.html":{}}}],["constructuserfromgoogleauth",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructuserfromgoogleauth(authdata",{"_index":1115,"title":{},"body":{"components/LoginComponent.html":{}}}],["contacting",{"_index":1512,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["contains",{"_index":550,"title":{},"body":{"components/AuthComponent.html":{}}}],["content/channels.service",{"_index":2509,"title":{},"body":{"injectables/UsersService.html":{}}}],["continue",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["cookies",{"_index":1978,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["corresponding",{"_index":1527,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["count",{"_index":905,"title":{},"body":{"injectables/EmojiService.html":{},"components/MessageItemComponent.html":{},"injectables/ReactionsService.html":{}}}],["coverage",{"_index":2523,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":660,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["created",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["creates",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{}}}],["createthread",{"_index":2293,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["createthread(message",{"_index":2298,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["createuserwithemailandpassword",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["credential",{"_index":1201,"title":{},"body":{"components/LoginComponent.html":{}}}],["ctrl/ngx",{"_index":754,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/MessageItemComponent.html":{},"components/NewMessageComponent.html":{},"components/ThreadComponent.html":{},"dependencies.html":{}}}],["curremoji",{"_index":1375,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["current",{"_index":63,"title":{},"body":{"injectables/ActivityService.html":{},"components/AnimationIntroComponent.html":{},"injectables/AuthService.html":{},"components/PickAvatarComponent.html":{},"injectables/StorageService.html":{}}}],["current.uid",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentchannel",{"_index":1420,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["currentchannel.channel_id",{"_index":1482,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["currentthreads",{"_index":1421,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["currentuser",{"_index":13,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{}}}],["custom",{"_index":1511,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["customfile",{"_index":1490,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["da",{"_index":1797,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["dabubble",{"_index":398,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/SignUpComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["daher",{"_index":1947,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["damit",{"_index":1740,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["dann",{"_index":1921,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["darüber",{"_index":1665,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["das",{"_index":1719,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["data",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["data.activeusers",{"_index":1264,"title":{},"body":{"components/MemberListComponent.html":{}}}],["database",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["date",{"_index":624,"title":{},"body":{"classes/Channel.html":{},"classes/Post.html":{},"classes/Thread.html":{},"injectables/TimeService.html":{}}}],["date(now.getfullyear",{"_index":2399,"title":{},"body":{"injectables/TimeService.html":{}}}],["date(timestamp",{"_index":2361,"title":{},"body":{"injectables/TimeService.html":{}}}],["date.getdate",{"_index":2394,"title":{},"body":{"injectables/TimeService.html":{}}}],["date.gethours",{"_index":2363,"title":{},"body":{"injectables/TimeService.html":{}}}],["date.getminutes",{"_index":2365,"title":{},"body":{"injectables/TimeService.html":{}}}],["date.gettime",{"_index":2406,"title":{},"body":{"injectables/TimeService.html":{}}}],["date.now",{"_index":132,"title":{},"body":{"injectables/ActivityService.html":{},"classes/Channel.html":{},"injectables/PostsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["datei",{"_index":1591,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["dateityp",{"_index":1579,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["daten",{"_index":1668,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["datenschutz",{"_index":1062,"title":{},"body":{"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["datenschutzbehörde",{"_index":1917,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["datenschutzerklärung",{"_index":2163,"title":{},"body":{"components/SignUpComponent.html":{}}}],["datenschutzhinweisen",{"_index":1688,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["datenschutzrichtlinien",{"_index":1945,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["datenverarbeitung",{"_index":1690,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["datenweitergabe",{"_index":1979,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["datenübertragbarkeit",{"_index":1897,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["datum",{"_index":1727,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["dauer",{"_index":1857,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["day",{"_index":2393,"title":{},"body":{"injectables/TimeService.html":{}}}],["dayofweek",{"_index":2391,"title":{},"body":{"injectables/TimeService.html":{}}}],["daysofweek",{"_index":2370,"title":{},"body":{"injectables/TimeService.html":{}}}],["daysofweek[date.getday",{"_index":2392,"title":{},"body":{"injectables/TimeService.html":{}}}],["decorators",{"_index":840,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{}}}],["default",{"_index":76,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":34,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{}}}],["defines",{"_index":519,"title":{},"body":{"components/AppComponent.html":{},"components/PickAvatarComponent.html":{}}}],["dein",{"_index":873,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/SignUpComponent.html":{}}}],["deine",{"_index":730,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["deinem",{"_index":231,"title":{},"body":{"components/AddChannelComponent.html":{},"components/EditChannelComponent.html":{},"components/SignUpComponent.html":{}}}],["deinen",{"_index":1582,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["deiner",{"_index":2157,"title":{},"body":{"components/SignUpComponent.html":{}}}],["delete",{"_index":670,"title":{},"body":{"injectables/ChannelsService.html":{},"components/PLAYGROUNDComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["deleted",{"_index":671,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["deletedoc",{"_index":653,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["deletedoc(channel_id",{"_index":668,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["deletedoc(docref",{"_index":724,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["deletedoc(post_id",{"_index":1617,"title":{},"body":{"injectables/PostsService.html":{}}}],["deletedoc(reaction_id",{"_index":2009,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["deletedoc(thread_id",{"_index":2301,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["deletefolder",{"_index":2169,"title":{},"body":{"injectables/StorageService.html":{}}}],["deletefolder(ref",{"_index":2184,"title":{},"body":{"injectables/StorageService.html":{}}}],["deleteobject",{"_index":2217,"title":{},"body":{"injectables/StorageService.html":{}}}],["deleteobject(fileref",{"_index":2232,"title":{},"body":{"injectables/StorageService.html":{}}}],["deleteobject(previousavatarref",{"_index":2254,"title":{},"body":{"injectables/StorageService.html":{}}}],["deleteobject(tempavatarref",{"_index":2243,"title":{},"body":{"injectables/StorageService.html":{}}}],["deletes",{"_index":2181,"title":{},"body":{"injectables/StorageService.html":{}}}],["deleteuser",{"_index":2475,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(uid",{"_index":2483,"title":{},"body":{"injectables/UsersService.html":{}}}],["dem",{"_index":1750,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["den",{"_index":1694,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["denen",{"_index":1675,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["dependencies",{"_index":2584,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["der",{"_index":1218,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["derartige",{"_index":1735,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["deren",{"_index":1810,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["des",{"_index":1706,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"injectables/StorageService.html":{}}}],["description",{"_index":199,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/LegalFooterComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["detailed",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["dev",{"_index":2617,"title":{},"body":{"index.html":{}}}],["development",{"_index":2612,"title":{},"body":{"index.html":{}}}],["devspace",{"_index":1407,"title":{},"body":{"components/NavigationComponent.html":{}}}],["dezember",{"_index":2390,"title":{},"body":{"injectables/TimeService.html":{}}}],["dfsdf",{"_index":807,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["dialog",{"_index":750,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["dialog:matdialog,private",{"_index":1262,"title":{},"body":{"components/MemberListComponent.html":{}}}],["dialogavatarref",{"_index":834,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["dialogref",{"_index":178,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["dialogref.componentinstance.channel.author_uid",{"_index":943,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["dialogref.componentinstance.channel.members_uids.push(this.user_id",{"_index":945,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["dialoguserref",{"_index":1063,"title":{},"body":{"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["die",{"_index":1214,"title":{},"body":{"components/LoginComponent.html":{},"components/MessageItemComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{}}}],["dienen",{"_index":230,"title":{},"body":{"components/AddChannelComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["dienstag",{"_index":2373,"title":{},"body":{"injectables/TimeService.html":{}}}],["dienste",{"_index":1939,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["dienstleister",{"_index":1851,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["dient",{"_index":1830,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["dies",{"_index":1710,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["diese",{"_index":764,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/SignUpComponent.html":{}}}],["diesem",{"_index":1685,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["diesen",{"_index":727,"title":{},"body":{"injectables/ChannelsService.html":{},"components/PrivacypolicyComponent.html":{}}}],["dieser",{"_index":802,"title":{},"body":{"components/EditChannelComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["different",{"_index":52,"title":{},"body":{"injectables/ActivityService.html":{}}}],["diffindays",{"_index":2352,"title":{},"body":{"injectables/TimeService.html":{}}}],["diffinms",{"_index":2404,"title":{},"body":{"injectables/TimeService.html":{}}}],["dir",{"_index":771,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/LoginComponent.html":{}}}],["dir.items",{"_index":2246,"title":{},"body":{"injectables/StorageService.html":{}}}],["dir.items.foreach((fileref",{"_index":2231,"title":{},"body":{"injectables/StorageService.html":{}}}],["dir.prefixes.foreach((folderref",{"_index":2233,"title":{},"body":{"injectables/StorageService.html":{}}}],["direct",{"_index":263,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["directive",{"_index":247,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["directives",{"_index":330,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2626,"title":{},"body":{"index.html":{}}}],["directly",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["directmessagecomponent",{"_index":262,"title":{"components/DirectMessageComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["directory",{"_index":2631,"title":{},"body":{"index.html":{}}}],["direkt",{"_index":1861,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["display",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["displayed",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/ResetPwComponent.html":{}}}],["displaying",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["displayname",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["displays",{"_index":397,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/LegalFooterComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["dist",{"_index":2630,"title":{},"body":{"index.html":{}}}],["doc",{"_index":663,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["doc's",{"_index":667,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{}}}],["doc(this.getcolref",{"_index":708,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["docref",{"_index":720,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["document",{"_index":665,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["documentation",{"_index":2524,"title":{},"body":{"coverage.html":{}}}],["documentreference",{"_index":678,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["doing",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{}}}],["dokumente",{"_index":816,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["dom",{"_index":160,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["donnerstag",{"_index":2375,"title":{},"body":{"injectables/TimeService.html":{}}}],["drittanbietern",{"_index":1941,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["dritten",{"_index":1840,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["dsgvo",{"_index":1766,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["du",{"_index":811,"title":{},"body":{"components/EditChannelComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["duration",{"_index":431,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{}}}],["durch",{"_index":1693,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["during",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["dynamic",{"_index":2595,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":882,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ImpressComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/SignUpComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["e.target",{"_index":1564,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["e.unified",{"_index":909,"title":{},"body":{"injectables/EmojiService.html":{}}}],["e2e",{"_index":2639,"title":{},"body":{"index.html":{}}}],["ebenso",{"_index":1748,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["edit",{"_index":266,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["editchannelcomponent",{"_index":265,"title":{"components/EditChannelComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["editdescriptionmode",{"_index":777,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["editmainuser.submitted",{"_index":886,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["editmainuseravatar",{"_index":871,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["editmainuseravatarcomponent",{"_index":267,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["editmainuserprofilecard",{"_index":1243,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["editmainuserprofilecardcomponent",{"_index":270,"title":{"components/EditMainUserProfileCardComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["editmode",{"_index":778,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["editname",{"_index":779,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["edituserprofilecardcomponent",{"_index":273,"title":{"components/EditUserProfileCardComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["eigenem",{"_index":1936,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["eigenen",{"_index":731,"title":{},"body":{"injectables/ChannelsService.html":{},"components/PrivacypolicyComponent.html":{}}}],["eigenes",{"_index":1588,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["ein",{"_index":1226,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["eindeutig",{"_index":1794,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["eine",{"_index":1782,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{}}}],["einem",{"_index":1964,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["einen",{"_index":880,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["einer",{"_index":1800,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["eines",{"_index":1371,"title":{},"body":{"components/MessageItemComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["einfachen",{"_index":1663,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["eingeholt",{"_index":1822,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["einigen",{"_index":1980,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["einreichen",{"_index":1913,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["einschränkung",{"_index":1895,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["einwilligung",{"_index":1814,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["elektronische",{"_index":1781,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["element",{"_index":246,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["elgendorfer",{"_index":1969,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["email",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{}}}],["email.valid",{"_index":887,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/SignUpComponent.html":{}}}],["emoji",{"_index":755,"title":{},"body":{"components/DirectMessageComponent.html":{},"injectables/EmojiService.html":{},"components/MessageItemComponent.html":{},"components/NewMessageComponent.html":{},"classes/Reaction.html":{},"components/ThreadComponent.html":{},"dependencies.html":{}}}],["emoji.native",{"_index":913,"title":{},"body":{"injectables/EmojiService.html":{}}}],["emoji.unified",{"_index":910,"title":{},"body":{"injectables/EmojiService.html":{}}}],["emojipicker",{"_index":744,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/MessageItemComponent.html":{},"components/NewMessageComponent.html":{},"components/ThreadComponent.html":{}}}],["emojis",{"_index":895,"title":{},"body":{"injectables/EmojiService.html":{},"components/ThreadComponent.html":{}}}],["emojiservice",{"_index":891,"title":{"injectables/EmojiService.html":{}},"body":{"injectables/EmojiService.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["emojisub",{"_index":1298,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["empfangenen",{"_index":1862,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["empfehlen",{"_index":1213,"title":{},"body":{"components/LoginComponent.html":{}}}],["end",{"_index":2638,"title":{},"body":{"index.html":{}}}],["enthalten",{"_index":2116,"title":{},"body":{"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["entnehmen",{"_index":1683,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["entscheidungen",{"_index":818,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["entwicklerteam",{"_index":390,"title":{},"body":{"components/AddMembersComponent.html":{},"components/EditChannelComponent.html":{},"components/ThreadComponent.html":{}}}],["environment",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["equal",{"_index":432,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["erfasst",{"_index":1709,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erfassung",{"_index":1767,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erfolgreich",{"_index":2438,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["erfolgreichen",{"_index":1786,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erfolgreicher",{"_index":1882,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erfolgt",{"_index":1692,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erforderlich",{"_index":1772,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erfüllung",{"_index":1832,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erhalten",{"_index":1783,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erhebung",{"_index":1910,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erhoben",{"_index":1776,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erhobenen",{"_index":1860,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erkennen",{"_index":1795,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erlaubt",{"_index":1792,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["ermessen",{"_index":1937,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["ermittelt",{"_index":1747,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erneut",{"_index":2109,"title":{},"body":{"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["err",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/ThreadsService.html":{}}}],["err/not",{"_index":2225,"title":{},"body":{"injectables/StorageService.html":{}}}],["error",{"_index":717,"title":{},"body":{"injectables/ChannelsService.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["errors/exceptions",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["erstellen",{"_index":227,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["erstellt",{"_index":820,"title":{},"body":{"components/EditChannelComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["erstgenannte",{"_index":1845,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["erwähnten",{"_index":1976,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["es",{"_index":1880,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["event",{"_index":434,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"components/ThreadComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["event.emoji.native",{"_index":1383,"title":{},"body":{"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["event.emoji.unified",{"_index":2282,"title":{},"body":{"components/ThreadComponent.html":{}}}],["eventemitter",{"_index":425,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["example",{"_index":2417,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["execute",{"_index":2636,"title":{},"body":{"index.html":{}}}],["executed",{"_index":687,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["exists",{"_index":689,"title":{},"body":{"injectables/ChannelsService.html":{},"components/PLAYGROUNDComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["expandable",{"_index":274,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["expandablebuttoncomponent",{"_index":205,"title":{"components/ExpandableButtonComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["expired",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["export",{"_index":102,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{}}}],["external",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{}}}],["f",{"_index":1765,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["falsches",{"_index":1202,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":134,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NewMessageComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"components/ThreadComponent.html":{},"components/ToastNotificationComponent.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":2228,"title":{},"body":{"injectables/StorageService.html":{}}}],["favor",{"_index":1538,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["februar",{"_index":2380,"title":{},"body":{"injectables/TimeService.html":{}}}],["feedback",{"_index":1960,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["fehlgeschlagen",{"_index":1206,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["ffen",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["fields",{"_index":2085,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["fileerror",{"_index":1491,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["fileextension",{"_index":2257,"title":{},"body":{"injectables/StorageService.html":{}}}],["filefound",{"_index":2244,"title":{},"body":{"injectables/StorageService.html":{}}}],["fileref",{"_index":2197,"title":{},"body":{"injectables/StorageService.html":{}}}],["fileref.name.includes(uid",{"_index":2247,"title":{},"body":{"injectables/StorageService.html":{}}}],["files",{"_index":1738,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["filter((user",{"_index":385,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["filteredusers",{"_index":351,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["findet",{"_index":766,"title":{},"body":{"components/DirectMessageComponent.html":{}}}],["firebase",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"components/ResetPwComponent.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["firebase/auth",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase/firestore",{"_index":697,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["firebaseauth",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["firestore",{"_index":650,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["folder",{"_index":2183,"title":{},"body":{"injectables/StorageService.html":{}}}],["folgende",{"_index":1775,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["folgenden",{"_index":1662,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["footer",{"_index":1059,"title":{},"body":{"components/LegalFooterComponent.html":{}}}],["footer'},{'name",{"_index":284,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["footer.component",{"_index":556,"title":{},"body":{"components/AuthComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["footer.component.html",{"_index":1060,"title":{},"body":{"components/LegalFooterComponent.html":{}}}],["footer.component.scss",{"_index":1061,"title":{},"body":{"components/LegalFooterComponent.html":{}}}],["footer.component.ts",{"_index":1054,"title":{},"body":{"components/LegalFooterComponent.html":{},"coverage.html":{}}}],["footer/legal",{"_index":555,"title":{},"body":{"components/AuthComponent.html":{},"components/LegalFooterComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["form",{"_index":200,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AppComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["form.submitted",{"_index":215,"title":{},"body":{"components/AddChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["form.valid",{"_index":216,"title":{},"body":{"components/AddChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["formattedhours",{"_index":2366,"title":{},"body":{"injectables/TimeService.html":{}}}],["formattedminutes",{"_index":2368,"title":{},"body":{"injectables/TimeService.html":{}}}],["formsmodule",{"_index":173,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["formsmodule,commonmodule",{"_index":337,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{}}}],["freitag",{"_index":2376,"title":{},"body":{"injectables/TimeService.html":{}}}],["from(promise",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["function",{"_index":50,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["functions",{"_index":53,"title":{},"body":{"injectables/ActivityService.html":{}}}],["funktionsfähigen",{"_index":1808,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["further",{"_index":2645,"title":{},"body":{"index.html":{}}}],["fälle",{"_index":1817,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["fällen",{"_index":1982,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["für",{"_index":729,"title":{},"body":{"injectables/ChannelsService.html":{},"components/EditChannelComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["gast",{"_index":951,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"components/LoginComponent.html":{}}}],["geben",{"_index":1225,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["gegenüber",{"_index":1884,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gekommen",{"_index":1733,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gelegentlich",{"_index":1935,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gelten",{"_index":1878,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gelöscht",{"_index":1870,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gem",{"_index":1867,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["genannten",{"_index":1974,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["generate",{"_index":2625,"title":{},"body":{"index.html":{}}}],["generateavatarname",{"_index":2170,"title":{},"body":{"injectables/StorageService.html":{}}}],["generateavatarname(img",{"_index":2187,"title":{},"body":{"injectables/StorageService.html":{}}}],["generated",{"_index":2609,"title":{},"body":{"index.html":{}}}],["generic",{"_index":2467,"title":{},"body":{"injectables/UsersService.html":{}}}],["geografischer",{"_index":1730,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gerichte",{"_index":1989,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["german",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{}}}],["geräts",{"_index":1708,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gesendet",{"_index":2439,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["gesetze",{"_index":1874,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gesetzgeber",{"_index":1983,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gesetzlich",{"_index":1824,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gespeichert",{"_index":1859,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gestern",{"_index":2411,"title":{},"body":{"injectables/TimeService.html":{}}}],["getactiveusers",{"_index":21,"title":{},"body":{"injectables/ActivityService.html":{}}}],["getallusers",{"_index":22,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddMembersComponent.html":{}}}],["getauth",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getautherror",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{}}}],["getautherror(response",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{}}}],["getauthor",{"_index":1302,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["getavatarref",{"_index":2171,"title":{},"body":{"injectables/StorageService.html":{}}}],["getavatarref(uid",{"_index":2190,"title":{},"body":{"injectables/StorageService.html":{}}}],["getchannelthreads",{"_index":2294,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["getchannelthreads(threads",{"_index":2303,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["getcolref",{"_index":654,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["getcurrent",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuid",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["getdownloadurl",{"_index":2218,"title":{},"body":{"injectables/StorageService.html":{}}}],["getdownloadurl(fileref",{"_index":2235,"title":{},"body":{"injectables/StorageService.html":{}}}],["getemojis",{"_index":897,"title":{},"body":{"injectables/EmojiService.html":{},"components/ThreadComponent.html":{}}}],["getfileerror",{"_index":1494,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["getfileerror(response",{"_index":1503,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["getfirestore",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getgroupedemojis",{"_index":2004,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["getgroupedemojis(reactions",{"_index":2012,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["getpause",{"_index":456,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["getplaceholder",{"_index":1273,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["getpostreactions",{"_index":2005,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["getpostreactions(reactions",{"_index":2014,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["getrelativeday",{"_index":2344,"title":{},"body":{"injectables/TimeService.html":{}}}],["getrelativeday(diffindays",{"_index":2350,"title":{},"body":{"injectables/TimeService.html":{}}}],["getshowing",{"_index":2430,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["getsingledocref",{"_index":655,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["getsingledocref(post_id",{"_index":1620,"title":{},"body":{"injectables/PostsService.html":{}}}],["getsingledocref(reaction_id",{"_index":2016,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["getsingledocref(thread_id",{"_index":2306,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["getsingledocref(uid",{"_index":675,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/UsersService.html":{}}}],["getstorage",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gettempavatarref",{"_index":2172,"title":{},"body":{"injectables/StorageService.html":{}}}],["gettempavatarref(uid",{"_index":2192,"title":{},"body":{"injectables/StorageService.html":{}}}],["getthreadposts",{"_index":1613,"title":{},"body":{"injectables/PostsService.html":{}}}],["getthreadposts(posts",{"_index":1622,"title":{},"body":{"injectables/PostsService.html":{}}}],["getting",{"_index":2606,"title":{"index.html":{}},"body":{}}],["geturl",{"_index":2173,"title":{},"body":{"injectables/StorageService.html":{}}}],["geturl(fileref",{"_index":2195,"title":{},"body":{"injectables/StorageService.html":{}}}],["getuserbyuid",{"_index":2476,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyuid(uid",{"_index":2487,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserstate",{"_index":23,"title":{},"body":{"injectables/ActivityService.html":{}}}],["getuserstate(user",{"_index":41,"title":{},"body":{"injectables/ActivityService.html":{}}}],["gewährleistung",{"_index":1925,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gilt",{"_index":1816,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["given",{"_index":2494,"title":{},"body":{"injectables/UsersService.html":{}}}],["go",{"_index":2647,"title":{},"body":{"index.html":{}}}],["google",{"_index":1117,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{}}}],["googleauthprovider",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["groupedemojis",{"_index":1299,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["groupedemojis[emoji].count",{"_index":1399,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["groups",{"_index":2036,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["groups[r.emoji",{"_index":2038,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["groups[r.emoji].count",{"_index":2039,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["groups[r.emoji].users.push(user.name",{"_index":2041,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["grundfreiheiten",{"_index":1844,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["grundrechte",{"_index":1843,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["grundsätzlich",{"_index":1806,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gründen",{"_index":1820,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["grünwalder",{"_index":1045,"title":{},"body":{"components/ImpressComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["guest",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{}}}],["gäste",{"_index":1230,"title":{},"body":{"components/LoginComponent.html":{}}}],["gültige",{"_index":1780,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["gültiges",{"_index":1784,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["haftung",{"_index":1950,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["handeln",{"_index":1928,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["handled",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["handleexternaluserregistrationstatus",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{}}}],["handleexternaluserregistrationstatus(user",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{}}}],["handles",{"_index":476,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["handlestatechange",{"_index":2268,"title":{},"body":{"components/ThreadComponent.html":{}}}],["handlestatechange(newstate",{"_index":2273,"title":{},"body":{"components/ThreadComponent.html":{}}}],["hast",{"_index":2158,"title":{},"body":{"components/SignUpComponent.html":{}}}],["hat",{"_index":1397,"title":{},"body":{"components/MessageItemComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/ThreadComponent.html":{}}}],["header",{"_index":954,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":277,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["header.component.html",{"_index":956,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":957,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1009,"title":{},"body":{"components/HomeComponent.html":{}}}],["headercomponent",{"_index":276,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["help",{"_index":2646,"title":{},"body":{"index.html":{}}}],["here",{"_index":2472,"title":{},"body":{"injectables/UsersService.html":{}}}],["heute",{"_index":2410,"title":{},"body":{"injectables/TimeService.html":{}}}],["hidden",{"_index":1515,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["hidebackbtn",{"_index":1653,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["hideemojipicker",{"_index":1308,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["hier",{"_index":809,"title":{},"body":{"components/EditChannelComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["hilfsfunktion",{"_index":1369,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["hinweise",{"_index":1661,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["hinzufügen",{"_index":339,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/MemberListComponent.html":{}}}],["historyback",{"_index":1036,"title":{},"body":{"components/ImpressComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["hochladen",{"_index":1592,"title":{},"body":{"components/PickAvatarComponent.html":{},"injectables/StorageService.html":{}}}],["home",{"_index":530,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["home'},{'name",{"_index":279,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["home.component.html",{"_index":978,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":979,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":278,"title":{"components/HomeComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["hoster",{"_index":1965,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["hosting",{"_index":1850,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["hours",{"_index":2362,"title":{},"body":{"injectables/TimeService.html":{}}}],["hours.tostring().padstart(2",{"_index":2367,"title":{},"body":{"injectables/TimeService.html":{}}}],["html",{"_index":245,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["htmlinputelement",{"_index":1565,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["http://localhost:4200",{"_index":2619,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":688,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["ich",{"_index":2161,"title":{},"body":{"components/SignUpComponent.html":{}}}],["icon",{"_index":922,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["icons",{"_index":2599,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":217,"title":{},"body":{"components/AddChannelComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["identical",{"_index":666,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":2525,"title":{},"body":{"coverage.html":{}}}],["identifiziert",{"_index":1677,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["identifizierung",{"_index":1883,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["idle",{"_index":149,"title":{},"body":{"injectables/ActivityService.html":{},"components/MainUserProfileCardComponent.html":{},"interfaces/UserState.html":{}}}],["idleduration",{"_index":15,"title":{},"body":{"injectables/ActivityService.html":{}}}],["if(!this.testing",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["if(!url.search.includes('mode",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["if((email.touched",{"_index":885,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{}}}],["if((password.touched",{"_index":1223,"title":{},"body":{"components/LoginComponent.html":{}}}],["if((testing",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["if(currentchannel.channel_id",{"_index":1480,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["if(email.touched",{"_index":2061,"title":{},"body":{"components/RequestPwResetComponent.html":{},"components/SignUpComponent.html":{}}}],["if(fileerror",{"_index":1593,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["if(loginform.submitted",{"_index":1227,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(message",{"_index":2437,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["if(name.touched",{"_index":876,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/SignUpComponent.html":{}}}],["if(password.touched",{"_index":2111,"title":{},"body":{"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["if(passwordconfirmation.touched",{"_index":2117,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["if(resetpwform.submitted",{"_index":2125,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["if(signupform.submitted",{"_index":2160,"title":{},"body":{"components/SignUpComponent.html":{}}}],["if(this.userchannels.length",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{}}}],["if(user",{"_index":135,"title":{},"body":{"injectables/ActivityService.html":{}}}],["ihnen",{"_index":1742,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{}}}],["ihr",{"_index":1723,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["ihre",{"_index":1725,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{}}}],["ihren",{"_index":1666,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["ihrer",{"_index":1911,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["ihres",{"_index":1716,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["im",{"_index":1962,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["image",{"_index":1577,"title":{},"body":{"components/PickAvatarComponent.html":{},"injectables/StorageService.html":{}}}],["img",{"_index":2189,"title":{},"body":{"injectables/StorageService.html":{}}}],["img.name.split",{"_index":2256,"title":{},"body":{"injectables/StorageService.html":{}}}],["img.type.includes('image",{"_index":2226,"title":{},"body":{"injectables/StorageService.html":{}}}],["implement",{"_index":2248,"title":{},"body":{"injectables/StorageService.html":{}}}],["implements",{"_index":104,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/ChannelsService.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"injectables/ReactionsService.html":{},"components/ResetPwComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["import",{"_index":91,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":171,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["impress",{"_index":1033,"title":{},"body":{"components/ImpressComponent.html":{}}}],["impress'},{'name",{"_index":281,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["impress.component.html",{"_index":1034,"title":{},"body":{"components/ImpressComponent.html":{}}}],["impress.component.scss",{"_index":1035,"title":{},"body":{"components/ImpressComponent.html":{}}}],["impresscomponent",{"_index":280,"title":{"components/ImpressComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["impressum",{"_index":1042,"title":{},"body":{"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{}}}],["imprint",{"_index":1056,"title":{},"body":{"components/LegalFooterComponent.html":{}}}],["included",{"_index":2471,"title":{},"body":{"injectables/UsersService.html":{}}}],["includes",{"_index":2469,"title":{},"body":{"injectables/UsersService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{}}}],["informationen",{"_index":1681,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["inhalt",{"_index":1951,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["inhalte",{"_index":1811,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["initanimation",{"_index":416,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["initialization",{"_index":444,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["initializeapp",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initializes",{"_index":440,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["initializing",{"_index":1492,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["initinterval",{"_index":24,"title":{},"body":{"injectables/ActivityService.html":{}}}],["initlisteners",{"_index":25,"title":{},"body":{"injectables/ActivityService.html":{}}}],["inituserchannels",{"_index":656,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["inituserchannels(user",{"_index":679,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["inject",{"_index":93,"title":{},"body":{"injectables/ActivityService.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/HomeComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/UsersService.html":{}}}],["inject(activatedroute",{"_index":2093,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["inject(activityservice",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{}}}],["inject(auth",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(authservice",{"_index":79,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["inject(channelsservice",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{},"components/PLAYGROUNDComponent.html":{},"injectables/UsersService.html":{}}}],["inject(firestore",{"_index":693,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["inject(mat_dialog_data",{"_index":841,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{}}}],["inject(postsservice",{"_index":1449,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/ThreadsService.html":{}}}],["inject(reactionsservice",{"_index":1453,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["inject(router",{"_index":454,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["inject(storage",{"_index":2211,"title":{},"body":{"injectables/StorageService.html":{}}}],["inject(storageservice",{"_index":1547,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["inject(threadsservice",{"_index":1457,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["inject(timeservice",{"_index":1343,"title":{},"body":{"components/MessageItemComponent.html":{},"components/TimeSeparatorComponent.html":{}}}],["inject(usersservice",{"_index":88,"title":{},"body":{"injectables/ActivityService.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/ReactionsService.html":{},"components/SignUpComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"injectables/EmojiService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"injectables/EmojiService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"injectables/EmojiService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["input",{"_index":405,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/PickAvatarComponent.html":{},"components/ResetPwComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["input.files",{"_index":1566,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["input.required",{"_index":940,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{}}}],["inputs",{"_index":418,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["insert_comment",{"_index":1386,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["instance",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["integrität",{"_index":1956,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["interesse",{"_index":1759,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["interessen",{"_index":1842,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["interesses",{"_index":1839,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["interface",{"_index":2463,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/UserState.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":2464,"title":{},"body":{"interfaces/UserState.html":{}}}],["interfaces/userstate.interface",{"_index":99,"title":{},"body":{"injectables/ActivityService.html":{}}}],["internal",{"_index":1505,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["internet",{"_index":1717,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["internetseite",{"_index":1700,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["internetseiten",{"_index":1671,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["interval",{"_index":49,"title":{},"body":{"injectables/ActivityService.html":{}}}],["intro",{"_index":399,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{}}}],["intro'},{'name",{"_index":257,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["intro.component",{"_index":525,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["intro.component.html",{"_index":412,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro.component.scss",{"_index":413,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro.component.ts",{"_index":396,"title":{},"body":{"components/AnimationIntroComponent.html":{},"coverage.html":{}}}],["intro.component.ts:21",{"_index":423,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro.component.ts:22",{"_index":426,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro.component.ts:23",{"_index":453,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro.component.ts:24",{"_index":455,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro.component.ts:26",{"_index":452,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro.component.ts:28",{"_index":424,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro.component.ts:32",{"_index":457,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro.component.ts:40",{"_index":442,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro.component.ts:48",{"_index":439,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro.component.ts:60",{"_index":427,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro.component.ts:72",{"_index":445,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["intro/animation",{"_index":395,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["ionos",{"_index":1848,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["ip",{"_index":1726,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["isexist",{"_index":907,"title":{},"body":{"injectables/EmojiService.html":{}}}],["isexist.count",{"_index":911,"title":{},"body":{"injectables/EmojiService.html":{}}}],["isimage",{"_index":2174,"title":{},"body":{"injectables/StorageService.html":{}}}],["isimage(img",{"_index":2198,"title":{},"body":{"injectables/StorageService.html":{}}}],["ismenuexpanded",{"_index":923,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["isregistereduser",{"_index":2477,"title":{},"body":{"injectables/UsersService.html":{}}}],["isregistereduser(authuid",{"_index":2491,"title":{},"body":{"injectables/UsersService.html":{}}}],["ist",{"_index":803,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{}}}],["item",{"_index":1294,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item'},{'name",{"_index":300,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["item.component",{"_index":2279,"title":{},"body":{"components/ThreadComponent.html":{}}}],["item.component.html",{"_index":1295,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.scss",{"_index":1296,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts",{"_index":1293,"title":{},"body":{"components/MessageItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:105",{"_index":1327,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:110",{"_index":1329,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:124",{"_index":1323,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:137",{"_index":1325,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:26",{"_index":1319,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:27",{"_index":1320,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:28",{"_index":1317,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:29",{"_index":1318,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:30",{"_index":1316,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:31",{"_index":1321,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:33",{"_index":1337,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:34",{"_index":1339,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:35",{"_index":1342,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:36",{"_index":1340,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:37",{"_index":1338,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:39",{"_index":1344,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:40",{"_index":1345,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:41",{"_index":1315,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:58",{"_index":1331,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:64",{"_index":1330,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:69",{"_index":1324,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:74",{"_index":1336,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:79",{"_index":1334,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:89",{"_index":1333,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item.component.ts:97",{"_index":1335,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["item/message",{"_index":1292,"title":{},"body":{"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["itself",{"_index":504,"title":{},"body":{"components/AppComponent.html":{}}}],["januar",{"_index":2379,"title":{},"body":{"injectables/TimeService.html":{}}}],["jedem",{"_index":1701,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["jederzeit",{"_index":1899,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["jedes",{"_index":1959,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["juli",{"_index":2385,"title":{},"body":{"injectables/TimeService.html":{}}}],["juni",{"_index":2384,"title":{},"body":{"injectables/TimeService.html":{}}}],["kanal",{"_index":728,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["kann",{"_index":1823,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["kannst",{"_index":810,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["karma",{"_index":2637,"title":{},"body":{"index.html":{}}}],["keine",{"_index":1948,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["kennwörter",{"_index":2122,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["key",{"_index":1352,"title":{},"body":{"components/MessageItemComponent.html":{},"injectables/ReactionsService.html":{}}}],["kommunikation",{"_index":234,"title":{},"body":{"components/AddChannelComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["kontakt",{"_index":1050,"title":{},"body":{"components/ImpressComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["kontakt&commat;leitermann.online",{"_index":1051,"title":{},"body":{"components/ImpressComponent.html":{}}}],["kontakt&nbsp;&commat;&nbsp;leitermann.online",{"_index":1697,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["kontakt@leitermann.online",{"_index":1052,"title":{},"body":{"components/ImpressComponent.html":{}}}],["kontaktaufnahme",{"_index":1802,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["kontaktdaten",{"_index":1696,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["kontaktformular",{"_index":1774,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["kontaktieren",{"_index":1907,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["konto",{"_index":1232,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["korrekt",{"_index":1741,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["korrekte",{"_index":1778,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["können",{"_index":1679,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{}}}],["lastactivity",{"_index":2442,"title":{},"body":{"classes/User.html":{}}}],["lastreply",{"_index":1309,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["later",{"_index":971,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{}}}],["legal",{"_index":283,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["legalfootercomponent",{"_index":282,"title":{"components/LegalFooterComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["legend",{"_index":244,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["leider",{"_index":888,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/SignUpComponent.html":{}}}],["leitermann",{"_index":1044,"title":{},"body":{"components/ImpressComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["leitermann.online",{"_index":1990,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["letzte",{"_index":1394,"title":{},"body":{"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["leute",{"_index":338,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{}}}],["liegt",{"_index":1756,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["links",{"_index":1055,"title":{},"body":{"components/LegalFooterComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["list",{"_index":701,"title":{},"body":{"injectables/ChannelsService.html":{},"components/MemberListComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["list'},{'name",{"_index":295,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["list.component",{"_index":377,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["list.component.html",{"_index":1251,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.scss",{"_index":1252,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts",{"_index":1250,"title":{},"body":{"components/MemberListComponent.html":{},"coverage.html":{}}}],["list.component.ts:18",{"_index":1255,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:20",{"_index":1259,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:26",{"_index":1256,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:30",{"_index":1258,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:34",{"_index":1257,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.foreach((element",{"_index":702,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["list/member",{"_index":376,"title":{},"body":{"components/AddMembersComponent.html":{},"components/MemberListComponent.html":{},"coverage.html":{}}}],["listall",{"_index":2216,"title":{},"body":{"injectables/StorageService.html":{}}}],["listall(ref",{"_index":2229,"title":{},"body":{"injectables/StorageService.html":{}}}],["listall(this.avatarsref",{"_index":2259,"title":{},"body":{"injectables/StorageService.html":{}}}],["listall(this.tempavatarsref",{"_index":2245,"title":{},"body":{"injectables/StorageService.html":{}}}],["liste",{"_index":1585,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["lit",{"_index":1764,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["literal",{"_index":899,"title":{},"body":{"injectables/EmojiService.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"injectables/ReactionsService.html":{}}}],["loading",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["location",{"_index":1038,"title":{},"body":{"components/ImpressComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["lock",{"_index":1222,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["log",{"_index":288,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["logged",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{}}}],["loggedout",{"_index":150,"title":{},"body":{"injectables/ActivityService.html":{},"interfaces/UserState.html":{}}}],["login",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["login'},{'name",{"_index":286,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["login(email",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginasguest",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["logincomponent",{"_index":285,"title":{"components/LoginComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["loginform.submitted",{"_index":1221,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginwithgoogle",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["logmeout",{"_index":1064,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["logo",{"_index":401,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["logout",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["logoutcard",{"_index":969,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logoutcardcomponent",{"_index":287,"title":{"components/LogOutCardComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["logs",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{}}}],["länger",{"_index":1876,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["löschung",{"_index":1891,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["mai",{"_index":2383,"title":{},"body":{"injectables/TimeService.html":{}}}],["mail",{"_index":883,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ImpressComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/SignUpComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["mails",{"_index":1863,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["main",{"_index":268,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["mainchatcomponent",{"_index":290,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["mainuser",{"_index":829,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"injectables/StorageService.html":{}}}],["mainuser.email",{"_index":1247,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["mainuser.name",{"_index":976,"title":{},"body":{"components/HeaderComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["mainuserprofilecard",{"_index":1081,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["mainuserprofilecardcomponent",{"_index":292,"title":{"components/MainUserProfileCardComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["marketing",{"_index":240,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["mart",{"_index":756,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/MessageItemComponent.html":{},"components/NewMessageComponent.html":{},"components/ThreadComponent.html":{},"dependencies.html":{}}}],["mat_dialog_data",{"_index":846,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{}}}],["matching",{"_index":155,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":748,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["matdialogmodule",{"_index":955,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{}}}],["matdialogref",{"_index":184,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["material",{"_index":2598,"title":{},"body":{"dependencies.html":{}}}],["math.floor(diffinms",{"_index":2407,"title":{},"body":{"injectables/TimeService.html":{}}}],["max",{"_index":2289,"title":{},"body":{"components/ThreadComponent.html":{}}}],["maximum",{"_index":2250,"title":{},"body":{"injectables/StorageService.html":{}}}],["maßnahmen",{"_index":1933,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["means",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["meetings",{"_index":814,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["mehr",{"_index":1865,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["meinen",{"_index":1734,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["member",{"_index":294,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["memberlistcomponent",{"_index":293,"title":{"components/MemberListComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["members",{"_index":252,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["members'},{'name",{"_index":254,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["members.component",{"_index":1260,"title":{},"body":{"components/MemberListComponent.html":{}}}],["members.component.html",{"_index":348,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.scss",{"_index":349,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.ts",{"_index":346,"title":{},"body":{"components/AddMembersComponent.html":{},"coverage.html":{}}}],["members.component.ts:17",{"_index":373,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.ts:18",{"_index":370,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.ts:19",{"_index":372,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.ts:20",{"_index":374,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.ts:21",{"_index":371,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.ts:22",{"_index":362,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.ts:25",{"_index":366,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.ts:29",{"_index":367,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.ts:42",{"_index":369,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.ts:47",{"_index":364,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.ts:52",{"_index":363,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members.component.ts:54",{"_index":365,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["members/add",{"_index":345,"title":{},"body":{"components/AddMembersComponent.html":{},"components/MemberListComponent.html":{},"coverage.html":{}}}],["members_uids",{"_index":625,"title":{},"body":{"classes/Channel.html":{},"injectables/ChannelsService.html":{}}}],["men",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["merge",{"_index":226,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["message",{"_index":297,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["message'},{'name",{"_index":264,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["message.component.html",{"_index":742,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/NewMessageComponent.html":{}}}],["message.component.scss",{"_index":743,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/NewMessageComponent.html":{}}}],["message.component.ts",{"_index":740,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/NewMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:15",{"_index":1410,"title":{},"body":{"components/NewMessageComponent.html":{}}}],["message.component.ts:16",{"_index":749,"title":{},"body":{"components/DirectMessageComponent.html":{}}}],["message.component.ts:19",{"_index":753,"title":{},"body":{"components/DirectMessageComponent.html":{}}}],["message.component.ts:20",{"_index":752,"title":{},"body":{"components/DirectMessageComponent.html":{}}}],["message.component.ts:22",{"_index":751,"title":{},"body":{"components/DirectMessageComponent.html":{}}}],["message/direct",{"_index":739,"title":{},"body":{"components/DirectMessageComponent.html":{},"coverage.html":{}}}],["message/new",{"_index":1409,"title":{},"body":{"components/NewMessageComponent.html":{},"coverage.html":{}}}],["messageboxcomponent",{"_index":296,"title":{"components/MessageBoxComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["messageitemcomponent",{"_index":299,"title":{"components/MessageItemComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["messages",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{}}}],["messagesender",{"_index":1310,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["messagingsenderid",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":165,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["methode",{"_index":2236,"title":{},"body":{"injectables/StorageService.html":{}}}],["methods",{"_index":20,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{}}}],["midnight",{"_index":2398,"title":{},"body":{"injectables/TimeService.html":{}}}],["midnight.gettime",{"_index":2405,"title":{},"body":{"injectables/TimeService.html":{}}}],["mindestens",{"_index":2114,"title":{},"body":{"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["minutes",{"_index":2364,"title":{},"body":{"injectables/TimeService.html":{}}}],["minutes.tostring().padstart(2",{"_index":2369,"title":{},"body":{"injectables/TimeService.html":{}}}],["mir",{"_index":1732,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["miscellaneous",{"_index":2653,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":813,"title":{},"body":{"components/EditChannelComponent.html":{},"components/LoginComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["mitglieder",{"_index":341,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{},"components/MemberListComponent.html":{}}}],["mittwoch",{"_index":2374,"title":{},"body":{"injectables/TimeService.html":{}}}],["mode",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["models/channel.class",{"_index":210,"title":{},"body":{"components/AddChannelComponent.html":{},"injectables/ChannelsService.html":{},"components/ExpandableButtonComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/PLAYGROUNDComponent.html":{}}}],["models/post.class",{"_index":1283,"title":{},"body":{"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"injectables/PostsService.html":{},"injectables/ThreadsService.html":{}}}],["models/reaction.class",{"_index":1350,"title":{},"body":{"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"injectables/ReactionsService.html":{}}}],["models/thread.class",{"_index":1460,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{}}}],["models/user.class",{"_index":98,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddMembersComponent.html":{},"injectables/ChannelsService.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["modules",{"_index":2649,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["montabaur",{"_index":1972,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["montag",{"_index":2372,"title":{},"body":{"injectables/TimeService.html":{}}}],["month",{"_index":2395,"title":{},"body":{"injectables/TimeService.html":{}}}],["months",{"_index":2378,"title":{},"body":{"injectables/TimeService.html":{}}}],["months[date.getmonth",{"_index":2396,"title":{},"body":{"injectables/TimeService.html":{}}}],["more",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["more_verti",{"_index":1387,"title":{},"body":{"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["msinday",{"_index":2402,"title":{},"body":{"injectables/TimeService.html":{}}}],["muss",{"_index":2113,"title":{},"body":{"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["musterman",{"_index":2290,"title":{},"body":{"components/ThreadComponent.html":{}}}],["märz",{"_index":2381,"title":{},"body":{"injectables/TimeService.html":{}}}],["möglichkeit",{"_index":1803,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["möglichkeiten",{"_index":1929,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["müller",{"_index":952,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["müllerund",{"_index":770,"title":{},"body":{"components/DirectMessageComponent.html":{}}}],["münchen",{"_index":1049,"title":{},"body":{"components/ImpressComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["müssen",{"_index":1866,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["nach",{"_index":1760,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["nachricht",{"_index":1286,"title":{},"body":{"components/MessageBoxComponent.html":{},"components/NewMessageComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["name.valid",{"_index":877,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/SignUpComponent.html":{}}}],["namen",{"_index":881,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["nameparts",{"_index":2255,"title":{},"body":{"injectables/StorageService.html":{}}}],["nameparts[nameparts.length",{"_index":2258,"title":{},"body":{"injectables/StorageService.html":{}}}],["native",{"_index":904,"title":{},"body":{"injectables/EmojiService.html":{},"components/ThreadComponent.html":{}}}],["navigate",{"_index":2618,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1401,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":302,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["navigation.component.html",{"_index":1402,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":1403,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigationcomponent",{"_index":301,"title":{"components/NavigationComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["nbsp",{"_index":1973,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["ndern",{"_index":2063,"title":{},"body":{"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{}}}],["necessary",{"_index":860,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["need",{"_index":2643,"title":{},"body":{"index.html":{}}}],["netze",{"_index":1754,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["neu",{"_index":1231,"title":{},"body":{"components/LoginComponent.html":{}}}],["neue",{"_index":1411,"title":{},"body":{"components/NewMessageComponent.html":{}}}],["neues",{"_index":2159,"title":{},"body":{"components/SignUpComponent.html":{}}}],["new",{"_index":81,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newmessagecomponent",{"_index":303,"title":{"components/NewMessageComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["newstate",{"_index":2275,"title":{},"body":{"components/ThreadComponent.html":{}}}],["next",{"_index":1175,"title":{},"body":{"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["ng",{"_index":2615,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":195,"title":{},"body":{"components/AddChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["ngondestroy",{"_index":26,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"injectables/ChannelsService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["ngoninit",{"_index":358,"title":{},"body":{"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/ResetPwComponent.html":{},"components/ThreadComponent.html":{}}}],["nicht",{"_index":1821,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/ResetPwComponent.html":{}}}],["noah",{"_index":762,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/ThreadComponent.html":{}}}],["notification",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["notification'},{'name",{"_index":327,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["notification.component",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["notification.component.html",{"_index":2419,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.scss",{"_index":2420,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.ts",{"_index":2416,"title":{},"body":{"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["notification.component.ts:22",{"_index":2425,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.ts:23",{"_index":2427,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.ts:25",{"_index":2429,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.ts:27",{"_index":2426,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.ts:33",{"_index":2431,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.ts:37",{"_index":2428,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification/toast",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["notizen",{"_index":732,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["november",{"_index":2389,"title":{},"body":{"injectables/TimeService.html":{}}}],["now",{"_index":2397,"title":{},"body":{"injectables/TimeService.html":{}}}],["now.getdate",{"_index":2401,"title":{},"body":{"injectables/TimeService.html":{}}}],["now.getmonth",{"_index":2400,"title":{},"body":{"injectables/TimeService.html":{}}}],["null",{"_index":334,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["number",{"_index":84,"title":{},"body":{"injectables/ActivityService.html":{},"classes/Channel.html":{},"injectables/EmojiService.html":{},"components/MessageItemComponent.html":{},"classes/Post.html":{},"injectables/ReactionsService.html":{},"classes/Thread.html":{},"injectables/TimeService.html":{},"classes/User.html":{}}}],["nur",{"_index":767,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["nutzen",{"_index":1216,"title":{},"body":{"components/LoginComponent.html":{}}}],["nutzern",{"_index":1791,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["nutzung",{"_index":1699,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["obj",{"_index":629,"title":{},"body":{"classes/Channel.html":{},"components/MessageItemComponent.html":{},"classes/Post.html":{},"classes/Reaction.html":{},"classes/Thread.html":{},"classes/User.html":{}}}],["obj.author_uid",{"_index":642,"title":{},"body":{"classes/Channel.html":{}}}],["obj.avatarsrc",{"_index":2453,"title":{},"body":{"classes/User.html":{}}}],["obj.channel_id",{"_index":638,"title":{},"body":{"classes/Channel.html":{},"classes/Thread.html":{}}}],["obj.date",{"_index":648,"title":{},"body":{"classes/Channel.html":{},"classes/Post.html":{},"classes/Thread.html":{}}}],["obj.description",{"_index":644,"title":{},"body":{"classes/Channel.html":{}}}],["obj.email",{"_index":2451,"title":{},"body":{"classes/User.html":{}}}],["obj.emoji",{"_index":2001,"title":{},"body":{"classes/Reaction.html":{}}}],["obj.lastactivity",{"_index":2455,"title":{},"body":{"classes/User.html":{}}}],["obj.members_uids",{"_index":646,"title":{},"body":{"classes/Channel.html":{}}}],["obj.message",{"_index":1607,"title":{},"body":{"classes/Post.html":{}}}],["obj.name",{"_index":640,"title":{},"body":{"classes/Channel.html":{},"classes/User.html":{}}}],["obj.post_id",{"_index":1605,"title":{},"body":{"classes/Post.html":{},"classes/Reaction.html":{}}}],["obj.reaction_id",{"_index":1999,"title":{},"body":{"classes/Reaction.html":{}}}],["obj.thread_id",{"_index":1610,"title":{},"body":{"classes/Post.html":{},"classes/Thread.html":{}}}],["obj.uid",{"_index":2449,"title":{},"body":{"classes/User.html":{}}}],["obj.user_id",{"_index":1608,"title":{},"body":{"classes/Post.html":{},"classes/Reaction.html":{}}}],["object",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{}}}],["object.keys(obj",{"_index":1374,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["objectkeys",{"_index":1303,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["objectkeys(obj",{"_index":1326,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["objekts",{"_index":1372,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["observable",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["obtains",{"_index":2074,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["oder",{"_index":1204,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["officeteam",{"_index":343,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{}}}],["ohne",{"_index":1853,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["oktober",{"_index":2388,"title":{},"body":{"injectables/TimeService.html":{}}}],["onaddchannelclick",{"_index":925,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["onauthroute",{"_index":417,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["oncancel",{"_index":180,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["oncustomselection",{"_index":1495,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["oncustomselection(e",{"_index":1509,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["oncustomupload",{"_index":1496,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["oncustomupload(response",{"_index":1516,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["ondestroy",{"_index":92,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"injectables/ChannelsService.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["one",{"_index":54,"title":{},"body":{"injectables/ActivityService.html":{}}}],["onerror",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["onerror(err",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{}}}],["ongooglelogin",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{}}}],["onguestlogin",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{}}}],["onhandleemoji",{"_index":1304,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["onhandleemoji(emoji",{"_index":1328,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["oninit",{"_index":347,"title":{},"body":{"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/ResetPwComponent.html":{},"components/ThreadComponent.html":{}}}],["online",{"_index":745,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/ExpandableButtonComponent.html":{}}}],["onlogin",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{}}}],["onopennewthread",{"_index":1305,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["onpasswordreset",{"_index":2070,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["onprotectedroute",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["onrequest",{"_index":2047,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["onsearch",{"_index":359,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["onshow",{"_index":2422,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["onshowemojipicker",{"_index":1306,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["onshownavigation",{"_index":983,"title":{},"body":{"components/HomeComponent.html":{}}}],["onsignup",{"_index":2133,"title":{},"body":{"components/SignUpComponent.html":{}}}],["onsnapshot",{"_index":695,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["onsnapshot(this.getcolref",{"_index":700,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["onsubmit",{"_index":182,"title":{},"body":{"components/AddChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["onsubmit(form",{"_index":194,"title":{},"body":{"components/AddChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["oobcode",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPwComponent.html":{},"miscellaneous/variables.html":{}}}],["openeditavatar",{"_index":1234,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["openeditprofile",{"_index":1235,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["openeditprofile(profile",{"_index":1239,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["openimpress",{"_index":1065,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["openpickavatar",{"_index":832,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["openpripol",{"_index":1066,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["openprofile",{"_index":1067,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["openuserlogoutcard",{"_index":958,"title":{},"body":{"components/HeaderComponent.html":{}}}],["openuserprofile",{"_index":746,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["openuserprofile(uid",{"_index":1332,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["operations",{"_index":2468,"title":{},"body":{"injectables/UsersService.html":{}}}],["optimierung",{"_index":1749,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":289,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{},"index.html":{}}}],["outlet",{"_index":549,"title":{},"body":{"components/AuthComponent.html":{}}}],["output",{"_index":459,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["outputs",{"_index":421,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["overview",{"_index":2648,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1647,"title":{},"body":{"injectables/PostsService.html":{}}}],["p.thread_id",{"_index":1641,"title":{},"body":{"injectables/PostsService.html":{}}}],["package",{"_index":2583,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"index.html":{}}}],["param",{"_index":214,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["parameter",{"_index":406,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":211,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["params['back",{"_index":1659,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["params['oobcode",{"_index":2098,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["passiert",{"_index":1669,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["password",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["password.valid",{"_index":1224,"title":{},"body":{"components/LoginComponent.html":{}}}],["password.value",{"_index":2120,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["password.value.length",{"_index":2112,"title":{},"body":{"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["passwordconfirmation",{"_index":2091,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["passwordconfirmation.touched",{"_index":2119,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["passwordconfirmation.valid",{"_index":2118,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["passwordconfirmation.value",{"_index":2121,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["passwords",{"_index":2069,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["passwort",{"_index":1203,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["pause",{"_index":420,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["pause(value",{"_index":460,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["pause]=\"true",{"_index":407,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["paused",{"_index":403,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["person",{"_index":1829,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["person_add_alt",{"_index":1267,"title":{},"body":{"components/MemberListComponent.html":{}}}],["personenbezogene",{"_index":1673,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["personenbezogenen",{"_index":1667,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["personenbezogener",{"_index":1827,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["personenbezug",{"_index":1854,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["persönlich",{"_index":1676,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["pick",{"_index":305,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["pickavatarcomponent",{"_index":304,"title":{"components/PickAvatarComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["pickercomponent",{"_index":741,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/MessageItemComponent.html":{},"components/NewMessageComponent.html":{},"components/ThreadComponent.html":{}}}],["picking",{"_index":1487,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["picture",{"_index":1540,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["plain",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["platform",{"_index":2640,"title":{},"body":{"index.html":{}}}],["playground",{"_index":1417,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["playground'},{'name",{"_index":307,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["playground.component.html",{"_index":1418,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["playground.component.scss",{"_index":1419,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["playgroundcomponent",{"_index":306,"title":{"components/PLAYGROUNDComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["policy",{"_index":1058,"title":{},"body":{"components/LegalFooterComponent.html":{}}}],["post",{"_index":1282,"title":{"classes/Post.html":{}},"body":{"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"injectables/ThreadsService.html":{},"coverage.html":{}}}],["post(p",{"_index":1648,"title":{},"body":{"injectables/PostsService.html":{}}}],["post.date",{"_index":1636,"title":{},"body":{"injectables/PostsService.html":{}}}],["post.message",{"_index":1391,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["post.post_id",{"_index":1635,"title":{},"body":{"injectables/PostsService.html":{}}}],["post.tojson",{"_index":1634,"title":{},"body":{"injectables/PostsService.html":{}}}],["post_id",{"_index":1382,"title":{},"body":{"components/MessageItemComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{}}}],["post_id).slice",{"_index":2035,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["postreactions",{"_index":1300,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["posts",{"_index":1422,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/PostsService.html":{}}}],["posts.filter(p",{"_index":1640,"title":{},"body":{"injectables/PostsService.html":{}}}],["posts.foreach(p",{"_index":1646,"title":{},"body":{"injectables/PostsService.html":{}}}],["posts.push(element.data",{"_index":1632,"title":{},"body":{"injectables/PostsService.html":{}}}],["posts.service",{"_index":2316,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["posts.sort((a",{"_index":1642,"title":{},"body":{"injectables/PostsService.html":{}}}],["postsservice",{"_index":1423,"title":{"injectables/PostsService.html":{}},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/PostsService.html":{},"injectables/ThreadsService.html":{},"coverage.html":{}}}],["postssub",{"_index":1424,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["prevented",{"_index":408,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["previousavatarref",{"_index":2252,"title":{},"body":{"injectables/StorageService.html":{}}}],["privacy",{"_index":1057,"title":{},"body":{"components/LegalFooterComponent.html":{}}}],["privacypolicy",{"_index":1650,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["privacypolicy'},{'name",{"_index":309,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["privacypolicy.component.html",{"_index":1651,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["privacypolicy.component.scss",{"_index":1652,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["privacypolicycomponent",{"_index":308,"title":{"components/PrivacypolicyComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["private",{"_index":9,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["problemen",{"_index":1745,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["process",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/PickAvatarComponent.html":{}}}],["production",{"_index":1415,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["produkte",{"_index":1938,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["profil",{"_index":874,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["profilbild",{"_index":1789,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["profile",{"_index":271,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["profilecardcomponent",{"_index":1362,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["project",{"_index":2608,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["property",{"_index":56,"title":{},"body":{"injectables/ActivityService.html":{},"components/AnimationIntroComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["protokolldateien",{"_index":1739,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["provide",{"_index":917,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{}}}],["provideanimationsasync('noop",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideauth",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":100,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"injectables/EmojiService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["providefirebaseapp",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providefirestore",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":916,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"miscellaneous/variables.html":{}}}],["providestorage",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":18,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/TimeSeparatorComponent.html":{}}}],["punkt",{"_index":1975,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["purposes",{"_index":1414,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["pw",{"_index":312,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["pw'},{'name",{"_index":316,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["pw.component.html",{"_index":2067,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.scss",{"_index":2068,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts",{"_index":2066,"title":{},"body":{"components/ResetPwComponent.html":{},"coverage.html":{}}}],["pw.component.ts:102",{"_index":2072,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:20",{"_index":2088,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:21",{"_index":2095,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:22",{"_index":2094,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:23",{"_index":2092,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:27",{"_index":2096,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:28",{"_index":2087,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:29",{"_index":2089,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:30",{"_index":2090,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:37",{"_index":2073,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:47",{"_index":2083,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:56",{"_index":2078,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:64",{"_index":2079,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:76",{"_index":2077,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:85",{"_index":2076,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw.component.ts:94",{"_index":2081,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["pw/reset",{"_index":2065,"title":{},"body":{"components/ResetPwComponent.html":{},"coverage.html":{}}}],["queryparams",{"_index":221,"title":{},"body":{"components/AddChannelComponent.html":{},"miscellaneous/variables.html":{}}}],["queryparamshandling",{"_index":225,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["r.emoji",{"_index":1377,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["r.post_id",{"_index":2034,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["r.user_id",{"_index":1378,"title":{},"body":{"components/MessageItemComponent.html":{},"injectables/ReactionsService.html":{}}}],["rasch",{"_index":1793,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["reacting",{"_index":61,"title":{},"body":{"injectables/ActivityService.html":{}}}],["reaction",{"_index":1341,"title":{"classes/Reaction.html":{}},"body":{"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"coverage.html":{}}}],["reaction.reaction_id",{"_index":2029,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["reaction.tojson",{"_index":2028,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["reaction_id",{"_index":1992,"title":{},"body":{"classes/Reaction.html":{},"injectables/ReactionsService.html":{}}}],["reactions",{"_index":1425,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/ReactionsService.html":{}}}],["reactions.filter(r",{"_index":2033,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["reactions.foreach(r",{"_index":2037,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["reactions.push(element.data",{"_index":2026,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["reactionsservice",{"_index":1314,"title":{"injectables/ReactionsService.html":{}},"body":{"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"injectables/ReactionsService.html":{},"coverage.html":{}}}],["reactionssub",{"_index":1426,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["readonly",{"_index":14,"title":{},"body":{"injectables/ActivityService.html":{}}}],["reagiert",{"_index":1398,"title":{},"body":{"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["recht",{"_index":1890,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["rechte",{"_index":1877,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["rechtlichen",{"_index":1833,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["rechtsgrundlage",{"_index":1796,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["redirect",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirects",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["redirectto",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{}}}],["ref",{"_index":2186,"title":{},"body":{"injectables/StorageService.html":{}}}],["ref(this.storage",{"_index":2209,"title":{},"body":{"injectables/StorageService.html":{}}}],["reference",{"_index":673,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["regelmäßig",{"_index":1813,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["register",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(name",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":2493,"title":{},"body":{"injectables/UsersService.html":{}}}],["registration",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["registrierung",{"_index":2155,"title":{},"body":{"components/SignUpComponent.html":{}}}],["relativeto",{"_index":223,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["relfilepath",{"_index":2238,"title":{},"body":{"injectables/StorageService.html":{}}}],["reload",{"_index":2621,"title":{},"body":{"index.html":{}}}],["remains",{"_index":402,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["remove",{"_index":970,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{}}}],["removes",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{}}}],["replying",{"_index":1274,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["request",{"_index":311,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["requestpasswordreset",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{},"components/RequestPwResetComponent.html":{}}}],["requestpasswordreset(email",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["requestpwresetcomponent",{"_index":310,"title":{"components/RequestPwResetComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["requests",{"_index":2052,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["required",{"_index":931,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{}}}],["reset",{"_index":315,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["reset'},{'name",{"_index":313,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["reset.component.html",{"_index":2045,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["reset.component.scss",{"_index":2046,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["reset.component.ts",{"_index":2044,"title":{},"body":{"components/RequestPwResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:21",{"_index":2053,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["reset.component.ts:22",{"_index":2054,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["reset.component.ts:25",{"_index":2056,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["reset.component.ts:26",{"_index":2055,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["reset.component.ts:33",{"_index":2050,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["reset.component.ts:41",{"_index":2051,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["reset.component.ts:56",{"_index":2049,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["reset.component.ts:64",{"_index":2048,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["reset/request",{"_index":2043,"title":{},"body":{"components/RequestPwResetComponent.html":{},"coverage.html":{}}}],["resetautherror",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetfileerror",{"_index":1497,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["resetpassword",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPwComponent.html":{},"miscellaneous/variables.html":{}}}],["resetpassword(oobcode",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpw",{"_index":2424,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["resetpwcomponent",{"_index":314,"title":{"components/ResetPwComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["resets",{"_index":2080,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["resetting",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{}}}],["response",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/SignUpComponent.html":{},"injectables/ThreadsService.html":{}}}],["response.id",{"_index":714,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{}}}],["response.includes('auth/invalid",{"_index":1200,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.includes('err/not",{"_index":1576,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["response.includes(this.userdata.uid",{"_index":1570,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["result",{"_index":451,"title":{},"body":{"components/AnimationIntroComponent.html":{},"injectables/AuthService.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/ResetPwComponent.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":154,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["retrieve",{"_index":2489,"title":{},"body":{"injectables/UsersService.html":{}}}],["return",{"_index":114,"title":{},"body":{"injectables/ActivityService.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"injectables/EmojiService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/ResetPwComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":37,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{}}}],["root",{"_index":101,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"injectables/EmojiService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":259,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["route",{"_index":447,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/ResetPwComponent.html":{},"miscellaneous/variables.html":{}}}],["route.includes('auth",{"_index":544,"title":{},"body":{"components/AppComponent.html":{}}}],["route.includes('impress",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["route.includes('privacypolicy",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["route.queryparams['mode",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route.queryparams['oobcode",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":186,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HeaderComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/auth/resetpw",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/main",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":826,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/NavigationComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["routermodule",{"_index":2457,"title":{},"body":{"components/UserProfileCardComponent.html":{}}}],["routermodule,routerlink",{"_index":2460,"title":{},"body":{"components/UserProfileCardComponent.html":{}}}],["routeroutlet",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HomeComponent.html":{}}}],["routing",{"_index":1416,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["run",{"_index":2614,"title":{},"body":{"index.html":{}}}],["rund",{"_index":805,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["running",{"_index":2632,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":95,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["s",{"_index":1763,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["samstag",{"_index":2377,"title":{},"body":{"injectables/TimeService.html":{}}}],["savechanges",{"_index":781,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["savedescriptionchanges",{"_index":782,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["savemainuser",{"_index":833,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["savenamechanges",{"_index":783,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["scaffolding",{"_index":2624,"title":{},"body":{"index.html":{}}}],["schließen",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{}}}],["schlüssel",{"_index":1370,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["schreiben",{"_index":879,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/SignUpComponent.html":{}}}],["schutz",{"_index":1934,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["schutzes",{"_index":1926,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["schützen",{"_index":1957,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["se",{"_index":1968,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["searches",{"_index":2194,"title":{},"body":{"injectables/StorageService.html":{}}}],["see",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["sein",{"_index":239,"title":{},"body":{"components/AddChannelComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["selectchannel",{"_index":1429,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["selectchannel(channel_id",{"_index":1435,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["selectdefaultavatar",{"_index":1498,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["selectdefaultavatar(index",{"_index":1522,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["selected",{"_index":1524,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["selecteduser",{"_index":352,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["selecteduser.name",{"_index":391,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["selectedusers",{"_index":353,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["selection",{"_index":332,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/PickAvatarComponent.html":{}}}],["selector",{"_index":166,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["selectuser",{"_index":360,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["selectuser(user",{"_index":368,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["selfchannel",{"_index":725,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["send",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{},"components/MessageBoxComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["senden",{"_index":2062,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["sendpasswordresetemail",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["sent",{"_index":1275,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["sentiment_satisfied_alt",{"_index":1290,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["separate",{"_index":1943,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["separator",{"_index":2336,"title":{},"body":{"components/TimeSeparatorComponent.html":{}}}],["separator'},{'name",{"_index":324,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["separator.component",{"_index":1347,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["separator.component.html",{"_index":2337,"title":{},"body":{"components/TimeSeparatorComponent.html":{}}}],["separator.component.scss",{"_index":2338,"title":{},"body":{"components/TimeSeparatorComponent.html":{}}}],["separator.component.ts",{"_index":2335,"title":{},"body":{"components/TimeSeparatorComponent.html":{},"coverage.html":{}}}],["separator.component.ts:12",{"_index":2340,"title":{},"body":{"components/TimeSeparatorComponent.html":{}}}],["separator.component.ts:13",{"_index":2341,"title":{},"body":{"components/TimeSeparatorComponent.html":{}}}],["separator/time",{"_index":1346,"title":{},"body":{"components/MessageItemComponent.html":{},"components/TimeSeparatorComponent.html":{},"coverage.html":{}}}],["september",{"_index":2387,"title":{},"body":{"injectables/TimeService.html":{}}}],["serve",{"_index":2616,"title":{},"body":{"index.html":{}}}],["server",{"_index":2613,"title":{},"body":{"index.html":{}}}],["serversysteme",{"_index":1753,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["service",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{}}}],["service.ts",{"_index":894,"title":{},"body":{"injectables/EmojiService.html":{},"coverage.html":{}}}],["service.ts:13",{"_index":900,"title":{},"body":{"injectables/EmojiService.html":{}}}],["service.ts:7",{"_index":902,"title":{},"body":{"injectables/EmojiService.html":{}}}],["service.ts:9",{"_index":901,"title":{},"body":{"injectables/EmojiService.html":{}}}],["service/emoji",{"_index":893,"title":{},"body":{"injectables/EmojiService.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["services/activity.service",{"_index":375,"title":{},"body":{"components/AddMembersComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["services/auth.service",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["services/content/channels.service",{"_index":209,"title":{},"body":{"components/AddChannelComponent.html":{},"components/HomeComponent.html":{},"components/PLAYGROUNDComponent.html":{}}}],["services/content/posts.service",{"_index":1461,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["services/content/reactions.service",{"_index":1351,"title":{},"body":{"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{}}}],["services/content/threads.service",{"_index":1348,"title":{},"body":{"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{}}}],["services/emoji",{"_index":2280,"title":{},"body":{"components/ThreadComponent.html":{}}}],["services/storage.service",{"_index":1554,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["services/time.service",{"_index":1349,"title":{},"body":{"components/MessageItemComponent.html":{},"components/TimeSeparatorComponent.html":{}}}],["services/users.service",{"_index":849,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"components/SignUpComponent.html":{}}}],["set",{"_index":57,"title":{},"body":{"injectables/ActivityService.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["setautherror",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["setautherror(response",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{}}}],["setdoc",{"_index":2508,"title":{},"body":{"injectables/UsersService.html":{}}}],["setdoc(this.getsingledocref(user.uid",{"_index":2514,"title":{},"body":{"injectables/UsersService.html":{}}}],["setfileerror",{"_index":1499,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["setfileerror(response",{"_index":1528,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["setinterval",{"_index":127,"title":{},"body":{"injectables/ActivityService.html":{}}}],["setlastactivity",{"_index":27,"title":{},"body":{"injectables/ActivityService.html":{}}}],["setlastactivityonauth",{"_index":28,"title":{},"body":{"injectables/ActivityService.html":{}}}],["setlastactivityonauth(user",{"_index":68,"title":{},"body":{"injectables/ActivityService.html":{}}}],["setpause(value",{"_index":458,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["setpreselectionavatar",{"_index":1500,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["sets",{"_index":428,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["sets/updates",{"_index":55,"title":{},"body":{"injectables/ActivityService.html":{}}}],["setshowing(value",{"_index":2432,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["settimeout",{"_index":466,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["setuserchannels",{"_index":984,"title":{},"body":{"components/HomeComponent.html":{}}}],["setuserchannels(channels",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{}}}],["setuserstates",{"_index":29,"title":{},"body":{"injectables/ActivityService.html":{}}}],["shared",{"_index":551,"title":{},"body":{"components/AuthComponent.html":{}}}],["showbtn",{"_index":924,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["showemojipicker",{"_index":1312,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["showing",{"_index":2423,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["showing(value",{"_index":2433,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["shown",{"_index":411,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["shownav",{"_index":981,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["showtoast",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["showuserlist",{"_index":354,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["sich",{"_index":1916,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["sichere",{"_index":1930,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["sicherheit",{"_index":1752,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["sie",{"_index":237,"title":{},"body":{"components/AddChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["sign",{"_index":318,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["signinanonymously",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemailandpassword",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithpopup",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout(this.firebaseauth",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["signs",{"_index":2140,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signup",{"_index":2129,"title":{},"body":{"components/SignUpComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["signupcomponent",{"_index":317,"title":{"components/SignUpComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["simply",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["sind",{"_index":1674,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["single",{"_index":677,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["size",{"_index":2251,"title":{},"body":{"injectables/StorageService.html":{}}}],["smartphones",{"_index":1722,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["snapshot",{"_index":2501,"title":{},"body":{"injectables/UsersService.html":{}}}],["sofia",{"_index":773,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["sofia.muel&#64;beispiel.com",{"_index":2461,"title":{},"body":{"components/UserProfileCardComponent.html":{}}}],["sofia.muel@beispiel.com",{"_index":2462,"title":{},"body":{"components/UserProfileCardComponent.html":{}}}],["sogenannten",{"_index":1737,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["solely",{"_index":1413,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["sollten",{"_index":236,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["sonntag",{"_index":2371,"title":{},"body":{"injectables/TimeService.html":{}}}],["sorgt",{"_index":1927,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["soweit",{"_index":1807,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["sowie",{"_index":1809,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["specificpeople",{"_index":333,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{}}}],["speicherdauer",{"_index":1846,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["speichern",{"_index":801,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{}}}],["speicherung",{"_index":1769,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["src/.../app.config.ts",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/add",{"_index":162,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"coverage.html":{}}}],["src/app/animation",{"_index":394,"title":{},"body":{"components/AnimationIntroComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:21",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":523,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":514,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:69",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:87",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:92",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.component.ts",{"_index":548,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/legal",{"_index":1053,"title":{},"body":{"components/LegalFooterComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:104",{"_index":1116,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:119",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:134",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:147",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:164",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:176",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:187",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:199",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:207",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:215",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:224",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:24",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:25",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:26",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:27",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:33",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:34",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:35",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:36",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:43",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:51",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:65",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:74",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:87",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/pick",{"_index":1484,"title":{},"body":{"components/PickAvatarComponent.html":{},"coverage.html":{}}}],["src/app/auth/request",{"_index":2042,"title":{},"body":{"components/RequestPwResetComponent.html":{},"coverage.html":{}}}],["src/app/auth/reset",{"_index":2064,"title":{},"body":{"components/ResetPwComponent.html":{},"coverage.html":{}}}],["src/app/auth/sign",{"_index":2126,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/auth/toast",{"_index":2415,"title":{},"body":{"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["src/app/components/direct",{"_index":738,"title":{},"body":{"components/DirectMessageComponent.html":{},"coverage.html":{}}}],["src/app/components/expandable",{"_index":914,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/main",{"_index":2553,"title":{},"body":{"coverage.html":{}}}],["src/app/components/message",{"_index":1268,"title":{},"body":{"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"coverage.html":{}}}],["src/app/components/navigation/navigation.component.ts",{"_index":1400,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/components/navigation/navigation.component.ts:15",{"_index":1405,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts:16",{"_index":1404,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts:17",{"_index":1406,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/new",{"_index":1408,"title":{},"body":{"components/NewMessageComponent.html":{},"coverage.html":{}}}],["src/app/components/thread/thread.component.ts",{"_index":2265,"title":{},"body":{"components/ThreadComponent.html":{},"coverage.html":{}}}],["src/app/components/thread/thread.component.ts:19",{"_index":2271,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/components/thread/thread.component.ts:20",{"_index":2270,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/components/thread/thread.component.ts:24",{"_index":2276,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/components/thread/thread.component.ts:28",{"_index":2274,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/components/thread/thread.component.ts:32",{"_index":2272,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/components/thread/thread.component.ts:42",{"_index":2278,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/components/thread/thread.component.ts:47",{"_index":2277,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/components/time",{"_index":2334,"title":{},"body":{"components/TimeSeparatorComponent.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":774,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditUserProfileCardComponent.html":{},"coverage.html":{}}}],["src/app/home/header/header.component.ts",{"_index":953,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/home/header/header.component.ts:29",{"_index":959,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/home/header/header.component.ts:32",{"_index":963,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/home/header/header.component.ts:33",{"_index":962,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/home/header/header.component.ts:37",{"_index":961,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/home/header/header.component.ts:40",{"_index":960,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/home/home.component.ts",{"_index":977,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:34",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:35",{"_index":1007,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:36",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:37",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:39",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:40",{"_index":1008,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:41",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:42",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:43",{"_index":1006,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:44",{"_index":1005,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:45",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:47",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:52",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:58",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:68",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:75",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:79",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:83",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:91",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:95",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/legal/impress/impress.component.ts",{"_index":1032,"title":{},"body":{"components/ImpressComponent.html":{},"coverage.html":{}}}],["src/app/home/legal/impress/impress.component.ts:11",{"_index":1039,"title":{},"body":{"components/ImpressComponent.html":{}}}],["src/app/home/legal/impress/impress.component.ts:17",{"_index":1040,"title":{},"body":{"components/ImpressComponent.html":{}}}],["src/app/home/legal/privacypolicy/privacypolicy.component.ts",{"_index":1649,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"coverage.html":{}}}],["src/app/home/legal/privacypolicy/privacypolicy.component.ts:13",{"_index":1654,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["src/app/home/legal/privacypolicy/privacypolicy.component.ts:20",{"_index":1656,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["src/app/home/legal/privacypolicy/privacypolicy.component.ts:26",{"_index":1655,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["src/app/main",{"_index":822,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"coverage.html":{}}}],["src/app/member",{"_index":1249,"title":{},"body":{"components/MemberListComponent.html":{},"coverage.html":{}}}],["src/app/playground/playground.component.ts",{"_index":1412,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"coverage.html":{}}}],["src/app/playground/playground.component.ts:24",{"_index":1443,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:25",{"_index":1458,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:26",{"_index":1450,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:27",{"_index":1454,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:28",{"_index":1444,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:29",{"_index":1459,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:30",{"_index":1451,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:31",{"_index":1455,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:36",{"_index":1441,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:38",{"_index":1456,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:39",{"_index":1448,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:40",{"_index":1452,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:42",{"_index":1445,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:43",{"_index":1447,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:46",{"_index":1434,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:53",{"_index":1433,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:60",{"_index":1437,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:66",{"_index":1440,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:72",{"_index":1438,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:78",{"_index":1439,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/playground/playground.component.ts:84",{"_index":1436,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["src/app/shared/auth.guard.ts",{"_index":2569,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/user",{"_index":2456,"title":{},"body":{"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["src/interfaces/userstate.interface.ts",{"_index":2465,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{}}}],["src/models/channel.class.ts",{"_index":622,"title":{},"body":{"classes/Channel.html":{},"coverage.html":{}}}],["src/models/channel.class.ts:18",{"_index":636,"title":{},"body":{"classes/Channel.html":{}}}],["src/models/channel.class.ts:2",{"_index":632,"title":{},"body":{"classes/Channel.html":{}}}],["src/models/channel.class.ts:3",{"_index":635,"title":{},"body":{"classes/Channel.html":{}}}],["src/models/channel.class.ts:4",{"_index":631,"title":{},"body":{"classes/Channel.html":{}}}],["src/models/channel.class.ts:5",{"_index":633,"title":{},"body":{"classes/Channel.html":{}}}],["src/models/channel.class.ts:6",{"_index":634,"title":{},"body":{"classes/Channel.html":{}}}],["src/models/channel.class.ts:7",{"_index":628,"title":{},"body":{"classes/Channel.html":{}}}],["src/models/post.class.ts",{"_index":1596,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/models/post.class.ts:16",{"_index":1603,"title":{},"body":{"classes/Post.html":{}}}],["src/models/post.class.ts:2",{"_index":1600,"title":{},"body":{"classes/Post.html":{}}}],["src/models/post.class.ts:3",{"_index":1599,"title":{},"body":{"classes/Post.html":{}}}],["src/models/post.class.ts:4",{"_index":1602,"title":{},"body":{"classes/Post.html":{}}}],["src/models/post.class.ts:5",{"_index":1601,"title":{},"body":{"classes/Post.html":{}}}],["src/models/post.class.ts:6",{"_index":1598,"title":{},"body":{"classes/Post.html":{}}}],["src/models/reaction.class.ts",{"_index":1991,"title":{},"body":{"classes/Reaction.html":{},"coverage.html":{}}}],["src/models/reaction.class.ts:14",{"_index":1997,"title":{},"body":{"classes/Reaction.html":{}}}],["src/models/reaction.class.ts:2",{"_index":1995,"title":{},"body":{"classes/Reaction.html":{}}}],["src/models/reaction.class.ts:3",{"_index":1996,"title":{},"body":{"classes/Reaction.html":{}}}],["src/models/reaction.class.ts:4",{"_index":1994,"title":{},"body":{"classes/Reaction.html":{}}}],["src/models/reaction.class.ts:5",{"_index":1993,"title":{},"body":{"classes/Reaction.html":{}}}],["src/models/thread.class.ts",{"_index":2260,"title":{},"body":{"classes/Thread.html":{},"coverage.html":{}}}],["src/models/thread.class.ts:12",{"_index":2264,"title":{},"body":{"classes/Thread.html":{}}}],["src/models/thread.class.ts:2",{"_index":2263,"title":{},"body":{"classes/Thread.html":{}}}],["src/models/thread.class.ts:3",{"_index":2262,"title":{},"body":{"classes/Thread.html":{}}}],["src/models/thread.class.ts:4",{"_index":2261,"title":{},"body":{"classes/Thread.html":{}}}],["src/models/user.class.ts",{"_index":2441,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/models/user.class.ts:16",{"_index":2448,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.class.ts:2",{"_index":2447,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.class.ts:3",{"_index":2446,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.class.ts:4",{"_index":2445,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.class.ts:5",{"_index":2444,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.class.ts:6",{"_index":2443,"title":{},"body":{"classes/User.html":{}}}],["src/services/activity.service.ts",{"_index":6,"title":{},"body":{"injectables/ActivityService.html":{},"coverage.html":{}}}],["src/services/activity.service.ts:100",{"_index":70,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:105",{"_index":42,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:115",{"_index":36,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:119",{"_index":40,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:12",{"_index":87,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:13",{"_index":78,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:15",{"_index":80,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:16",{"_index":89,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:17",{"_index":82,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:18",{"_index":90,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:19",{"_index":83,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:21",{"_index":35,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:31",{"_index":66,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:36",{"_index":71,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:43",{"_index":73,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:51",{"_index":65,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:67",{"_index":48,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:74",{"_index":67,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:82",{"_index":69,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/activity.service.ts:92",{"_index":74,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/services/auth.service.ts",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/services/auth.service.ts:108",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:114",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:123",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:26",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:27",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:37",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:53",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:63",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:72",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:85",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:94",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/content/channels.service.ts",{"_index":649,"title":{},"body":{"injectables/ChannelsService.html":{},"coverage.html":{}}}],["src/services/content/channels.service.ts:100",{"_index":669,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/services/content/channels.service.ts:107",{"_index":680,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/services/content/channels.service.ts:13",{"_index":690,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/services/content/channels.service.ts:14",{"_index":692,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/services/content/channels.service.ts:15",{"_index":694,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/services/content/channels.service.ts:16",{"_index":659,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/services/content/channels.service.ts:30",{"_index":681,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/services/content/channels.service.ts:35",{"_index":683,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/services/content/channels.service.ts:51",{"_index":672,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/services/content/channels.service.ts:61",{"_index":676,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/services/content/channels.service.ts:71",{"_index":662,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/services/content/channels.service.ts:87",{"_index":685,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/services/content/posts.service.ts",{"_index":1611,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/services/content/posts.service.ts:104",{"_index":1623,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/services/content/posts.service.ts:12",{"_index":1628,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/services/content/posts.service.ts:13",{"_index":1629,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/services/content/posts.service.ts:14",{"_index":1630,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/services/content/posts.service.ts:15",{"_index":1614,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/services/content/posts.service.ts:29",{"_index":1624,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/services/content/posts.service.ts:34",{"_index":1625,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/services/content/posts.service.ts:48",{"_index":1619,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/services/content/posts.service.ts:58",{"_index":1621,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/services/content/posts.service.ts:68",{"_index":1616,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/services/content/posts.service.ts:84",{"_index":1627,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/services/content/posts.service.ts:97",{"_index":1618,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/services/content/reactions.service.ts",{"_index":2002,"title":{},"body":{"injectables/ReactionsService.html":{},"coverage.html":{}}}],["src/services/content/reactions.service.ts:100",{"_index":2010,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/reactions.service.ts:107",{"_index":2015,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/reactions.service.ts:112",{"_index":2013,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/reactions.service.ts:13",{"_index":2023,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/reactions.service.ts:14",{"_index":2024,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/reactions.service.ts:16",{"_index":2022,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/reactions.service.ts:17",{"_index":2006,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/reactions.service.ts:31",{"_index":2018,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/reactions.service.ts:36",{"_index":2019,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/reactions.service.ts:51",{"_index":2011,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/reactions.service.ts:61",{"_index":2017,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/reactions.service.ts:71",{"_index":2008,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/reactions.service.ts:87",{"_index":2021,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["src/services/content/threads.service.ts",{"_index":2291,"title":{},"body":{"injectables/ThreadsService.html":{},"coverage.html":{}}}],["src/services/content/threads.service.ts:100",{"_index":2311,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:112",{"_index":2302,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:118",{"_index":2304,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:14",{"_index":2313,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:15",{"_index":2314,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:16",{"_index":2315,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:18",{"_index":2312,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:19",{"_index":2295,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:31",{"_index":2308,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:35",{"_index":2309,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:48",{"_index":2305,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:58",{"_index":2307,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:69",{"_index":2297,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/content/threads.service.ts:82",{"_index":2300,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["src/services/emoji",{"_index":892,"title":{},"body":{"injectables/EmojiService.html":{},"coverage.html":{}}}],["src/services/storage.service.ts",{"_index":2164,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/services/storage.service.ts:109",{"_index":2203,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:118",{"_index":2188,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:125",{"_index":2191,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:15",{"_index":2212,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:16",{"_index":2213,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:17",{"_index":2210,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:18",{"_index":2178,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:22",{"_index":2201,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:26",{"_index":2205,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:35",{"_index":2199,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:41",{"_index":2185,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:51",{"_index":2196,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:64",{"_index":2207,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:76",{"_index":2180,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/storage.service.ts:90",{"_index":2193,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/services/time.service.ts",{"_index":2343,"title":{},"body":{"injectables/TimeService.html":{},"coverage.html":{}}}],["src/services/time.service.ts:10",{"_index":2354,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/services/time.service.ts:19",{"_index":2356,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/services/time.service.ts:29",{"_index":2358,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/services/time.service.ts:39",{"_index":2351,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/services/time.service.ts:48",{"_index":2360,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/services/time.service.ts:6",{"_index":2349,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/services/users.service.ts",{"_index":2466,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/services/users.service.ts:108",{"_index":2484,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:120",{"_index":2488,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:133",{"_index":2492,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:19",{"_index":2506,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:20",{"_index":2507,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:21",{"_index":2505,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:22",{"_index":2504,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:23",{"_index":2479,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:37",{"_index":2496,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:47",{"_index":2497,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:62",{"_index":2485,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:72",{"_index":2486,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:82",{"_index":2481,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:95",{"_index":2503,"title":{},"body":{"injectables/UsersService.html":{}}}],["standalone",{"_index":170,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["standort",{"_index":1731,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["start",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["started",{"_index":2607,"title":{"index.html":{}},"body":{}}],["state",{"_index":147,"title":{},"body":{"injectables/ActivityService.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2526,"title":{},"body":{"coverage.html":{}}}],["statt",{"_index":772,"title":{},"body":{"components/DirectMessageComponent.html":{}}}],["status",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{}}}],["stehen",{"_index":1881,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["stimme",{"_index":2162,"title":{},"body":{"components/SignUpComponent.html":{}}}],["stimmen",{"_index":2123,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["storage",{"_index":1513,"title":{},"body":{"components/PickAvatarComponent.html":{},"injectables/StorageService.html":{}}}],["storagebucket",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageref",{"_index":2166,"title":{},"body":{"injectables/StorageService.html":{}}}],["storageservice",{"_index":1493,"title":{"injectables/StorageService.html":{}},"body":{"components/PickAvatarComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["stored",{"_index":2629,"title":{},"body":{"index.html":{}}}],["stores",{"_index":2075,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["str",{"_index":1046,"title":{},"body":{"components/ImpressComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["strafverfolgung",{"_index":1987,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["strafverfolgungsbehörden",{"_index":1988,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["string",{"_index":190,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/EditChannelComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"classes/User.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{}}}],["style",{"_index":552,"title":{},"body":{"components/AuthComponent.html":{}}}],["styleurl",{"_index":176,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["subauth",{"_index":30,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{}}}],["subchannels",{"_index":657,"title":{},"body":{"injectables/ChannelsService.html":{},"components/HomeComponent.html":{},"components/PLAYGROUNDComponent.html":{}}}],["subemoji",{"_index":1307,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["subject",{"_index":691,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["submission",{"_index":198,"title":{},"body":{"components/AddChannelComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["subposts",{"_index":1430,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/PostsService.html":{}}}],["subreactions",{"_index":1431,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/ReactionsService.html":{}}}],["subscribe",{"_index":2498,"title":{},"body":{"injectables/UsersService.html":{}}}],["subscription",{"_index":72,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"injectables/ChannelsService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["subscriptions",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"components/PickAvatarComponent.html":{}}}],["subthreads",{"_index":1432,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/ThreadsService.html":{}}}],["subuser",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"components/PickAvatarComponent.html":{}}}],["subusers",{"_index":31,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/UsersService.html":{}}}],["suggestion",{"_index":736,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["suppresses",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["switch",{"_index":1208,"title":{},"body":{"components/LoginComponent.html":{}}}],["switch(diffindays",{"_index":2409,"title":{},"body":{"injectables/TimeService.html":{}}}],["syncavatar",{"_index":1501,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["synccurrentuser",{"_index":32,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{}}}],["synchronization",{"_index":1534,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["synchronize",{"_index":2499,"title":{},"body":{"injectables/UsersService.html":{}}}],["syncusers",{"_index":985,"title":{},"body":{"components/HomeComponent.html":{}}}],["system",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["system's",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{}}}],["t",{"_index":2332,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["t.channel_id",{"_index":2329,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["table",{"_index":2582,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2581,"title":{},"body":{"coverage.html":{}}}],["tagen",{"_index":2414,"title":{},"body":{"injectables/TimeService.html":{}}}],["task",{"_index":707,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/ReactionsService.html":{},"injectables/UsersService.html":{}}}],["tatsächlichen",{"_index":1819,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["team",{"_index":232,"title":{},"body":{"components/AddChannelComponent.html":{},"injectables/ChannelsService.html":{},"components/EditChannelComponent.html":{}}}],["technische",{"_index":1736,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["technischen",{"_index":1744,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["teilen",{"_index":817,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["temp",{"_index":2182,"title":{},"body":{"injectables/StorageService.html":{}}}],["tempavatarref",{"_index":2241,"title":{},"body":{"injectables/StorageService.html":{}}}],["tempavatars",{"_index":2214,"title":{},"body":{"injectables/StorageService.html":{}}}],["tempavatarsref",{"_index":2167,"title":{},"body":{"injectables/StorageService.html":{}}}],["template",{"_index":159,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["templateurl",{"_index":174,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["temporary",{"_index":2208,"title":{},"body":{"injectables/StorageService.html":{}}}],["temporären",{"_index":2237,"title":{},"body":{"injectables/StorageService.html":{}}}],["term",{"_index":382,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["test",{"_index":2635,"title":{},"body":{"index.html":{}}}],["testing",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/PLAYGROUNDComponent.html":{},"index.html":{}}}],["tests",{"_index":2634,"title":{},"body":{"index.html":{}}}],["text",{"_index":1686,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["thema",{"_index":1682,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["themenbezogen",{"_index":238,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["then((dir",{"_index":2230,"title":{},"body":{"injectables/StorageService.html":{}}}],["then((response",{"_index":712,"title":{},"body":{"injectables/ChannelsService.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{}}}],["then(response",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._pause",{"_index":461,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["this._showing",{"_index":2434,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["this.activatedroute",{"_index":224,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["this.activeusers",{"_index":1263,"title":{},"body":{"components/MemberListComponent.html":{}}}],["this.activityservice",{"_index":384,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["this.activityservice.getallusers",{"_index":381,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["this.activitysettingallowed",{"_index":128,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.addchanneltoparams(id",{"_index":220,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["this.adddoc(selfchannel",{"_index":735,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.adddoc(thread",{"_index":2324,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["this.after",{"_index":467,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["this.animate",{"_index":463,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["this.autherror",{"_index":1197,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["this.author",{"_index":1353,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.author_uid",{"_index":641,"title":{},"body":{"classes/Channel.html":{}}}],["this.authservice.getcurrent",{"_index":1182,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.getcurrentuid",{"_index":140,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"components/SignUpComponent.html":{}}}],["this.authservice.login(this.userdata.email",{"_index":1173,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.loginasguest().subscribe",{"_index":1194,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.loginwithgoogle().subscribe",{"_index":1179,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":974,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.register(this.user.name",{"_index":2149,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.authservice.requestpasswordreset(this.data.email).subscribe",{"_index":2058,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["this.authservice.resetpassword(this.oobcode",{"_index":2103,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["this.authservice.user$.subscribe",{"_index":1360,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.authservice.user$.subscribe((user",{"_index":115,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PickAvatarComponent.html":{}}}],["this.authsub",{"_index":108,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{}}}],["this.authsub.unsubscribe",{"_index":112,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{}}}],["this.avatarsrc",{"_index":2452,"title":{},"body":{"classes/User.html":{}}}],["this.awaitanimation",{"_index":465,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["this.awaitinginit",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["this.awaitmax",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["this.channel_id",{"_index":637,"title":{},"body":{"classes/Channel.html":{},"classes/Thread.html":{}}}],["this.channelname",{"_index":1287,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["this.channels",{"_index":704,"title":{},"body":{"injectables/ChannelsService.html":{},"components/PLAYGROUNDComponent.html":{}}}],["this.channels$.next(channels",{"_index":705,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.channelsservice.adddoc(this.channel",{"_index":219,"title":{},"body":{"components/AddChannelComponent.html":{}}}],["this.channelsservice.channels$.subscribe((channels",{"_index":1471,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["this.channelsservice.channels$.subscribe(channels",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.channelsservice.inituserchannels(user",{"_index":2516,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.channelssub",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{},"components/PLAYGROUNDComponent.html":{}}}],["this.channelssub.unsubscribe",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{},"components/PLAYGROUNDComponent.html":{}}}],["this.closedialog",{"_index":864,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["this.constructguestuser(userref",{"_index":1196,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.constructuserfromgoogleauth(userref",{"_index":1184,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.currentchannel",{"_index":1477,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["this.currentuser",{"_index":141,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{}}}],["this.currentuser.lastactivity",{"_index":131,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.currentuser.uid",{"_index":130,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.currentuser.uid.length",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentuser?.uid",{"_index":1379,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.data.mainuser",{"_index":853,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["this.data.mainuser.email",{"_index":857,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["this.data.mainuser.name",{"_index":855,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["this.date",{"_index":647,"title":{},"body":{"classes/Channel.html":{},"classes/Post.html":{},"classes/Thread.html":{}}}],["this.deletefolder(folderref.fullpath",{"_index":2234,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.description",{"_index":643,"title":{},"body":{"classes/Channel.html":{}}}],["this.dialog.open(addchannelcomponent",{"_index":942,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["this.dialog.open(addmemberscomponent",{"_index":1266,"title":{},"body":{"components/MemberListComponent.html":{}}}],["this.dialog.open(editmainuseravatarcomponent",{"_index":867,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["this.dialog.open(editmainuserprofilecardcomponent",{"_index":1241,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["this.dialog.open(logoutcardcomponent",{"_index":967,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.dialog.open(mainuserprofilecardcomponent",{"_index":1079,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["this.dialog.open(userprofilecardcomponent",{"_index":761,"title":{},"body":{"components/DirectMessageComponent.html":{},"components/MemberListComponent.html":{},"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["this.dialogavatarref",{"_index":866,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["this.dialogavatarref.afterclosed().subscribe(result",{"_index":869,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["this.dialogavatarref.afteropened().subscribe",{"_index":868,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["this.dialogref",{"_index":966,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.dialogref.afterclosed().subscribe(result",{"_index":968,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.dialogref.close",{"_index":213,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["this.dialogref.close('logout",{"_index":1082,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["this.dialoguserref",{"_index":1078,"title":{},"body":{"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["this.dialoguserref.afterclosed().subscribe(result",{"_index":1080,"title":{},"body":{"components/LogOutCardComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["this.dialoguserref.afteropened().subscribe",{"_index":1242,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["this.editdescriptionmode",{"_index":798,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.editmode",{"_index":797,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.editname",{"_index":799,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.email",{"_index":2450,"title":{},"body":{"classes/User.html":{}}}],["this.emoji",{"_index":2000,"title":{},"body":{"classes/Reaction.html":{}}}],["this.emojipicker",{"_index":1357,"title":{},"body":{"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["this.emojis",{"_index":906,"title":{},"body":{"injectables/EmojiService.html":{}}}],["this.emojis.find(e",{"_index":908,"title":{},"body":{"injectables/EmojiService.html":{}}}],["this.emojis.push",{"_index":912,"title":{},"body":{"injectables/EmojiService.html":{}}}],["this.emojiservice.addemoji",{"_index":2281,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.emojiservice.getemojis",{"_index":2284,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.emojisub",{"_index":1355,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.emojisub.unsubscribe",{"_index":1384,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.fileerror",{"_index":1573,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.filteredusers",{"_index":380,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["this.firebaseauth",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.firebaseauth.currentuser",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.generateavatarname(img",{"_index":2239,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.getautherror",{"_index":1199,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getautherror(response",{"_index":1198,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getauthor",{"_index":1354,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.getavatarref(uid",{"_index":2253,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.getfileerror",{"_index":1575,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.getfileerror(response",{"_index":1574,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.getrelativeday(diffindays",{"_index":2408,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.getsingledocref(channel.channel_id",{"_index":721,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.getsingledocref(channel_id",{"_index":723,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.getsingledocref(post.post_id",{"_index":1638,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.getsingledocref(post_id",{"_index":1639,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.getsingledocref(reaction.reaction_id",{"_index":2031,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["this.getsingledocref(reaction_id",{"_index":2032,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["this.getsingledocref(thread.thread_id",{"_index":2326,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["this.getsingledocref(thread_id",{"_index":2327,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["this.getsingledocref(uid",{"_index":2518,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getsingledocref(user.uid",{"_index":2517,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.gettempavatarref(uid",{"_index":2242,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.geturl(ref",{"_index":2223,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.getuserbyuid(authuid).uid.length",{"_index":2522,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getuserstate(user).state",{"_index":152,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.groupedemojis",{"_index":1367,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.handleexternaluserregistrationstatus(userobj",{"_index":1185,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hidebackbtn",{"_index":1658,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["this.initanimation",{"_index":462,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["this.initializing",{"_index":1556,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.initinterval",{"_index":106,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.initlisteners",{"_index":105,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.isimage(img",{"_index":2221,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.ismenuexpanded",{"_index":941,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["this.lastactivity",{"_index":2454,"title":{},"body":{"classes/User.html":{}}}],["this.loading",{"_index":1171,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["this.location.back",{"_index":1041,"title":{},"body":{"components/ImpressComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["this.login",{"_index":1170,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.mainuser",{"_index":852,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/HeaderComponent.html":{},"components/MainUserProfileCardComponent.html":{}}}],["this.mainuser.email",{"_index":858,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["this.mainuser.name",{"_index":862,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["this.members_uids",{"_index":645,"title":{},"body":{"classes/Channel.html":{}}}],["this.message",{"_index":1606,"title":{},"body":{"classes/Post.html":{}}}],["this.name",{"_index":639,"title":{},"body":{"classes/Channel.html":{},"classes/User.html":{}}}],["this.oncustomupload(response",{"_index":1568,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.onerror",{"_index":2106,"title":{},"body":{"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["this.onerror(err",{"_index":1177,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{}}}],["this.ongooglelogin",{"_index":1180,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onguestlogin",{"_index":1195,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onlogin",{"_index":1176,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onpasswordreset",{"_index":2105,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["this.onrequest",{"_index":2059,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["this.onshow",{"_index":2435,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["this.onsignup",{"_index":2152,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.oobcode",{"_index":2097,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["this.oobcode.length",{"_index":2101,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["this.passwords.password",{"_index":2099,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["this.passwords.password).subscribe",{"_index":2104,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["this.passwords.passwordconfirmation",{"_index":2100,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["this.pause",{"_index":464,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["this.post.post_id",{"_index":1366,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.post_id",{"_index":1604,"title":{},"body":{"classes/Post.html":{},"classes/Reaction.html":{}}}],["this.postreactions",{"_index":1364,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.postreactions?.find(r",{"_index":1376,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.posts",{"_index":1475,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/PostsService.html":{}}}],["this.posts$.next(posts",{"_index":1633,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.postsservice.adddoc(post",{"_index":2325,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["this.postsservice.posts$.subscribe((posts",{"_index":1474,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["this.postssub",{"_index":1464,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["this.postssub.unsubscribe",{"_index":1469,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["this.reaction_id",{"_index":1998,"title":{},"body":{"classes/Reaction.html":{}}}],["this.reactions",{"_index":1476,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["this.reactions$.next(reactions",{"_index":2027,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["this.reactionsservice.adddoc(new",{"_index":1381,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.reactionsservice.deletedoc(curremoji.reaction_id",{"_index":1380,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.reactionsservice.getgroupedemojis(this.postreactions",{"_index":1368,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.reactionsservice.getpostreactions(reactions",{"_index":1365,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.reactionsservice.reactions$.subscribe((reactions",{"_index":1363,"title":{},"body":{"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{}}}],["this.reactionssub",{"_index":1466,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["this.reactionssub.unsubscribe",{"_index":1470,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["this.redirect",{"_index":1207,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.redirectto",{"_index":1192,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.replying",{"_index":1284,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["this.requestpasswordreset",{"_index":2057,"title":{},"body":{"components/RequestPwResetComponent.html":{}}}],["this.resetfileerror",{"_index":1562,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.resetpassword",{"_index":2102,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":1657,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/ResetPwComponent.html":{}}}],["this.router.navigate",{"_index":222,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AppComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['auth/login",{"_index":975,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.navigate(['impress",{"_index":1083,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["this.router.navigate(['privacypolicy",{"_index":1084,"title":{},"body":{"components/LogOutCardComponent.html":{}}}],["this.router.navigatebyurl",{"_index":1580,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.router.navigatebyurl('auth",{"_index":2110,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["this.router.navigatebyurl('auth/pickavatar",{"_index":2156,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.router.navigatebyurl(route",{"_index":1211,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.url",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.url.includes('auth",{"_index":470,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["this.savemainuser",{"_index":865,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["this.selecteduser",{"_index":388,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["this.selection",{"_index":389,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["this.selection?.tolowercase",{"_index":383,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["this.sent.emit(this.data.message",{"_index":1288,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["this.setautherror",{"_index":2107,"title":{},"body":{"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["this.setautherror(err.tostring",{"_index":1178,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.setfileerror(err.tostring",{"_index":1569,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.setlastactivity",{"_index":120,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.setlastactivityonauth(true",{"_index":143,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.setlastactivityonauth(user",{"_index":117,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.setpreselectionavatar",{"_index":1558,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.setuserchannels(channels",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.setuserchannels(this.channelsservice.channels",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.setuserstates",{"_index":116,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.showemojipicker.emit(this.emojipicker",{"_index":1358,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.shownav",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.showtoast",{"_index":1172,"title":{},"body":{"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["this.showuserlist",{"_index":387,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["this.signup",{"_index":2148,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.storageservice.uploadavatar(input.files[0",{"_index":1567,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.subauth",{"_index":109,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{}}}],["this.subchannels",{"_index":699,"title":{},"body":{"injectables/ChannelsService.html":{},"components/HomeComponent.html":{},"components/PLAYGROUNDComponent.html":{}}}],["this.subemoji",{"_index":1356,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.subposts",{"_index":1465,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/PostsService.html":{}}}],["this.subreactions",{"_index":1467,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/ReactionsService.html":{}}}],["this.subthreads",{"_index":1463,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/ThreadsService.html":{}}}],["this.subuser",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"components/PickAvatarComponent.html":{}}}],["this.subusers",{"_index":111,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/UsersService.html":{}}}],["this.syncavatar",{"_index":1559,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.synccurrentuser",{"_index":107,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{}}}],["this.syncusers",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.then.emit",{"_index":468,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["this.thread_id",{"_index":1609,"title":{},"body":{"classes/Post.html":{},"classes/Thread.html":{}}}],["this.threads",{"_index":1473,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/ThreadsService.html":{}}}],["this.threads$.next(threads",{"_index":2319,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["this.threadsservice.threads$.subscribe((threads",{"_index":1472,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["this.threadssub",{"_index":1462,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["this.threadssub.unsubscribe",{"_index":1468,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["this.uid",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"classes/User.html":{}}}],["this.unsubchannels",{"_index":698,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.unsubposts",{"_index":1631,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.unsubreactions",{"_index":2025,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["this.unsubthreads",{"_index":2317,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["this.unsubusers",{"_index":2510,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.updatedoc(channel",{"_index":715,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.updatedoc(post",{"_index":1637,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.updatedoc(reaction",{"_index":2030,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["this.updatedoc(thread",{"_index":2323,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["this.upload(img",{"_index":2222,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.uploadimage(img",{"_index":2240,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.user.email",{"_index":2150,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.user.name",{"_index":2153,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.user.password).subscribe",{"_index":2151,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.user_id",{"_index":944,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"classes/Post.html":{},"classes/Reaction.html":{}}}],["this.userchannels",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.userdata.avatarsrc",{"_index":1560,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.userdata.email",{"_index":856,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["this.userdata.name",{"_index":854,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/PickAvatarComponent.html":{}}}],["this.userdata.password).subscribe",{"_index":1174,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userdata.uid",{"_index":1557,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.users",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{},"injectables/UsersService.html":{}}}],["this.users$.next",{"_index":2513,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.foreach(u",{"_index":2519,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.push(new",{"_index":2511,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.adduser(user",{"_index":1193,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.usersservice.getuserbyuid(r.user_id",{"_index":2040,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["this.usersservice.getuserbyuid(this.post.user_id",{"_index":1359,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["this.usersservice.getuserbyuid(this.userdata.uid).avatarsrc",{"_index":1561,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.usersservice.getuserbyuid(uid",{"_index":142,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{}}}],["this.usersservice.isregistereduser(user.uid",{"_index":1191,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usersservice.updateuser(new",{"_index":1571,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["this.usersservice.updateuser(this.currentuser",{"_index":133,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.usersservice.updateuser(this.mainuser",{"_index":863,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{}}}],["this.usersservice.updateuser(user",{"_index":973,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["this.usersservice.users",{"_index":153,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{}}}],["this.usersservice.users$.subscribe",{"_index":118,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{}}}],["this.usersservice.users.foreach(u",{"_index":145,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.userssub",{"_index":110,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{}}}],["this.userssub.unsubscribe",{"_index":113,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{}}}],["this.userstates",{"_index":144,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.userstates.push(this.getuserstate(u",{"_index":146,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.usersub",{"_index":536,"title":{},"body":{"components/AppComponent.html":{},"components/PickAvatarComponent.html":{}}}],["this.usersub.unsubscribe",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"components/PickAvatarComponent.html":{}}}],["thread",{"_index":1446,"title":{"classes/Thread.html":{}},"body":{"components/PLAYGROUNDComponent.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"coverage.html":{}}}],["thread'},{'name",{"_index":321,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["thread(t",{"_index":2333,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["thread.component.html",{"_index":2266,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread.component.scss",{"_index":2267,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread.date",{"_index":2322,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["thread.thread_id",{"_index":1483,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/ThreadsService.html":{}}}],["thread.tojson",{"_index":2321,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["thread_id",{"_index":1597,"title":{},"body":{"classes/Post.html":{},"injectables/PostsService.html":{},"classes/Thread.html":{},"injectables/ThreadsService.html":{}}}],["threadcomponent",{"_index":320,"title":{"components/ThreadComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["threadlength",{"_index":1311,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["threads",{"_index":1427,"title":{},"body":{"components/PLAYGROUNDComponent.html":{},"injectables/ThreadsService.html":{}}}],["threads.filter(t",{"_index":2328,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["threads.foreach(t",{"_index":2331,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["threads.push(element.data",{"_index":2318,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["threads.sort((a",{"_index":2330,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["threadsservice",{"_index":1313,"title":{"injectables/ThreadsService.html":{}},"body":{"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"injectables/ThreadsService.html":{},"coverage.html":{}}}],["threadsservice.getchannelthreads(threads",{"_index":1481,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["threadssub",{"_index":1428,"title":{},"body":{"components/PLAYGROUNDComponent.html":{}}}],["throw",{"_index":2224,"title":{},"body":{"injectables/StorageService.html":{},"injectables/ThreadsService.html":{}}}],["thus",{"_index":433,"title":{},"body":{"components/AnimationIntroComponent.html":{}}}],["time",{"_index":323,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["timeout",{"_index":430,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["timeseparatorcomponent",{"_index":322,"title":{"components/TimeSeparatorComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["timeservice",{"_index":1301,"title":{"injectables/TimeService.html":{}},"body":{"components/MessageItemComponent.html":{},"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{}}}],["timeservice.toclock(post.date",{"_index":1389,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["timeservice.todate(timestamp",{"_index":2342,"title":{},"body":{"components/TimeSeparatorComponent.html":{}}}],["timeservice.torelativedatewithclock(lastreply",{"_index":1396,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["timestamp",{"_index":2339,"title":{},"body":{"components/TimeSeparatorComponent.html":{},"injectables/TimeService.html":{}}}],["title",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"components/ExpandableButtonComponent.html":{}}}],["toast",{"_index":326,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["toastnotificationcomponent",{"_index":325,"title":{"components/ToastNotificationComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["toclock",{"_index":2345,"title":{},"body":{"injectables/TimeService.html":{}}}],["toclock(timestamp",{"_index":2353,"title":{},"body":{"injectables/TimeService.html":{}}}],["todate",{"_index":2346,"title":{},"body":{"injectables/TimeService.html":{}}}],["todate(timestamp",{"_index":2355,"title":{},"body":{"injectables/TimeService.html":{}}}],["toggleeditdescriptionmode",{"_index":784,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["toggleeditmode",{"_index":785,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["toggleeditname",{"_index":786,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["togglemenu",{"_index":926,"title":{},"body":{"components/ExpandableButtonComponent.html":{}}}],["tojson",{"_index":626,"title":{},"body":{"classes/Channel.html":{},"classes/Post.html":{},"classes/Reaction.html":{},"classes/Thread.html":{},"classes/User.html":{}}}],["tools",{"_index":1961,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["torelativedate",{"_index":2347,"title":{},"body":{"injectables/TimeService.html":{}}}],["torelativedate(timestamp",{"_index":2357,"title":{},"body":{"injectables/TimeService.html":{}}}],["torelativedatewithclock",{"_index":2348,"title":{},"body":{"injectables/TimeService.html":{}}}],["torelativedatewithclock(timestamp",{"_index":2359,"title":{},"body":{"injectables/TimeService.html":{}}}],["track",{"_index":948,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{}}}],["transfer",{"_index":1361,"title":{},"body":{"components/MessageItemComponent.html":{}}}],["translates",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{}}}],["tree",{"_index":161,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["treffen",{"_index":819,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["trigger",{"_index":2500,"title":{},"body":{"injectables/UsersService.html":{}}}],["triggered",{"_index":197,"title":{},"body":{"components/AddChannelComponent.html":{},"components/LoginComponent.html":{},"components/MessageBoxComponent.html":{},"components/PickAvatarComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["trotzdem",{"_index":1954,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["true",{"_index":58,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["try",{"_index":2320,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["tslib",{"_index":2602,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":51,"title":{},"body":{"injectables/ActivityService.html":{}}}],["typ",{"_index":1714,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"classes/Reaction.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"injectables/TimeService.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["u",{"_index":2521,"title":{},"body":{"injectables/UsersService.html":{}}}],["u.uid",{"_index":2520,"title":{},"body":{"injectables/UsersService.html":{}}}],["uhr",{"_index":1390,"title":{},"body":{"components/MessageItemComponent.html":{},"components/ThreadComponent.html":{}}}],["uhrzeit",{"_index":1728,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["ui",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{}}}],["uid",{"_index":139,"title":{},"body":{"injectables/ActivityService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/ReactionsService.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"injectables/ThreadsService.html":{},"classes/User.html":{},"interfaces/UserState.html":{},"injectables/UsersService.html":{}}}],["um",{"_index":806,"title":{},"body":{"components/EditChannelComponent.html":{},"components/MessageItemComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["umgang",{"_index":1804,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["unabhängige",{"_index":1944,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["und",{"_index":733,"title":{},"body":{"injectables/ChannelsService.html":{},"components/EditChannelComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["undefined",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"injectables/StorageService.html":{}}}],["ungültig",{"_index":889,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{},"components/SignUpComponent.html":{}}}],["ungültiger",{"_index":1578,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["unified",{"_index":903,"title":{},"body":{"injectables/EmojiService.html":{},"components/ThreadComponent.html":{}}}],["unit",{"_index":2633,"title":{},"body":{"index.html":{}}}],["unkomplizierten",{"_index":1801,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["unselectavatar",{"_index":1502,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["unselects",{"_index":1537,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["unsubchannels",{"_index":651,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["unsubposts",{"_index":1612,"title":{},"body":{"injectables/PostsService.html":{}}}],["unsubreactions",{"_index":2003,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["unsubscribe",{"_index":682,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["unsubscribes",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"components/PickAvatarComponent.html":{}}}],["unsubthreads",{"_index":2292,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["unsubusers",{"_index":2473,"title":{},"body":{"injectables/UsersService.html":{}}}],["unter",{"_index":1684,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["unterhaltung",{"_index":765,"title":{},"body":{"components/DirectMessageComponent.html":{}}}],["unterliegt",{"_index":1835,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["unverzüglich",{"_index":1869,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["up",{"_index":2130,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up'},{'name",{"_index":319,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["up.component.html",{"_index":2131,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.scss",{"_index":2132,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":2128,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:23",{"_index":2142,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:24",{"_index":2147,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:25",{"_index":2144,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:26",{"_index":2146,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:31",{"_index":2145,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:32",{"_index":2141,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:33",{"_index":2143,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:40",{"_index":2137,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:48",{"_index":2139,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:61",{"_index":2135,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:70",{"_index":2136,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:89",{"_index":2138,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:97",{"_index":2134,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":2127,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["update",{"_index":686,"title":{},"body":{"injectables/ChannelsService.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["updated",{"_index":719,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["updatedoc",{"_index":658,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["updatedoc(channel",{"_index":684,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["updatedoc(docref",{"_index":722,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/PostsService.html":{},"injectables/ReactionsService.html":{},"injectables/ThreadsService.html":{},"injectables/UsersService.html":{}}}],["updatedoc(post",{"_index":1626,"title":{},"body":{"injectables/PostsService.html":{}}}],["updatedoc(reaction",{"_index":2020,"title":{},"body":{"injectables/ReactionsService.html":{}}}],["updatedoc(thread",{"_index":2310,"title":{},"body":{"injectables/ThreadsService.html":{}}}],["updateprofile",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile(response.user",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["updates",{"_index":1518,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["updateuser",{"_index":2478,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(user",{"_index":2502,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1506,"title":{},"body":{"components/PickAvatarComponent.html":{},"injectables/StorageService.html":{}}}],["upload(file",{"_index":2200,"title":{},"body":{"injectables/StorageService.html":{}}}],["uploadavatar",{"_index":2175,"title":{},"body":{"injectables/StorageService.html":{}}}],["uploadavatar(img",{"_index":2202,"title":{},"body":{"injectables/StorageService.html":{}}}],["uploadbytesresumable",{"_index":2215,"title":{},"body":{"injectables/StorageService.html":{}}}],["uploadbytesresumable(ref",{"_index":2220,"title":{},"body":{"injectables/StorageService.html":{}}}],["uploadimage",{"_index":2176,"title":{},"body":{"injectables/StorageService.html":{}}}],["uploadimage(img",{"_index":2204,"title":{},"body":{"injectables/StorageService.html":{}}}],["uploads",{"_index":734,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["uploadtempavatar",{"_index":2177,"title":{},"body":{"injectables/StorageService.html":{}}}],["uploadtempavatar(img",{"_index":2206,"title":{},"body":{"injectables/StorageService.html":{}}}],["upon",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["url",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPwComponent.html":{}}}],["url(window.location.href",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["ursachen",{"_index":1746,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["usage",{"_index":2418,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["use",{"_index":2227,"title":{},"body":{"injectables/StorageService.html":{},"index.html":{}}}],["used",{"_index":435,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/LegalFooterComponent.html":{}}}],["user",{"_index":39,"title":{"classes/User.html":{}},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"classes/User.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":2482,"title":{},"body":{"injectables/UsersService.html":{}}}],["user(element.data",{"_index":2512,"title":{},"body":{"injectables/UsersService.html":{}}}],["user(this.firebaseauth",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["user(this.mainuser",{"_index":972,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user(this.userdata",{"_index":1572,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["user.displayname",{"_index":1555,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["user.lastactivity",{"_index":151,"title":{},"body":{"injectables/ActivityService.html":{},"components/HeaderComponent.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":393,"title":{},"body":{"components/AddMembersComponent.html":{},"injectables/ChannelsService.html":{},"components/LoginComponent.html":{},"components/MemberListComponent.html":{}}}],["user.name.tolowercase().includes(term",{"_index":386,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["user.tojson",{"_index":2515,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.uid",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChannelsService.html":{},"injectables/UsersService.html":{}}}],["user/edit",{"_index":823,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/MainUserProfileCardComponent.html":{},"coverage.html":{}}}],["user/log",{"_index":964,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{},"coverage.html":{}}}],["user/main",{"_index":1233,"title":{},"body":{"components/MainUserProfileCardComponent.html":{},"coverage.html":{}}}],["user_id",{"_index":927,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"classes/Post.html":{},"classes/Reaction.html":{},"injectables/ThreadsService.html":{}}}],["userchannels",{"_index":928,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["userdata",{"_index":830,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{}}}],["userdata.name",{"_index":1583,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["userobj",{"_index":1183,"title":{},"body":{"components/LoginComponent.html":{}}}],["userprofilecardcomponent",{"_index":328,"title":{"components/UserProfileCardComponent.html":{}},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"coverage.html":{}}}],["userref",{"_index":1181,"title":{},"body":{"components/LoginComponent.html":{}}}],["users",{"_index":982,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/ReactionsService.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":97,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/ReactionsService.html":{}}}],["usersservice",{"_index":16,"title":{"injectables/UsersService.html":{}},"body":{"injectables/ActivityService.html":{},"injectables/AuthService.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/ReactionsService.html":{},"components/SignUpComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userssub",{"_index":17,"title":{},"body":{"injectables/ActivityService.html":{},"components/HomeComponent.html":{},"components/MessageItemComponent.html":{},"components/PickAvatarComponent.html":{}}}],["userstate",{"_index":47,"title":{"interfaces/UserState.html":{}},"body":{"injectables/ActivityService.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["userstates",{"_index":19,"title":{},"body":{"injectables/ActivityService.html":{}}}],["usersub",{"_index":485,"title":{},"body":{"components/AppComponent.html":{},"components/PickAvatarComponent.html":{}}}],["usevalue",{"_index":918,"title":{},"body":{"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutCardComponent.html":{}}}],["using",{"_index":404,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{}}}],["validateform",{"_index":2071,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["validateform(form",{"_index":2082,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["validates",{"_index":2084,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["validation",{"_index":2086,"title":{},"body":{"components/ResetPwComponent.html":{}}}],["value",{"_index":77,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"injectables/StorageService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":248,"title":{},"body":{"components/AddChannelComponent.html":{},"components/AddMembersAfterAddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LegalFooterComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/NavigationComponent.html":{},"components/NewMessageComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{}}}],["variable",{"_index":2536,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2654,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verantwortlich",{"_index":1689,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["verantwortung",{"_index":1949,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["verarbeitet",{"_index":1805,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["verarbeitung",{"_index":1812,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["verarbeitungsvorgänge",{"_index":1826,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["verfügen",{"_index":1942,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["vergessen",{"_index":1228,"title":{},"body":{"components/LoginComponent.html":{}}}],["verlassen",{"_index":821,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["verlinkten",{"_index":1953,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["verpflichtet",{"_index":1985,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["verpflichtung",{"_index":1834,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["version",{"_index":1715,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/ThreadComponent.html":{},"index.html":{},"properties.html":{}}}],["versuchen",{"_index":2108,"title":{},"body":{"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["versucht",{"_index":1955,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["verwahrung",{"_index":1931,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["verwenden",{"_index":1590,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["verwendest",{"_index":1220,"title":{},"body":{"components/LoginComponent.html":{}}}],["verwendet",{"_index":1932,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["via",{"_index":507,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/ToastNotificationComponent.html":{},"index.html":{}}}],["visit",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["visual",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":64,"title":{},"body":{"injectables/ActivityService.html":{},"components/AddChannelComponent.html":{},"components/AddMembersComponent.html":{},"components/AnimationIntroComponent.html":{},"components/AppComponent.html":{},"injectables/ChannelsService.html":{},"components/DirectMessageComponent.html":{},"components/EditChannelComponent.html":{},"components/EditMainUserProfileCardComponent.html":{},"injectables/EmojiService.html":{},"components/ExpandableButtonComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ImpressComponent.html":{},"components/LogOutCardComponent.html":{},"components/LoginComponent.html":{},"components/MainUserProfileCardComponent.html":{},"components/MemberListComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageItemComponent.html":{},"components/PLAYGROUNDComponent.html":{},"components/PickAvatarComponent.html":{},"injectables/PostsService.html":{},"components/PrivacypolicyComponent.html":{},"injectables/ReactionsService.html":{},"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadsService.html":{},"components/ToastNotificationComponent.html":{},"components/UserProfileCardComponent.html":{},"injectables/UsersService.html":{}}}],["vollständiger",{"_index":875,"title":{},"body":{"components/EditMainUserProfileCardComponent.html":{},"components/EditUserProfileCardComponent.html":{}}}],["vom",{"_index":1704,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["von",{"_index":342,"title":{},"body":{"components/AddMembersAfterAddChannelComponent.html":{},"components/EditChannelComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/ThreadComponent.html":{}}}],["vor",{"_index":2413,"title":{},"body":{"injectables/TimeService.html":{}}}],["vorgeschrieben",{"_index":1875,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["vorgesehen",{"_index":808,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["vorgesehenen",{"_index":1864,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["vorgestern",{"_index":2412,"title":{},"body":{"injectables/TimeService.html":{}}}],["vorherige",{"_index":1818,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["vorname",{"_index":1777,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["vorname.name@beispiel.de",{"_index":1248,"title":{},"body":{"components/MainUserProfileCardComponent.html":{}}}],["vorschriften",{"_index":1873,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["wahrung",{"_index":1837,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["webanalytics",{"_index":1849,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["weiter",{"_index":1594,"title":{},"body":{"components/PickAvatarComponent.html":{},"components/SignUpComponent.html":{}}}],["weiterleiten",{"_index":1924,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["welche",{"_index":1847,"title":{},"body":{"components/PrivacypolicyComponent.html":{},"components/ThreadComponent.html":{}}}],["welches",{"_index":1785,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["wenden",{"_index":1919,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["wenigen",{"_index":1981,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["wenigstens",{"_index":1856,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["wenn",{"_index":1670,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["werden",{"_index":1678,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["whether",{"_index":437,"title":{},"body":{"components/AnimationIntroComponent.html":{},"components/LoginComponent.html":{},"injectables/UsersService.html":{}}}],["widerrufen",{"_index":1900,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["widerspruchsrecht",{"_index":1903,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["wie",{"_index":1712,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["window.addeventlistener('click",{"_index":121,"title":{},"body":{"injectables/ActivityService.html":{}}}],["window.addeventlistener('dommousescroll",{"_index":123,"title":{},"body":{"injectables/ActivityService.html":{}}}],["window.addeventlistener('keypress",{"_index":122,"title":{},"body":{"injectables/ActivityService.html":{}}}],["window.addeventlistener('mousemove",{"_index":119,"title":{},"body":{"injectables/ActivityService.html":{}}}],["window.addeventlistener('mousewheel",{"_index":124,"title":{},"body":{"injectables/ActivityService.html":{}}}],["window.addeventlistener('mspointermove",{"_index":126,"title":{},"body":{"injectables/ActivityService.html":{}}}],["window.addeventlistener('touchmove",{"_index":125,"title":{},"body":{"injectables/ActivityService.html":{}}}],["wir",{"_index":1212,"title":{},"body":{"components/LoginComponent.html":{},"components/RequestPwResetComponent.html":{}}}],["wird",{"_index":1788,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["wohnsitzes",{"_index":1918,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["workspace",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{}}}],["wähle",{"_index":1581,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["wählen",{"_index":1586,"title":{},"body":{"components/PickAvatarComponent.html":{}}}],["x",{"_index":392,"title":{},"body":{"components/AddMembersComponent.html":{}}}],["yes",{"_index":630,"title":{},"body":{"classes/Channel.html":{},"components/LoginComponent.html":{},"components/PickAvatarComponent.html":{},"classes/Post.html":{},"classes/Reaction.html":{},"classes/Thread.html":{},"classes/User.html":{}}}],["z",{"_index":1711,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["zeichen",{"_index":2115,"title":{},"body":{"components/ResetPwComponent.html":{},"components/SignUpComponent.html":{}}}],["zone.js",{"_index":2604,"title":{},"body":{"dependencies.html":{}}}],["zu",{"_index":1215,"title":{},"body":{"components/LoginComponent.html":{},"components/MessageItemComponent.html":{},"components/PrivacypolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["zugriffs",{"_index":1729,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["zulässig",{"_index":1825,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["zum",{"_index":241,"title":{},"body":{"components/AddChannelComponent.html":{},"components/PrivacypolicyComponent.html":{},"injectables/StorageService.html":{}}}],["zur",{"_index":233,"title":{},"body":{"components/AddChannelComponent.html":{},"components/PrivacypolicyComponent.html":{}}}],["zurückgesetzt",{"_index":2440,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["zurücksetzen",{"_index":2060,"title":{},"body":{"components/RequestPwResetComponent.html":{},"components/ResetPwComponent.html":{}}}],["zusammen",{"_index":812,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["zuständige",{"_index":1922,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["zweck",{"_index":1751,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["zwecke",{"_index":1986,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["zwecken",{"_index":1755,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["zwingend",{"_index":1771,"title":{},"body":{"components/PrivacypolicyComponent.html":{}}}],["zwischen",{"_index":768,"title":{},"body":{"components/DirectMessageComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ActivityService.html":{"url":"injectables/ActivityService.html","title":"injectable - ActivityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActivityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/activity.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activitySettingAllowed\n                            \n                            \n                                    Private\n                                authService\n                            \n                            \n                                    Private\n                                authSub\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                    Private\n                                    Readonly\n                                idleDuration\n                            \n                            \n                                    Private\n                                usersService\n                            \n                            \n                                    Private\n                                usersSub\n                            \n                            \n                                    Public\n                                userStates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActiveUsers\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                getUserState\n                            \n                            \n                                initInterval\n                            \n                            \n                                initListeners\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setLastActivity\n                            \n                            \n                                setLastActivityOnAuth\n                            \n                            \n                                setUserStates\n                            \n                            \n                                subAuth\n                            \n                            \n                                subUsers\n                            \n                            \n                                syncCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/activity.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveUsers\n                        \n                    \n                \n            \n            \n                \ngetActiveUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/activity.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         User[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/activity.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         User[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserState\n                        \n                    \n                \n            \n            \n                \ngetUserState(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/activity.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UserState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initInterval\n                        \n                    \n                \n            \n            \n                \ninitInterval()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/activity.service.ts:67\n                        \n                    \n\n\n            \n                \n                        The interval in this function has two different functions:\n\nOne function sets/updates the public \"userStates\" property\nThe \"activitySettingAllowed\" is set to true again to allow reacting to activity of the current user\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initListeners\n                        \n                    \n                \n            \n            \n                \ninitListeners()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/activity.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/activity.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLastActivity\n                        \n                    \n                \n            \n            \n                \nsetLastActivity()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/activity.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLastActivityOnAuth\n                        \n                    \n                \n            \n            \n                \nsetLastActivityOnAuth(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/activity.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserStates\n                        \n                    \n                \n            \n            \n                \nsetUserStates()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/activity.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subAuth\n                        \n                    \n                \n            \n            \n                \nsubAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/activity.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Subscription\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subUsers\n                        \n                    \n                \n            \n            \n                \nsubUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/activity.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Subscription\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncCurrentUser\n                        \n                    \n                \n            \n            \n                \nsyncCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/activity.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activitySettingAllowed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/services/activity.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/services/activity.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/services/activity.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/services/activity.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        idleDuration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 180 * 1000\n                    \n                \n                    \n                        \n                                Defined in src/services/activity.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/services/activity.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/services/activity.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserState[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/activity.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, inject } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { UsersService } from './users.service';\nimport { User } from '../models/user.class';\nimport { UserState } from '../interfaces/userState.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService implements OnDestroy {\n  private readonly idleDuration: number = 180 * 1000;\n  private activitySettingAllowed: boolean = true;\n\n  private authService = inject(AuthService);\n  private usersService = inject(UsersService);\n  private authSub = new Subscription();\n  private usersSub = new Subscription();\n  private currentUser = new User();\n\n  public userStates: UserState[] = [];\n\n  constructor() {\n    this.initListeners();\n    this.initInterval();\n    this.syncCurrentUser();\n    this.authSub = this.subAuth();\n    this.usersSub = this.subUsers();\n  }\n\n  ngOnDestroy(): void {\n    this.authSub.unsubscribe();\n    this.usersSub.unsubscribe();\n  }\n\n  subAuth(): Subscription {\n    return this.authService.user$.subscribe((user: any) => {\n      if (user) {this.setUserStates()}\n      this.setLastActivityOnAuth(user);\n    });\n  }\n\n  subUsers(): Subscription {\n    return this.usersService.users$.subscribe(() => {\n      this.syncCurrentUser();\n      this.setUserStates();\n    });\n  }\n\n\n  initListeners() {\n    window.addEventListener('mousemove', () => this.setLastActivity());\n    window.addEventListener('click', () => this.setLastActivity());\n    window.addEventListener('keypress', () => this.setLastActivity());\n    window.addEventListener('DOMMouseScroll', () => this.setLastActivity());\n    window.addEventListener('mousewheel', () => this.setLastActivity());\n    window.addEventListener('touchmove', () => this.setLastActivity());\n    window.addEventListener('MSPointerMove', () => this.setLastActivity());\n  }\n\n\n  /**\n   * The interval in this function has two different functions:\n   * - One function sets/updates the public \"userStates\" property\n   * - The \"activitySettingAllowed\" is set to true again to allow reacting to activity of the current user\n   */\n  initInterval() {\n    setInterval(() => {\n      this.setUserStates();\n      this.activitySettingAllowed = true;\n    }, 30 * 1000);\n  }\n\n  setLastActivity() {\n    if (this.activitySettingAllowed && this.currentUser.uid) {\n      this.currentUser.lastActivity = Date.now();\n      this.usersService.updateUser(this.currentUser);\n      this.activitySettingAllowed = false;\n    }\n  }\n\n  setLastActivityOnAuth(user: any) {\n    if(user && this.currentUser.lastActivity == -1) {\n      this.currentUser.lastActivity = Date.now();\n      this.usersService.updateUser(this.currentUser);\n    } else if (!user && this.currentUser.lastActivity > 0) {\n      this.currentUser.lastActivity = -1;\n      this.usersService.updateUser(this.currentUser);\n    }\n  }\n\n  syncCurrentUser(): void {\n    const uid = this.authService.getCurrentUid();\n    if (uid) {\n      this.currentUser = this.usersService.getUserByUid(uid);\n      this.setLastActivityOnAuth(true);\n    }\n  }\n\n  setUserStates(): void {\n    this.userStates = [];\n    this.usersService.users.forEach(u => this.userStates.push(this.getUserState(u)));\n  }\n\n  getUserState(user: User): UserState {\n    let state: 'active' | 'idle' | 'loggedOut' = 'idle';\n    if (user.lastActivity == -1) { state = 'loggedOut' }\n    else if (Date.now() - user.lastActivity  this.getUserState(user).state === 'active');\n  } \n\n  getAllUsers(): User[] {\n    return this.usersService.users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddChannelComponent.html":{"url":"components/AddChannelComponent.html","title":"component - AddChannelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddChannelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-channel/add-channel.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-channel\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./add-channel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./add-channel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channel\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addChannelToParams\n                            \n                            \n                                onCancel\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, channelsService: ChannelsService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-channel/add-channel.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelsService\n                                                  \n                                                        \n                                                                        ChannelsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addChannelToParams\n                        \n                    \n                \n            \n            \n                \naddChannelToParams(channel_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-channel/add-channel.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-channel/add-channel.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-channel/add-channel.component.ts:35\n                        \n                    \n\n\n            \n                \n                        This function is triggered by the add channel submission.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nadd channel form\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Channel()\n                    \n                \n                    \n                        \n                                Defined in src/app/add-channel/add-channel.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/add-channel/add-channel.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ExpandableButtonComponent } from '../components/expandable-button/expandable-button.component';\nimport { ChannelsService } from '../../services/content/channels.service';\nimport { Channel } from '../../models/channel.class';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-add-channel',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './add-channel.component.html',\n  styleUrl: './add-channel.component.scss'\n})\nexport class AddChannelComponent {\n  channel = new Channel();\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private channelsService: ChannelsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  /**\n   * This function is triggered by the add channel submission.\n   * @param form - add channel form\n   */\n  async onSubmit(form: NgForm) {\n    if (form.submitted && form.valid) {\n      const id = await this.channelsService.addDoc(this.channel);\n      this.addChannelToParams(id);\n      this.dialogRef.close();\n    }\n  }\n\n  addChannelToParams(channel_id: string): void {\n    const queryParams: Params = { channel: channel_id };\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams,\n      queryParamsHandling: 'merge'\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Channel erstellen\n    \n      close\n    \n  \n  \n    \n      Channels dienen deinem Team zur Kommunikation. Am besten sollten sie\n      themenbezogen sein\n      #marketing zum Beispiel.\n    \n  \n  \n    Channel-Name\n    \n  \n  \n    \n      Beschreibung (optional)\n    \n    \n  \n  \n    Erstellen\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Channel erstellen          close                  Channels dienen deinem Team zur Kommunikation. Am besten sollten sie      themenbezogen sein      #marketing zum Beispiel.            Channel-Name                  Beschreibung (optional)                Erstellen  '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddChannelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddMembersAfterAddChannelComponent.html":{"url":"components/AddMembersAfterAddChannelComponent.html","title":"component - AddMembersAfterAddChannelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddMembersAfterAddChannelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-members-after-add-channel/add-members-after-add-channel.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-members-after-add-channel\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./add-members-after-add-channel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./add-members-after-add-channel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selection\n                            \n                            \n                                specificPeople\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members-after-add-channel/add-members-after-add-channel.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        specificPeople\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members-after-add-channel/add-members-after-add-channel.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'app-add-members-after-add-channel',\n  standalone: true,\n  imports: [FormsModule,CommonModule],\n  templateUrl: './add-members-after-add-channel.component.html',\n  styleUrl: './add-members-after-add-channel.component.scss'\n})\nexport class AddMembersAfterAddChannelComponent {\n  selection = null;\n  specificPeople: string = '';\n}\n\n    \n\n    \n        \n  \n    Leute hinzufügen\n    \n      close\n    \n  \n  \n    \n    \n    Alle Mitglieder von OfficeTeam hinzufügen\n  \n  \n    \n    Bestimmte Leute hinzufügen\n  \n  \n    \n    \n  \n  \n    Erstellen\n  \n\n\n \n\n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Leute hinzufügen          close                    Alle Mitglieder von OfficeTeam hinzufügen            Bestimmte Leute hinzufügen                    Erstellen    '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddMembersAfterAddChannelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddMembersComponent.html":{"url":"components/AddMembersComponent.html","title":"component - AddMembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddMembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-members/add-members.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-members\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                MemberListComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./add-members.component.html\n            \n\n\n\n            \n                styleUrl\n                ./add-members.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeUsers\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                selectedUser\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                selection\n                            \n                            \n                                showUserList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUserToMembers\n                            \n                            \n                                clearSelection\n                            \n                            \n                                closeCard\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                            \n                                selectUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activityService: ActivityService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-members/add-members.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUserToMembers\n                        \n                    \n                \n            \n            \n                \naddUserToMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members/add-members.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members/add-members.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeCard\n                        \n                    \n                \n            \n            \n                \ncloseCard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members/add-members.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members/add-members.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members/add-members.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUser\n                        \n                    \n                \n            \n            \n                \nselectUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/add-members/add-members.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members/add-members.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members/add-members.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members/add-members.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members/add-members.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members/add-members.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUserList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/add-members/add-members.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { User } from '../../models/user.class';\nimport { ActivityService } from '../../services/activity.service';\nimport { MemberListComponent } from '../member-list/member-list.component';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-add-members',\n  standalone: true,\n  templateUrl: './add-members.component.html',\n  styleUrl: './add-members.component.scss',\n  imports: [CommonModule, FormsModule, MemberListComponent],\n})\nexport class AddMembersComponent implements OnInit {\n  selection: string | null = null;\n  filteredUsers: User[] = [];\n  selectedUsers: User[] = [];\n  showUserList: boolean = false;\n  selectedUser: User | null = null;\n  activeUsers: User[] = [];\n  constructor(private activityService: ActivityService,private dialogRef: MatDialogRef) {}\n\n  ngOnInit(): void {\n    this.filteredUsers = this.activityService.getAllUsers();\n  }\n\n  onSearch(): void {\n    const term = this.selection?.toLowerCase() || '';\n    if (term) {\n      this.filteredUsers = this.activityService\n        .getAllUsers()\n        .filter((user) => user.name.toLowerCase().includes(term));\n      this.showUserList = true;\n    } else {\n      this.filteredUsers = [];\n      this.showUserList = false;\n    }\n  }\n\n  selectUser(user: User): void {\n    this.selectedUser = user;\n    this.showUserList = false;\n  }\n\n  clearSelection(): void {\n    this.selectedUser = null;\n    this.selection = '';\n  }\n\n  addUserToMembers() {}\n\n  closeCard(){\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Leute hinzufügen\n      # Entwicklerteam\n    \n\n    \n      close\n    \n  \n\n  \n    \n      \n      \n        \n        {{ selectedUser.name }}\n        x\n      \n      \n    \n    \n      \n        Hinzufügen\n      \n    \n  \n\n\n  \n    \n    \n      {{ user.name }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Leute hinzufügen      # Entwicklerteam              close                                        {{ selectedUser.name }}        x                                  Hinzufügen                            {{ user.name }}      '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddMembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnimationIntroComponent.html":{"url":"components/AnimationIntroComponent.html","title":"component - AnimationIntroComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnimationIntroComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/animation-intro/animation-intro.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the DABubble intro animation.\nAfter the animation, a clickable DABubble logo remains.\nThe animation can be paused using the input parameter [pause]=\"true\".\nThe animation can be prevented using the input parameter [animate]=\"false\". In that case, only the logo will be shown.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animation-intro\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animation-intro.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animation-intro.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _pause\n                            \n                            \n                                after\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                awaitAnimation\n                            \n                            \n                                initAnimation\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAuthRoute\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                pause\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                then\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pause\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/animation-intro/animation-intro.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pause\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/animation-intro/animation-intro.component.ts:28\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        then\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/animation-intro/animation-intro.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        awaitAnimation\n                        \n                    \n                \n            \n            \n                \nawaitAnimation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/animation-intro/animation-intro.component.ts:60\n                        \n                    \n\n\n            \n                \n                        This function sets the animation properties after animation completion.\nThe timeout duration is equal to the animation duration.\nThus, the \"after\" property and the \"(then)\" event can be used to check whether the\nanimation has been completed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initAnimation\n                        \n                    \n                \n            \n            \n                \ninitAnimation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/animation-intro/animation-intro.component.ts:48\n                        \n                    \n\n\n            \n                \n                        This function initializes the animation by checking the input parameters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/animation-intro/animation-intro.component.ts:40\n                        \n                    \n\n\n            \n                \n                        This function calls the animation initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAuthRoute\n                        \n                    \n                \n            \n            \n                \nonAuthRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/animation-intro/animation-intro.component.ts:72\n                        \n                    \n\n\n            \n                \n                        This function checks whether the current route belongs to an auth (authentication) component.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                check result\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _pause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/animation-intro/animation-intro.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        after\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/animation-intro/animation-intro.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/animation-intro/animation-intro.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pause\n                    \n                \n\n                \n                    \n                        getpause()\n                    \n                \n                            \n                                \n                                    Defined in src/app/animation-intro/animation-intro.component.ts:32\n                                \n                            \n\n                \n                    \n                        setpause(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/animation-intro/animation-intro.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter, inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n/**\n * This component displays the DABubble intro animation.\n * After the animation, a clickable DABubble logo remains.\n * \n * The animation can be paused using the input parameter [pause]=\"true\".\n * The animation can be prevented using the input parameter [animate]=\"false\". In that case, only the logo will be shown.\n */\n@Component({\n  selector: 'app-animation-intro',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './animation-intro.component.html',\n  styleUrl: './animation-intro.component.scss'\n})\nexport class AnimationIntroComponent implements OnInit {\n  @Input() animate: boolean = true;\n  @Output() then = new EventEmitter();\n  after: boolean = false;\n  private router = inject(Router);\n\n  private _pause: boolean = false;\n  @Input()\n  set pause(value: boolean) {\n      this._pause = value;\n      this.initAnimation();\n  };\n  get pause(): boolean {\n    return this._pause;\n  }\n\n\n  /**\n   * This function calls the animation initialization.\n   */\n  ngOnInit(): void {\n    this.initAnimation();\n  }\n\n\n  /**\n   * This function initializes the animation by checking the input parameters.\n   */\n  initAnimation(): void {\n    if (this.animate && !this.pause) {this.awaitAnimation()}\n  }\n\n\n  /**\n   * This function sets the animation properties after animation completion.\n   * \n   * The timeout duration is equal to the animation duration.\n   * Thus, the \"after\" property and the \"(then)\" event can be used to check whether the\n   * animation has been completed. \n   */\n  awaitAnimation(): void {\n    setTimeout(() => {\n      this.after = true;\n      this.then.emit();\n    }, 2400);\n  }\n\n\n  /**\n   * This function checks whether the current route belongs to an auth (authentication) component.\n   * @returns check result\n   */\n  onAuthRoute(): boolean {\n    return this.router.url.includes('auth');\n  }\n}\n    \n\n    \n        \n\n    \n        \n            \n                \n                \n            \n            \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimationIntroComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is the central component displaying all other components as its children.\nIt also directly displays the intro animation and handles the user authentication upon visit.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                                AnimationIntroComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                awaitingInit\n                            \n                            \n                                TESTING\n                            \n                            \n                                title\n                            \n                            \n                                uid\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                awaitMax\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onProtectedRoute\n                            \n                            \n                                subUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                            The constructor sets the login page as the default route.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter instance\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        awaitMax\n                        \n                    \n                \n            \n            \n                \nawaitMax()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:87\n                        \n                    \n\n\n            \n                \n                        This function automatically aborts the visual display of the authentication process after a timeout duration.\nThat simply means that the intro animation will start and the user can access the login form and other\nauthentication components. The authentication process itself will not be affected since it is handled via\nsubscriptions which continue in the runtime environment.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:60\n                        \n                    \n\n\n            \n                \n                        This function unsubscribes all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:47\n                        \n                    \n\n\n            \n                \n                        This function creates an authentication service subscription for user authentication.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onProtectedRoute\n                        \n                    \n                \n            \n            \n                \nonProtectedRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subUser\n                        \n                    \n                \n            \n            \n                \nsubUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:69\n                        \n                    \n\n\n            \n                \n                        This function defines the user authentication process.\n\n\n                        \n                            Returns :     Subscription\n\n                        \n                            \n                                authentication service subscription\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        awaitingInit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TESTING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DaBubble'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { AnimationIntroComponent } from './animation-intro/animation-intro.component';\nimport { AuthService } from '../services/auth.service';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * This component is the central component displaying all other components as its children.\n * It also directly displays the intro animation and handles the user authentication upon visit.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, AnimationIntroComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'DaBubble';\n  awaitingInit: boolean = true;\n  uid: string | null = null;\n  private authService = inject(AuthService);\n  userSub = new Subscription();\n\n\n  // ###############################################\n  // This parameter (if set to true) suppresses both the animation and the authentication\n  // and redirects automatically to the home component.\n  TESTING: boolean = true;\n  // ###############################################\n\n\n  /**\n   * The constructor sets the login page as the default route.\n   * @param router - Router instance\n   */\n  constructor(private router: Router) {\n\n  }\n\n\n  /**\n   * This function creates an authentication service subscription for user authentication.\n   */\n  ngOnInit(): void {\n      if(!this.TESTING) {\n        const url = new URL(window.location.href);\n        if(!url.search.includes('mode')) {this.router.navigate(['/auth/logIn'])}\n        this.userSub = this.subUser();\n        this.awaitMax();\n      }\n  }\n\n\n  /**\n   * This function unsubscribes all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.userSub.unsubscribe();\n  }\n\n\n  /**\n   * This function defines the user authentication process.\n   * @returns authentication service subscription\n   */\n  subUser(): Subscription {\n    return this.authService.user$.subscribe((user) => {\n      if (user && user.uid) {\n        this.uid = user.uid;\n        this.router.navigate(['']);\n        this.awaitingInit = false;\n      }\n    });\n  }\n\n\n  /**\n   * This function automatically aborts the visual display of the authentication process after a timeout duration.\n   * \n   * That simply means that the intro animation will start and the user can access the login form and other\n   * authentication components. The authentication process itself will not be affected since it is handled via\n   * subscriptions which continue in the runtime environment.\n   */\n    awaitMax(): void {\n      setTimeout(() => this.awaitingInit = false, 1000);\n    }\n\n\n    onProtectedRoute(): boolean {\n      const route = this.router.url;\n      return !(\n        route.includes('auth') ||\n        route.includes('impress') ||\n        route.includes('privacypolicy')\n      ); \n    }\n}\n    \n\n    \n        \n@if((TESTING || uid) || !onProtectedRoute()) {\n\n  \n\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if((TESTING || uid) || !onProtectedRoute()) {  }'\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n    \n        Description\n    \n    \n        This components displays all authentication components as children via router outlet.\nIt also contains their shared style.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                LegalFooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { LegalFooterComponent } from './legal-footer/legal-footer.component';\n\n\n/**\n * This components displays all authentication components as children via router outlet.\n * It also contains their shared style.\n */\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [RouterOutlet, LegalFooterComponent],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss'\n})\nexport class AuthComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This injectable handles Firebase user authentication.\nAside from plain authentication and registration, it can only display the user name.\nFor the retrieval of more detailed data about the current user, see \"usersService\".\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firebaseAuth\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrent\n                            \n                            \n                                getCurrentUid\n                            \n                            \n                                logIn\n                            \n                            \n                                logInAsGuest\n                            \n                            \n                                logInWithGoogle\n                            \n                            \n                                logOut\n                            \n                            \n                                register\n                            \n                            \n                                requestPasswordReset\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrent\n                        \n                    \n                \n            \n            \n                \ngetCurrent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/auth.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUid\n                        \n                    \n                \n            \n            \n                \ngetCurrentUid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/auth.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Get Firebase user ID (\"uid\") of active user\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                user ID (actual uid or undefined in case there is no log in)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/auth.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Log in user (with password and email)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user email\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                authentication result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logInAsGuest\n                        \n                    \n                \n            \n            \n                \nlogInAsGuest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/auth.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logInWithGoogle\n                        \n                    \n                \n            \n            \n                \nlogInWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/auth.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Log out\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                log out result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(name: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Register user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user name\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user email\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                authentication result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestPasswordReset\n                        \n                    \n                \n            \n            \n                \nrequestPasswordReset(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/auth.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Send password reset email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user email address\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                authentication result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(oobCode: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/auth.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oobCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firebaseAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Auth)\n                    \n                \n                    \n                        \n                                Defined in src/services/auth.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : user(this.firebaseAuth)\n                    \n                \n                    \n                        \n                                Defined in src/services/auth.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from \"@angular/core\";\nimport {\n  Auth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  GoogleAuthProvider,\n  signInWithPopup,\n  signInAnonymously,\n  signOut,\n  updateProfile,\n  user\n} from \"@angular/fire/auth\";\nimport { sendPasswordResetEmail, confirmPasswordReset } from \"firebase/auth\";\nimport { Observable, from } from \"rxjs\";\n\n\n/**\n * This injectable handles Firebase user authentication.\n * Aside from plain authentication and registration, it can only display the user name.\n * For the retrieval of more detailed data about the current user, see \"usersService\".\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  firebaseAuth = inject(Auth);\n  user$ = user(this.firebaseAuth);\n\n\n  /**\n   * Register user\n   * @param name user name\n   * @param email user email\n   * @param password user password\n   * @returns authentication result\n   */\n  register(name: string, email: string, password: string): Observable {\n    const promise = createUserWithEmailAndPassword(\n      this.firebaseAuth,\n      email,\n      password\n    ).then(response => updateProfile(response.user, { displayName: name }));\n    return from(promise);\n  }\n\n\n  /**\n   * Log in user (with password and email)\n   * @param email user email\n   * @param password user password\n   * @returns authentication result\n   */\n  logIn(email: string, password: string): Observable {\n    const promise = signInWithEmailAndPassword(\n      this.firebaseAuth,\n      email,\n      password\n    ).then(() => { });\n    return from(promise);\n  }\n\n\n  logInWithGoogle(): Observable {\n    const promise = signInWithPopup(\n      this.firebaseAuth,\n      new GoogleAuthProvider()\n    ).then(() => { });\n    return from(promise);\n  }\n\n\n  logInAsGuest(): Observable {\n    const promise = signInAnonymously(\n      this.firebaseAuth\n    ).then(() => { });\n    return from(promise);\n  }\n\n\n  /**\n   * Send password reset email\n   * @param email user email address\n   * @returns authentication result\n   */\n  requestPasswordReset(email: string): Observable {\n    const promise = sendPasswordResetEmail(\n      this.firebaseAuth,\n      email\n    ).then(() => { });\n    return from(promise);\n  }\n\n\n  resetPassword(oobCode: string, password: string): Observable {\n    const promise = confirmPasswordReset(\n      this.firebaseAuth,\n      oobCode,\n      password\n    ).then(() => { });\n    return from(promise);\n  }\n  \n\n  /**\n   * Log out\n   * @returns log out result\n   */\n  logOut(): Observable {\n    const promise = signOut(this.firebaseAuth);\n    return from(promise);\n  }\n\n\n  getCurrent() {\n    return this.firebaseAuth.currentUser;\n  }\n\n\n  /**\n   * Get Firebase user ID (\"uid\") of active user\n   * @returns user ID (actual uid or undefined in case there is no log in)\n   */\n  getCurrentUid(): string | undefined {\n    const current = this.firebaseAuth.currentUser;\n    return current ? current.uid : undefined;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Channel.html":{"url":"classes/Channel.html","title":"class - Channel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Channel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/channel.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author_uid\n                            \n                            \n                                channel_id\n                            \n                            \n                                date\n                            \n                            \n                                description\n                            \n                            \n                                members_uids\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/channel.class.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author_uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/channel.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channel_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/channel.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/channel.class.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/channel.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members_uids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/channel.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/channel.class.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/channel.class.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { channel_id: string; name: string; author_uid: string; description: string; members_uids: {}; date: number; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Channel {\n    channel_id: string;\n    name: string;\n    author_uid: string;\n    description: string;\n    members_uids: string[];\n    date: number;\n    \n    constructor(obj?: any) {\n        this.channel_id = obj && obj.channel_id ? obj.channel_id : '';\n        this.name = obj && obj.name ? obj.name : '';\n        this.author_uid = obj && obj.author_uid ? obj.author_uid : '';\n        this.description = obj && obj.description ? obj.description : '';\n        this.members_uids = obj && obj.members_uids ? obj.members_uids : [];\n        this.date = obj && obj.date ? obj.date : Date.now();\n    }\n\n    toJson() {\n        return {\n            channel_id: this.channel_id,\n            name: this.name,\n            author_uid: this.author_uid,\n            description: this.description,\n            members_uids: this.members_uids,\n            date: this.date\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChannelsService.html":{"url":"injectables/ChannelsService.html","title":"injectable - ChannelsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChannelsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/content/channels.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channels\n                            \n                            \n                                channels$\n                            \n                            \n                                firestore\n                            \n                            \n                                unsubChannels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addDoc\n                            \n                            \n                                    Async\n                                deleteDoc\n                            \n                            \n                                getColRef\n                            \n                            \n                                getSingleDocRef\n                            \n                            \n                                    Async\n                                initUserChannels\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                subChannels\n                            \n                            \n                                    Async\n                                updateDoc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/content/channels.service.ts:16\n                            \n                        \n\n                \n                    \n                            Create subscription\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDoc(channel: Channel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/channels.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Add doc to Firestore collection.\nThe Firestore document ID will be identical to the doc's Firebase authentication ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            Channel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDoc(channel_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/channels.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Delete doc from Firestore collection\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nFirestore doc ID of doc to be deleted\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColRef\n                        \n                    \n                \n            \n            \n                \ngetColRef()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/channels.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Get reference to Firestore \"channels\" collection\n\n\n                        \n                            Returns :     CollectionReference\n\n                        \n                            \n                                reference\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSingleDocRef\n                        \n                    \n                \n            \n            \n                \ngetSingleDocRef(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/channels.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Get reference to single doc Firestore data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DocumentReference\n\n                        \n                            \n                                reference\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initUserChannels\n                        \n                    \n                \n            \n            \n                \n                        \n                    initUserChannels(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/channels.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/channels.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Unsubscribe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subChannels\n                        \n                    \n                \n            \n            \n                \nsubChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/channels.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDoc(channel: Channel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/channels.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Update doc in Firestore collection.\nThe update will only be executed if the doc (i.e., its Firestore ID) exists in the Firestore collection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            Channel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/content/channels.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channels$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/content/channels.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/services/content/channels.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubChannels\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/services/content/channels.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject, OnDestroy } from '@angular/core';\nimport { Firestore, collection, doc, onSnapshot, updateDoc, deleteDoc } from '@angular/fire/firestore';\nimport { Subject } from 'rxjs';\nimport { CollectionReference, DocumentReference, addDoc } from 'firebase/firestore';\nimport { Channel } from '../../models/channel.class';\nimport { User } from '../../models/user.class';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChannelsService implements OnDestroy {\n  channels: Channel[] = [];\n  channels$: Subject = new Subject();\n  unsubChannels;\n  firestore: Firestore = inject(Firestore);\n\n\n  /**\n   * Create subscription\n   */\n  constructor() {\n    this.unsubChannels = this.subChannels();\n  }\n\n\n  /**\n   * Unsubscribe\n   */\n  ngOnDestroy() {\n    this.unsubChannels();\n  }\n\n\n  subChannels() {\n    return onSnapshot(this.getColRef(), (list: any) => {\n      let channels: Channel[] = [];\n      list.forEach((element: any) => {\n        channels.push(element.data());\n      });\n      this.channels = channels;\n      this.channels$.next(channels);\n    });\n  }\n\n\n  /**\n   * Get reference to Firestore \"channels\" collection\n   * @returns reference\n   */\n  getColRef(): CollectionReference {\n    return collection(this.firestore, 'channels');\n  }\n\n\n  /**\n   * Get reference to single doc Firestore data\n   * @param id - Firestore task ID\n   * @returns reference\n   */\n  getSingleDocRef(uid: string): DocumentReference {\n    return doc(this.getColRef(), uid);\n  }\n\n\n  /**\n   * Add doc to Firestore collection.\n   * The Firestore document ID will be identical to the doc's Firebase authentication ID.\n   * @param doc - doc to be added\n   */\n  async addDoc(channel: Channel): Promise {\n    await addDoc(this.getColRef(), channel.toJson())\n      .then((response: any) => {\n        channel.channel_id = response.id;\n        this.updateDoc(channel);\n      })\n      .catch((err: Error) => { console.error(err) });\n    return channel.channel_id;\n  }\n\n\n  /**\n   * Update doc in Firestore collection.\n   * The update will only be executed if the doc (i.e., its Firestore ID) exists in the Firestore collection.\n   * @param doc - doc to be updated\n   */\n  async updateDoc(channel: Channel) {\n    if (channel.channel_id) {\n      const docRef = this.getSingleDocRef(channel.channel_id);\n      await updateDoc(docRef, channel.toJson())\n        .catch((err: Error) => { console.error(err) });\n    }\n  }\n\n\n  /**\n   * Delete doc from Firestore collection\n   * @param channel_id - Firestore doc ID of doc to be deleted\n   */\n  async deleteDoc(channel_id: string) {\n    const docRef = this.getSingleDocRef(channel_id);\n    await deleteDoc(docRef)\n      .catch((err: Error) => { console.error(err) });\n  }\n\n\n  async initUserChannels(user: User) {\n    const selfChannel = new Channel({\n      'name': user.name,\n      'author_uid': user.uid,\n      'description': 'Benutze diesen Kanal für deine eigenen Notizen und Uploads.',\n      'members_uids': [user.uid]\n    });\n    await this.addDoc(selfChannel)\n      .catch((err: Error) => { console.error(err) });\n    // SUGGESTION: Add User to collective \"Team\" Channel?\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectMessageComponent.html":{"url":"components/DirectMessageComponent.html","title":"component - DirectMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DirectMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/direct-message/direct-message.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-direct-message\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                MessageBoxComponent\n                            PickerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./direct-message.component.html\n            \n\n\n\n            \n                styleUrl\n                ./direct-message.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emojiPicker\n                            \n                            \n                                online\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/direct-message/direct-message.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openUserProfile\n                        \n                    \n                \n            \n            \n                \nopenUserProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/direct-message/direct-message.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emojiPicker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/direct-message/direct-message.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        online\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/direct-message/direct-message.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { PickerComponent } from '@ctrl/ngx-emoji-mart';\nimport { MessageBoxComponent } from '../message-box/message-box.component';\nimport { CommonModule } from '@angular/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UserProfileCardComponent } from '../../user-profile-card/user-profile-card.component';\n\n@Component({\n  selector: 'app-direct-message',\n  standalone: true,\n  templateUrl: './direct-message.component.html',\n  styleUrl: './direct-message.component.scss',\n  imports: [CommonModule, MessageBoxComponent, PickerComponent],\n})\nexport class DirectMessageComponent {\n  constructor(private dialog: MatDialog) {}\n\n  online = true;\n  emojiPicker = false;\n\n  openUserProfile(): void {\n    this.dialog.open(UserProfileCardComponent);\n  }\n}\n\n    \n\n    \n        \n  \n    \n        \n      \n      \n    \n    Noah Braun\n        \n\n  \n  \n    \n      \n        \n          \n        \n        Noah Braun\n      \n      \n        Diese Unterhaltung findet nur zwischen &#64;Sofia Müllerund\n        dir statt.\n      \n    \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Noah Braun                                                        Noah Braun                    Diese Unterhaltung findet nur zwischen @Sofia Müllerund        dir statt.                  '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DirectMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditChannelComponent.html":{"url":"components/EditChannelComponent.html","title":"component - EditChannelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditChannelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-channel/edit-channel.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-channel\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./edit-channel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./edit-channel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channelName\n                            \n                            \n                                editDescriptionMode\n                            \n                            \n                                editMode\n                            \n                            \n                                editName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeChannel\n                            \n                            \n                                saveChanges\n                            \n                            \n                                saveDescriptionChanges\n                            \n                            \n                                saveNameChanges\n                            \n                            \n                                toggleEditDescriptionMode\n                            \n                            \n                                toggleEditMode\n                            \n                            \n                                toggleEditName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-channel/edit-channel.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeChannel\n                        \n                    \n                \n            \n            \n                \ncloseChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/edit-channel/edit-channel.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChanges\n                        \n                    \n                \n            \n            \n                \nsaveChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/edit-channel/edit-channel.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveDescriptionChanges\n                        \n                    \n                \n            \n            \n                \nsaveDescriptionChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/edit-channel/edit-channel.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveNameChanges\n                        \n                    \n                \n            \n            \n                \nsaveNameChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/edit-channel/edit-channel.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEditDescriptionMode\n                        \n                    \n                \n            \n            \n                \ntoggleEditDescriptionMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/edit-channel/edit-channel.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEditMode\n                        \n                    \n                \n            \n            \n                \ntoggleEditMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/edit-channel/edit-channel.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEditName\n                        \n                    \n                \n            \n            \n                \ntoggleEditName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/edit-channel/edit-channel.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Entwicklerteam'\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-channel/edit-channel.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editDescriptionMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-channel/edit-channel.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-channel/edit-channel.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-channel/edit-channel.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogRef } from '@angular/material/dialog';\n@Component({\n  selector: 'app-edit-channel',\n  standalone: true,\n  imports: [FormsModule, CommonModule,],\n  templateUrl: './edit-channel.component.html',\n  styleUrl: './edit-channel.component.scss',\n})\nexport class EditChannelComponent {\n  constructor(private dialogRef: MatDialogRef) { }\n  editMode: boolean = false;\n  editDescriptionMode: boolean = false;\n  editName: boolean = false;\n  channelName: string = 'Entwicklerteam';\n\n  toggleEditMode() {\n    this.editMode = !this.editMode;\n  }\n\n  saveChanges() {\n    this.editMode = false;\n  }\n\n  toggleEditDescriptionMode() {\n    this.editDescriptionMode = !this.editDescriptionMode;\n  }\n  toggleEditName() {\n    this.editName = !this.editName;\n  }\n\n  saveNameChanges() {\n    this.editName = false;\n  }\n\n  saveDescriptionChanges() {\n    this.editDescriptionMode = false;\n  }\n\n  closeChannel(){\n    this.dialogRef.close();\n  }\n\n}\n\n    \n\n    \n        \n  \n    # Entwicklerteam\n    \n      close\n    \n  \n  \n    \n      \n        Channel name\n        # Entwicklerteam\n      \n      \n        Bearbeiten\n      \n      \n        Speichern\n      \n    \n    \n      \n    \n  \n  \n    \n      \n        Beschreibung\n        \n          Dieser Channel ist für alles rund um #dfsdf vorgesehen. Hier kannst du\n          zusammen mit deinem Team Meetings abhalten, Dokumente teilen und\n          Entscheidungen treffen.\n        \n      \n      \n        Bearbeiten\n      \n      \n        Speichern\n      \n    \n    \n    \n      \n    \n    \n      Erstellt von\n      Noah Braun\n    \n  \n  \n    Channel verlassen\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      # Entwicklerteam          close                          Channel name        # Entwicklerteam                    Bearbeiten                    Speichern                                              Beschreibung                  Dieser Channel ist für alles rund um #dfsdf vorgesehen. Hier kannst du          zusammen mit deinem Team Meetings abhalten, Dokumente teilen und          Entscheidungen treffen.                            Bearbeiten                    Speichern                                      Erstellt von      Noah Braun            Channel verlassen  '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditChannelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditMainUserProfileCardComponent.html":{"url":"components/EditMainUserProfileCardComponent.html","title":"component - EditMainUserProfileCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditMainUserProfileCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-user/edit-main-user-profile-card/edit-main-user-profile-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-main-user-profile-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./edit-main-user-profile-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./edit-main-user-profile-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                mainUser\n                            \n                            \n                                    Public\n                                userData\n                            \n                            \n                                    Private\n                                usersService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openPickAvatar\n                            \n                            \n                                    Async\n                                saveMainUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialogAvatarRef: MatDialogRef, dialog: MatDialog, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-user/edit-main-user-profile-card/edit-main-user-profile-card.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogAvatarRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-user/edit-main-user-profile-card/edit-main-user-profile-card.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-user/edit-main-user-profile-card/edit-main-user-profile-card.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPickAvatar\n                        \n                    \n                \n            \n            \n                \nopenPickAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-user/edit-main-user-profile-card/edit-main-user-profile-card.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveMainUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveMainUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-user/edit-main-user-profile-card/edit-main-user-profile-card.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/edit-main-user-profile-card/edit-main-user-profile-card.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/edit-main-user-profile-card/edit-main-user-profile-card.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mainUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User\n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/edit-main-user-profile-card/edit-main-user-profile-card.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User\n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/edit-main-user-profile-card/edit-main-user-profile-card.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/edit-main-user-profile-card/edit-main-user-profile-card.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, Inject } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { User } from '../../../models/user.class';\nimport { EditMainUserAvatarComponent } from '../edit-main-user-avatar/edit-main-user-avatar.component';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { UsersService } from '../../../services/users.service';\n\n@Component({\n    selector: 'app-edit-main-user-profile-card',\n    standalone: true,\n    imports: [RouterLink, FormsModule],\n    templateUrl: './edit-main-user-profile-card.component.html',\n    styleUrl: './edit-main-user-profile-card.component.scss'\n})\nexport class EditMainUserProfileCardComponent {\n    public mainUser: User = new User;\n    public userData: User = new User;   \n    private usersService = inject(UsersService);\n\n    constructor (\n        private dialogRef: MatDialogRef,\n        private dialogAvatarRef: MatDialogRef,\n        public dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {\n        console.log('Edit MainUser Card..constr. data:', data);\n    \n        this.mainUser = this.data.mainUser;\n        this.userData.name = this.data.mainUser.name;\n        this.userData.email = this.data.mainUser.email;\n    }\n    \n    closeDialog() {\n        this.dialogRef.close();\n    }\n    \n    async saveMainUser() {\n        if (this.userData.email !== this.mainUser.email) {\n            console.log('Update email necessary', this.mainUser);\n        }\n        console.log('mainUser: ', this.mainUser);\n        this.mainUser.name = this.userData.name;\n        this.mainUser.email = this.userData.email;\n        await this.usersService.updateUser(this.mainUser);\n        this.closeDialog();\n    }\n    \n    onSubmit(form: NgForm) {\n        if (form.submitted && form.valid) { this.saveMainUser(); }\n    }\n\n    openPickAvatar() {\n        this.dialogAvatarRef = this.dialog.open(EditMainUserAvatarComponent, {\n            data: {\n                mainUser: this.mainUser\n            }\n        });\n      \n        this.dialogAvatarRef.afterOpened().subscribe( () => {\n            this.closeDialog();\n        });\n      \n        this.dialogAvatarRef.afterClosed().subscribe(result => {\n            console.log('The dialog \"EditMainUserAvatar\" was Closed.', result);\n        });\n    }\n    \n}\n\n    \n\n    \n        \n    \n        Dein Profil Bearbeiten\n        \n            \n                \n            \n        \n    \n    \n        \n    \n    \n        \n     -->\n    \n        \n            \n                \n                    \n                    Vollständiger Name\n                \n                \n                    \n                \n                @if(name.touched && !name.valid)\n                {\n                    Bitte schreiben Sie einen Namen.\n                }\n                \n            \n                \n                    \n                    E-Mail-Adresse\n                \n                \n                    \n                \n                @if((email.touched || editMainUser.submitted) && !email.valid)\n                {\n                    Diese E-Mail-Adresse ist leider ungültig.\n                }\n            \n            \n                Abbrechen\n                Speichern\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Dein Profil Bearbeiten                                                                                             -->                                                                                Vollständiger Name                                                                                    @if(name.touched && !name.valid)                {                    Bitte schreiben Sie einen Namen.                }                                                                                    E-Mail-Adresse                                                                                    @if((email.touched || editMainUser.submitted) && !email.valid)                {                    Diese E-Mail-Adresse ist leider ungültig.                }                                        Abbrechen                Speichern                        '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditMainUserProfileCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserProfileCardComponent.html":{"url":"components/EditUserProfileCardComponent.html","title":"component - EditUserProfileCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditUserProfileCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-user-profile-card/edit-user-profile-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user-profile-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./edit-user-profile-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./edit-user-profile-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n@Component({\n  selector: 'app-edit-user-profile-card',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './edit-user-profile-card.component.html',\n  styleUrl: './edit-user-profile-card.component.scss'\n})\nexport class EditUserProfileCardComponent {\n\n}\n\n    \n\n    \n        \n  \n    Dein Profil Bearbeiten\n    \n      \n        \n      \n    \n  \n  \n    \n  \n  \n    \n      \n        \n        Vollständiger Name\n      \n      \n        \n      \n    \n\n    \n      \n        \n        E-Mail-Adresse\n      \n      \n    \n    \n      \n        Abbrechen\n      \n\n      Speichern\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Dein Profil Bearbeiten                                                                  Vollständiger Name                                                        E-Mail-Adresse                                  Abbrechen            Speichern      '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserProfileCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmojiService.html":{"url":"injectables/EmojiService.html","title":"injectable - EmojiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmojiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/emoji-service/emoji-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emojis\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEmoji\n                            \n                            \n                                getEmojis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEmoji\n                        \n                    \n                \n            \n            \n                \naddEmoji(emoji: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/emoji-service/emoji-service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emoji\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmojis\n                        \n                    \n                \n            \n            \n                \ngetEmojis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/emoji-service/emoji-service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     {}\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emojis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/emoji-service/emoji-service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmojiService {\n  private emojis: { unified: string, native: string, count: number }[] = [];\n\n  getEmojis() {\n    return this.emojis;\n  }\n\n  addEmoji(emoji: { unified: string, native: string }) {\n    let isExist = this.emojis.find(e => e.unified === emoji.unified);\n\n    if (isExist) {\n      isExist.count++;\n    } else {\n      this.emojis.push({\n        unified: emoji.unified,\n        native: emoji.native,\n        count: 1\n      });\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpandableButtonComponent.html":{"url":"components/ExpandableButtonComponent.html","title":"component - ExpandableButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExpandableButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/expandable-button/expandable-button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: MatDialogRef, useValue: {}\n}\n                \n            \n\n\n            \n                selector\n                app-expandable-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expandable-button.component.html\n            \n\n\n\n            \n                styleUrl\n                ./expandable-button.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                isMenuExpanded\n                            \n                            \n                                online\n                            \n                            \n                                showBtn\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onAddChannelClick\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user_id\n                            \n                            \n                                userChannels\n                            \n                            \n                                icon\n                            \n                            \n                                showBtn\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/expandable-button/expandable-button.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user_id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/expandable-button/expandable-button.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userChannels\n                    \n                \n                \n                    \n                        Type :         Channel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/expandable-button/expandable-button.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/expandable-button/expandable-button.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showBtn\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/expandable-button/expandable-button.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/expandable-button/expandable-button.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onAddChannelClick\n                        \n                    \n                \n            \n            \n                \nonAddChannelClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/expandable-button/expandable-button.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/expandable-button/expandable-button.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/expandable-button/expandable-button.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuExpanded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/expandable-button/expandable-button.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        online\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/expandable-button/expandable-button.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showBtn\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/expandable-button/expandable-button.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/expandable-button/expandable-button.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, input } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { RouterLink } from '@angular/router';\nimport { AddChannelComponent } from '../../add-channel/add-channel.component';\nimport { Channel } from '../../../models/channel.class';\n\n@Component({\n  selector: 'app-expandable-button',\n  standalone: true,\n  imports: [CommonModule, RouterLink],\n  providers: [\n    {\n      provide: MatDialogRef,\n      useValue: {}\n    }\n  ],\n  templateUrl: './expandable-button.component.html',\n  styleUrl: './expandable-button.component.scss',\n})\nexport class ExpandableButtonComponent {\n  isMenuExpanded = true;\n  title = input.required();\n  icon = input.required();\n  showBtn = input.required();\n  online = true;\n  @Input() user_id: string = '';\n  @Input() userChannels: Channel[] = [];\n\n  constructor(\n    private dialog: MatDialog,\n  ) { }\n\n  toggleMenu() {\n    this.isMenuExpanded = !this.isMenuExpanded;\n  }\n\n  onAddChannelClick(): void {\n    const dialogRef = this.dialog.open(AddChannelComponent);\n    dialogRef.componentInstance.channel.author_uid = this.user_id;\n    dialogRef.componentInstance.channel.members_uids.push(this.user_id);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            arrow_drop_down\n            arrow_right -->\n            \n                {{ icon() }}\n                {{ title() }}\n            \n        \n        \n            add\n        \n    \n\n    \n        \n            \n                @for (channel of userChannels; track channel) {\n                    \n                        # {{channel.name}}\n                    \n                }\n            \n            \n                add_circle_outline\n                Channel hinzufügen\n            \n        \n        \n            \n                \n                    \n                        \n                            \n                            \n                        \n                        Gast (Du)\n                    \n                \n                \n                    \n                        \n                            \n                            \n                        \n                        Sofia Müller\n                    \n                \n                \n                    \n                        \n                            \n                            \n                        \n                        Sofia Müller\n                    \n                \n                \n                    \n                        \n                            \n                            \n                        \n                        Sofia Müller\n                    \n                \n                \n                    \n                        \n                            \n                            \n                        \n                        Sofia Müller\n                    \n                \n                \n                    \n                        \n                            \n                            \n                        \n                        Noah Braun\n                    \n                \n                \n                    \n                        \n                            \n                            \n                        \n                        Noah Braun\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        arrow_drop_down            arrow_right -->                            {{ icon() }}                {{ title() }}                                        add                                                    @for (channel of userChannels; track channel) {                                            # {{channel.name}}                                    }                                        add_circle_outline                Channel hinzufügen                                                                                                                                                                                                            Gast (Du)                                                                                                                                                                                                        Sofia Müller                                                                                                                                                                                                        Sofia Müller                                                                                                                                                                                                        Sofia Müller                                                                                                                                                                                                        Sofia Müller                                                                                                                                                                                                        Noah Braun                                                                                                                                                                                                        Noah Braun                                                            '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpandableButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: MatDialogRef, useValue: {}\n}\n                \n            \n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                LogOutCardComponent\n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activityService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openUserLogoutCard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mainUser\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog, router: Router, authService: AuthService, usersService: UsersService, activityService: ActivityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/header/header.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mainUser\n                    \n                \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User\n                    \n                \n                        \n                            \n                                    Defined in src/app/home/header/header.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openUserLogoutCard\n                        \n                    \n                \n            \n            \n                \nopenUserLogoutCard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/header/header.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activityService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivityService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/header/header.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/header/header.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/header/header.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { LogOutCardComponent } from '../../main-user/log-out-card/log-out-card.component';\nimport { MatDialogModule, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\nimport { UsersService } from '../../../services/users.service';\nimport { ActivityService } from '../../../services/activity.service';\nimport { User } from '../../../models/user.class';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [\n    CommonModule,\n    LogOutCardComponent,\n    MatDialogModule\n  ],\n  providers: [\n     {\n       provide: MatDialogRef,\n       useValue: {}\n     }\n  ],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n  @Input() mainUser: User = new User;\n\n  constructor(\n    public dialogRef: MatDialogRef, \n    public dialog: MatDialog, \n    private router: Router,\n    private authService: AuthService,\n    private usersService: UsersService,\n    public activityService: ActivityService\n  ) {}\n\n  openUserLogoutCard(): void {\n    this.dialogRef = this.dialog.open(LogOutCardComponent, {\n      data: {\n        mainUser: this.mainUser\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog \"LogOutCard\" was Closed.', result); // remove later\n      if (result == 'logout') {\n        const user = new User(this.mainUser);\n        user.lastActivity = -1;\n        this.usersService.updateUser(user);\n        this.authService.logOut();\n        this.router.navigate(['auth/logIn']);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        \n     -->\n    \n    \n        \n            \n            \n                \n            \n        \n    \n    \n        {{ mainUser.name || '...' }}\n        \n            \n            \n        \n        \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 -->                                                                                            {{ mainUser.name || \\'...\\' }}                                                                        '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                                HeaderComponent\n                                NavigationComponent\n                                MainChatComponent\n                                ThreadComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activityService\n                            \n                            \n                                    Private\n                                authService\n                            \n                            \n                                    Private\n                                authSub\n                            \n                            \n                                    Private\n                                channelsService\n                            \n                            \n                                    Private\n                                channelsSub\n                            \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Public\n                                showNav\n                            \n                            \n                                    Public\n                                userChannels\n                            \n                            \n                                    Public\n                                users\n                            \n                            \n                                    Private\n                                usersService\n                            \n                            \n                                    Private\n                                usersSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onShowNavigation\n                            \n                            \n                                setUserChannels\n                            \n                            \n                                subAuth\n                            \n                            \n                                subChannels\n                            \n                            \n                                subUsers\n                            \n                            \n                                syncCurrentUser\n                            \n                            \n                                syncUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onShowNavigation\n                        \n                    \n                \n            \n            \n                \nonShowNavigation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserChannels\n                        \n                    \n                \n            \n            \n                \nsetUserChannels(channels: Channel[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channels\n                                            \n                                                            Channel[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subAuth\n                        \n                    \n                \n            \n            \n                \nsubAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Subscription\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subChannels\n                        \n                    \n                \n            \n            \n                \nsubChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Subscription\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subUsers\n                        \n                    \n                \n            \n            \n                \nsubUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Subscription\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncCurrentUser\n                        \n                    \n                \n            \n            \n                \nsyncCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncUsers\n                        \n                    \n                \n            \n            \n                \nsyncUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activityService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivityService)\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channelsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChannelsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channelsSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showNav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterOutlet } from '@angular/router';\n\nimport { HeaderComponent } from './header/header.component';\nimport { ThreadComponent } from '../components/thread/thread.component';\nimport { NavigationComponent } from '../components/navigation/navigation.component';\n\nimport { AuthService } from '../../services/auth.service';\nimport { UsersService } from '../../services/users.service';\nimport { User } from '../../models/user.class';\nimport { ActivityService } from '../../services/activity.service';\nimport { Subscription } from 'rxjs';\nimport { MainChatComponent } from '../components/main-chat/main-chat.component';\nimport { ChannelsService } from '../../services/content/channels.service';\nimport { Channel } from '../../models/channel.class';\n\n@Component({\n    selector: 'app-home',\n    standalone: true,\n    templateUrl: './home.component.html',\n    styleUrl: './home.component.scss',\n    imports: [\n        CommonModule,\n        RouterOutlet,\n        HeaderComponent,\n        NavigationComponent,\n        MainChatComponent,\n        ThreadComponent\n    ]\n})\nexport class HomeComponent {\n    private authService = inject(AuthService);\n    private usersService = inject(UsersService);\n    private channelsService = inject(ChannelsService);\n    public activityService = inject(ActivityService);\n\n    private authSub = new Subscription();\n    private usersSub = new Subscription();\n    private channelsSub = new Subscription();\n    public currentUser = new User();\n    public users: User[] = [];\n    public userChannels: Channel[] = [];\n    public showNav = true;\n\n    ngOnInit(): void {\n        this.syncCurrentUser();\n        this.authSub = this.subAuth();\n    }\n\n    ngOnDestroy(): void {\n        this.authSub.unsubscribe();\n        this.usersSub.unsubscribe();\n        this.channelsSub.unsubscribe();\n    }\n\n    subAuth(): Subscription {\n        return this.authService.user$.subscribe((user) => {\n            if (user && !(this.currentUser.uid.length > 0)) {\n                this.syncUsers();\n                this.usersSub = this.subUsers();\n                this.channelsSub = this.subChannels();\n            }\n        });\n    }\n\n    subUsers(): Subscription {\n        return this.usersService.users$.subscribe(() => {\n            this.syncCurrentUser();\n            this.syncUsers();\n        });\n    }\n\n    subChannels(): Subscription {\n        return this.channelsService.channels$.subscribe(channels => this.setUserChannels(channels));\n    }\n\n    syncUsers(): void {\n        this.users = this.usersService.users;\n    }\n\n    syncCurrentUser(): void {\n        const uid = this.authService.getCurrentUid();\n        if (uid) {\n            this.currentUser = this.usersService.getUserByUid(uid);\n            if(this.userChannels.length == 0) {this.setUserChannels(this.channelsService.channels)}\n         }\n    }\n\n    setUserChannels(channels: Channel[]): void {\n        this.userChannels = channels.filter(c => c.members_uids.includes(this.currentUser.uid));\n    }\n\n    onShowNavigation() {\n        this.showNav = !this.showNav;\n    }\n\n\n}\n\n    \n\n    \n        \n    {{ showNav ? 'Workspace-Menü schließen' : 'Workspace-Menü öffen'}}\n    \n    \n\n\n\n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ showNav ? \\'Workspace-Menü schließen\\' : \\'Workspace-Menü öffen\\'}}                            '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImpressComponent.html":{"url":"components/ImpressComponent.html","title":"component - ImpressComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ImpressComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/legal/impress/impress.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-impress\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./impress.component.html\n            \n\n\n\n            \n                styleUrl\n                ./impress.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                historyBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/legal/impress/impress.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        historyBack\n                        \n                    \n                \n            \n            \n                \nhistoryBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/legal/impress/impress.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-impress',\n  standalone: true,\n  imports: [],\n  templateUrl: './impress.component.html',\n  styleUrl: './impress.component.scss'\n})\nexport class ImpressComponent {\n\n  constructor(\n    private location: Location,\n  ) {}\n\n  historyBack() {\n    this.location.back();\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            Impressum\n            Alexander Leitermann \n                Grünwalder Str. 69A \n                81547 München\n            \n        \n        \n            Kontakt\n            E-Mail: kontakt&commat;leitermann.online\n        \n        \n    \n     -->\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Impressum            Alexander Leitermann                 Grünwalder Str. 69A                 81547 München                                        Kontakt            E-Mail: kontakt@leitermann.online                         -->'\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImpressComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegalFooterComponent.html":{"url":"components/LegalFooterComponent.html","title":"component - LegalFooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LegalFooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/legal-footer/legal-footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays router links to the imprint and privacy policy component.\nIt can be used as a footer.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legal-footer\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./legal-footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./legal-footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n\n/**\n * This component displays router links to the imprint and privacy policy component.\n * It can be used as a footer.\n */\n@Component({\n  selector: 'app-legal-footer',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './legal-footer.component.html',\n  styleUrl: './legal-footer.component.scss'\n})\nexport class LegalFooterComponent {\n\n}\n\n    \n\n    \n        \n    Impressum\n    Datenschutz\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Impressum    Datenschutz'\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegalFooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogOutCardComponent.html":{"url":"components/LogOutCardComponent.html","title":"component - LogOutCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogOutCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-user/log-out-card/log-out-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user-log-out-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./log-out-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./log-out-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                dialogUserRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logMeOut\n                            \n                            \n                                openImpress\n                            \n                            \n                                openPriPol\n                            \n                            \n                                openProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, dialogRef: MatDialogRef, dialogUserRef: MatDialogRef, dialog: MatDialog, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-user/log-out-card/log-out-card.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogUserRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logMeOut\n                        \n                    \n                \n            \n            \n                \nlogMeOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-user/log-out-card/log-out-card.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openImpress\n                        \n                    \n                \n            \n            \n                \nopenImpress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-user/log-out-card/log-out-card.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPriPol\n                        \n                    \n                \n            \n            \n                \nopenPriPol()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-user/log-out-card/log-out-card.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProfile\n                        \n                    \n                \n            \n            \n                \nopenProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-user/log-out-card/log-out-card.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/log-out-card/log-out-card.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/log-out-card/log-out-card.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/log-out-card/log-out-card.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogUserRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/log-out-card/log-out-card.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { RouterLink, Router } from '@angular/router';\nimport { MainUserProfileCardComponent } from '../main-user-profile-card/main-user-profile-card.component';\n\n\n@Component({\n  selector: 'app-edit-user-log-out-card',\n  standalone: true,\n  imports: [\n    RouterLink,\n    MatDialogModule\n  ],\n  providers: [\n    //  {\n    //    provide: MatDialogRef,\n    //    useValue: []\n    //  }\n  ],\n  templateUrl: './log-out-card.component.html',\n  styleUrl: './log-out-card.component.scss'\n})\nexport class LogOutCardComponent {\n  constructor(\n    private router: Router,\n    public dialogRef: MatDialogRef,\n    public dialogUserRef: MatDialogRef,\n    public dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) {\n    console.log('LogOut-Card..constr. data:', data);\n  }\n\n  openProfile() {\n    this.dialogUserRef = this.dialog.open(MainUserProfileCardComponent, {\n      data: {\n        mainUser: this.data.mainUser\n      }\n    });\n\n    this.dialogUserRef.afterClosed().subscribe(result => {\n      console.log('The dialog \"MainUserProfileCard\" was Closed.', result); // remove later\n    });\n  }\n\n  logMeOut() {\n    this.dialogRef.close('logout');\n  }\n  \n  openImpress() {\n    this.router.navigate(['impress']);\n    this.dialogRef.close();\n  }\n  \n  openPriPol() {\n    this.router.navigate(['privacypolicy']);\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Profil\n    \n    \n      Log out\n    \n    \n      Impressum\n    \n    \n      Datenschutz\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Profil              Log out              Impressum              Datenschutz      '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogOutCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the login page with the login form at the center.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterLink\n                                LegalFooterComponent\n                                ToastNotificationComponent\n                                AnimationIntroComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authError\n                            \n                            \n                                    Private\n                                authService\n                            \n                            \n                                loading\n                            \n                            \n                                redirectTo\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                showToast\n                            \n                            \n                                userData\n                            \n                            \n                                    Private\n                                usersService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterToast\n                            \n                            \n                                constructGuestUser\n                            \n                            \n                                constructUserFromGoogleAuth\n                            \n                            \n                                getAuthError\n                            \n                            \n                                    Async\n                                handleExternalUserRegistrationStatus\n                            \n                            \n                                logIn\n                            \n                            \n                                logInAsGuest\n                            \n                            \n                                logInWithGoogle\n                            \n                            \n                                onError\n                            \n                            \n                                onGoogleLogIn\n                            \n                            \n                                onGuestLogIn\n                            \n                            \n                                onLogIn\n                            \n                            \n                                onSubmit\n                            \n                            \n                                redirect\n                            \n                            \n                                resetAuthError\n                            \n                            \n                                setAuthError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterToast\n                        \n                    \n                \n            \n            \n                \nafterToast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:215\n                        \n                    \n\n\n            \n                \n                        This function is called when the toast notification timeout has expired.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        constructGuestUser\n                        \n                    \n                \n            \n            \n                \nconstructGuestUser(authData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:164\n                        \n                    \n\n\n            \n                \n                        This function creates a User() from the guest log in response.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nlog in response data\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                new User() object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        constructUserFromGoogleAuth\n                        \n                    \n                \n            \n            \n                \nconstructUserFromGoogleAuth(authData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:104\n                        \n                    \n\n\n            \n                \n                        This function creates a User() from the Google log in response.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nlog in response data\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                new User() object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthError\n                        \n                    \n                \n            \n            \n                \ngetAuthError(response?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:187\n                        \n                    \n\n\n            \n                \n                        This function translates the system's error messages to German error messages\nto be displayed to the user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nerror from log in response\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                German error message for the UI\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleExternalUserRegistrationStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleExternalUserRegistrationStatus(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:119\n                        \n                    \n\n\n            \n                \n                        This function handles the registration status of external users.\nGoogle users and guest users are considered external users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User() object to be checked\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:51\n                        \n                    \n\n\n            \n                \n                        This function logs in the user via authentication service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logInAsGuest\n                        \n                    \n                \n            \n            \n                \nlogInAsGuest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:134\n                        \n                    \n\n\n            \n                \n                        This function calls anonymous guest log in.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logInWithGoogle\n                        \n                    \n                \n            \n            \n                \nlogInWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:74\n                        \n                    \n\n\n            \n                \n                        This function calls Google log in via authentication service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError(err: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:65\n                        \n                    \n\n\n            \n                \n                        This function handles system errors/exceptions during login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nerror\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGoogleLogIn\n                        \n                    \n                \n            \n            \n                \nonGoogleLogIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:87\n                        \n                    \n\n\n            \n                \n                        This function handles Google log in. In doing so, it checks whether the user has logged in before.\nWhen a Google user logs in for the first time, a new user is created in the database.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGuestLogIn\n                        \n                    \n                \n            \n            \n                \nonGuestLogIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:147\n                        \n                    \n\n\n            \n                \n                        This function handles anonymous guest log in.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogIn\n                        \n                    \n                \n            \n            \n                \nonLogIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:207\n                        \n                    \n\n\n            \n                \n                        This function handles the log in.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:43\n                        \n                    \n\n\n            \n                \n                        This function is triggered by the login form submission.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nlogin form\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirect\n                        \n                    \n                \n            \n            \n                \nredirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:224\n                        \n                    \n\n\n            \n                \n                        This function redirects the user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetAuthError\n                        \n                    \n                \n            \n            \n                \nresetAuthError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:199\n                        \n                    \n\n\n            \n                \n                        This function removes the log in error message by resetting it.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAuthError\n                        \n                    \n                \n            \n            \n                \nsetAuthError(response?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:176\n                        \n                    \n\n\n            \n                \n                        This function sets the \"authError\" property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nerror from log in response\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authError\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"home\" | \"avatar\"\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    uid: '',\n    name: '',\n    email: '',\n    password: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { RouterLink, Router } from '@angular/router';\nimport { LegalFooterComponent } from '../legal-footer/legal-footer.component';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastNotificationComponent } from '../toast-notification/toast-notification.component';\nimport { AnimationIntroComponent } from '../../animation-intro/animation-intro.component';\nimport { UsersService } from '../../../services/users.service';\nimport { User } from '../../../models/user.class';\n\n\n/**\n * This component displays the login page with the login form at the center.\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterLink, LegalFooterComponent, ToastNotificationComponent, AnimationIntroComponent],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n  private authService = inject(AuthService);\n  private usersService = inject(UsersService);\n  private router = inject(Router)\n  userData = {\n    uid: '',\n    name: '',\n    email: '',\n    password: ''\n  }\n  authError: string | null = null;\n  showToast: boolean = false;\n  loading: boolean = false;\n  redirectTo: 'home' | 'avatar' = 'home';\n\n\n  /**\n   * This function is triggered by the login form submission.\n   * @param form - login form\n   */\n  onSubmit(form: NgForm) {\n    if (form.submitted && form.valid) { this.logIn() }\n  }\n\n\n  /**\n   * This function logs in the user via authentication service.\n   */\n  logIn() {\n    this.loading = true;\n    this.showToast = true;\n    this.authService.logIn(this.userData.email, this.userData.password).subscribe({\n      next: () => this.onLogIn(),\n      error: (err) => this.onError(err)\n    });\n  }\n\n\n  /**\n   * This function handles system errors/exceptions during login.\n   * @param err - error\n   */\n  onError(err: Error) {\n    this.setAuthError(err.toString());\n    this.loading = false;\n  }\n\n\n  /**\n   * This function calls Google log in via authentication service.\n   */\n  logInWithGoogle() {\n    this.loading = true;\n    this.authService.logInWithGoogle().subscribe({\n      next: () => this.onGoogleLogIn(),\n      error: (err) => this.onError(err)\n    });\n  }\n\n\n  /**\n   * This function handles Google log in. In doing so, it checks whether the user has logged in before.\n   * When a Google user logs in for the first time, a new user is created in the database.\n   */\n  onGoogleLogIn() {\n    this.showToast = true;\n    const userRef = this.authService.getCurrent();\n    if (userRef) {\n      const userObj = this.constructUserFromGoogleAuth(userRef);\n      this.handleExternalUserRegistrationStatus(userObj)\n        .then(() => this.onLogIn())\n        .catch((err) => this.onError(err));\n    }\n  }\n\n\n  /**\n   * This function creates a User() from the Google log in response.\n   * @param authData - log in response data\n   * @returns new User() object\n   */\n  constructUserFromGoogleAuth(authData: any): User {\n    return new User({\n      uid: authData.uid,\n      name: authData.displayName,\n      email: authData.email,\n      avatarSrc: authData.photoURL\n    });\n  }\n\n\n  /**\n   * This function handles the registration status of external users.\n   * Google users and guest users are considered external users.\n   * @param user User() object to be checked\n   */\n  async handleExternalUserRegistrationStatus(user: User): Promise {\n    if (this.usersService.isRegisteredUser(user.uid)) {\n      await this.usersService.updateUser(user);\n      this.redirectTo = 'home';\n    }\n    else {\n      await this.usersService.addUser(user);\n      this.redirectTo = (user.name == 'Gast' ? 'home' : 'avatar');\n    }\n  }\n\n\n  /**\n   * This function calls anonymous guest log in.\n   */\n  logInAsGuest() {\n    this.loading = true;\n    this.showToast = true;\n    this.authService.logInAsGuest().subscribe({\n      next: () => this.onGuestLogIn(),\n      error: (err) => this.onError(err)\n    });\n  }\n\n\n  /**\n   * This function handles anonymous guest log in.\n   */\n  onGuestLogIn() {\n    this.showToast = true;\n    const userRef = this.authService.getCurrent();\n    if (userRef) {\n      const userObj = this.constructGuestUser(userRef);\n      this.handleExternalUserRegistrationStatus(userObj)\n        .then(() => this.onLogIn())\n        .catch((err) => this.onError(err));\n    }\n  }\n\n\n  /**\n   * This function creates a User() from the guest log in response.\n   * @param authData - log in response data\n   * @returns new User() object\n   */\n  constructGuestUser(authData: any): User {\n    return new User({\n      uid: authData.uid,\n      name: 'Gast'\n    });\n  }\n\n\n  /**\n   * This function sets the \"authError\" property.\n   * @param response - error from log in response\n   */\n  setAuthError(response?: string) {\n    this.authError = response ? this.getAuthError(response) : this.getAuthError();\n  }\n\n\n  /**\n   * This function translates the system's error messages to German error messages\n   * to be displayed to the user.\n   * @param response - error from log in response\n   * @returns German error message for the UI\n   */\n  getAuthError(response?: string): string {\n    if (response && response.includes('auth/invalid-credential')) {\n      return 'Falsches Passwort oder E-Mail-Adresse.'\n    } else {\n      return 'Anmeldung fehlgeschlagen.'\n    }\n  }\n\n\n  /**\n   * This function removes the log in error message by resetting it.\n   */\n  resetAuthError(): void {\n    this.authError = null;\n  }\n\n\n  /**\n   * This function handles the log in.\n   */\n  onLogIn() {\n    if (!this.showToast) { this.redirect() }\n  }\n\n\n  /**\n   * This function is called when the toast notification timeout has expired.\n   */\n  afterToast() {\n    this.showToast = false;\n    this.redirect();\n  }\n\n\n  /**\n   * This function redirects the user.\n   */\n  redirect() {\n    let route = '';\n    switch (this.redirectTo) {\n      case 'home': break;\n      case 'avatar': route = 'auth/pickAvatar';\n    }\n    this.router.navigateByUrl(route);\n  }\n}\n\n    \n\n    \n        \n    \n        Anmeldung\n        Wir empfehlen dir, die E-Mail-Adresse zu nutzen, die du bei der Arbeit verwendest.\n        \n            mail\n            \n            @if((email.touched || logInForm.submitted) && !email.valid)\n            {\n                Diese E-Mail-Adresse ist leider ungültig.\n            }\n        \n        \n            lock\n            \n            @if((password.touched || logInForm.submitted) && !password.valid)\n            {\n                Bitte geben Sie ein Passwort ein.\n            }\n            @else if(logInForm.submitted && authError)\n            {{{authError}}}\n        \n        Passwort vergessen?\n        \n            \n            ODER\n            \n        \n        \n            \n            Anmelden mit Google\n        \n        \n            Anmelden\n            Gäste-Login\n        \n    \n    \n        Neu bei DABubble?\n        Konto erstellen\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Anmeldung        Wir empfehlen dir, die E-Mail-Adresse zu nutzen, die du bei der Arbeit verwendest.                    mail                        @if((email.touched || logInForm.submitted) && !email.valid)            {                Diese E-Mail-Adresse ist leider ungültig.            }                            lock                        @if((password.touched || logInForm.submitted) && !password.valid)            {                Bitte geben Sie ein Passwort ein.            }            @else if(logInForm.submitted && authError)            {{{authError}}}                Passwort vergessen?                                ODER                                                    Anmelden mit Google                            Anmelden            Gäste-Login                        Neu bei DABubble?        Konto erstellen        '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainUserProfileCardComponent.html":{"url":"components/MainUserProfileCardComponent.html","title":"component - MainUserProfileCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainUserProfileCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-user/main-user-profile-card/main-user-profile-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-user-profile-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-user-profile-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-user-profile-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activityService\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                dialogUserRef\n                            \n                            \n                                    Public\n                                mainUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                openEditAvatar\n                            \n                            \n                                openEditProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialogAvatarRef: MatDialogRef, dialogUserRef: MatDialogRef, activityService: ActivityService, dialog: MatDialog, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-user/main-user-profile-card/main-user-profile-card.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogAvatarRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogUserRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activityService\n                                                  \n                                                        \n                                                                        ActivityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-user/main-user-profile-card/main-user-profile-card.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditAvatar\n                        \n                    \n                \n            \n            \n                \nopenEditAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-user/main-user-profile-card/main-user-profile-card.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditProfile\n                        \n                    \n                \n            \n            \n                \nopenEditProfile(profile: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-user/main-user-profile-card/main-user-profile-card.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                profile\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activityService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivityService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/main-user-profile-card/main-user-profile-card.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/main-user-profile-card/main-user-profile-card.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/main-user-profile-card/main-user-profile-card.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogUserRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/main-user-profile-card/main-user-profile-card.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mainUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User\n                    \n                \n                    \n                        \n                                Defined in src/app/main-user/main-user-profile-card/main-user-profile-card.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, Input } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { User } from '../../../models/user.class';\nimport { EditMainUserProfileCardComponent } from '../edit-main-user-profile-card/edit-main-user-profile-card.component';\nimport { EditMainUserAvatarComponent } from '../../main-user/edit-main-user-avatar/edit-main-user-avatar.component';\nimport { ActivityService } from '../../../services/activity.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'app-main-user-profile-card',\n    standalone: true,\n    imports: [\n        CommonModule,\n        RouterLink\n    ],\n    templateUrl: './main-user-profile-card.component.html',\n    styleUrl: './main-user-profile-card.component.scss'\n})\nexport class MainUserProfileCardComponent {\n    public mainUser: User = new User;\n\n    constructor (\n        private dialogRef: MatDialogRef,\n        private dialogAvatarRef: MatDialogRef,\n        public dialogUserRef: MatDialogRef,\n        public activityService: ActivityService,\n        public dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {\n        console.log('MainUser Profile-Card..constr. data:', data);\n        \n        this.mainUser = this.data.mainUser;\n    }\n\n    closeDialog() {\n        this.dialogRef.close();\n    }\n\n    openEditProfile(profile: User) {\n        this.dialogUserRef = this.dialog.open(EditMainUserProfileCardComponent, {\n            data: {\n                mainUser: this.mainUser\n            }\n        });\n\n        this.dialogUserRef.afterOpened().subscribe( () => {\n            this.closeDialog();\n        });\n\n        this.dialogUserRef.afterClosed().subscribe(result => {\n            console.log('The dialog \"EditMainUserProfileCard\" was Closed.', result);\n        });\n    }\n\n    openEditAvatar() {\n        this.dialogAvatarRef = this.dialog.open(EditMainUserAvatarComponent, {\n            data: {\n                mainUser: this.mainUser\n            }\n        });\n\n        this.dialogAvatarRef.afterOpened().subscribe( () => {\n            this.closeDialog();\n        });\n\n        this.dialogAvatarRef.afterClosed().subscribe(result => {\n            console.log('The dialog \"EditMainUserAvatar\" was Closed.', result);\n        });\n    }\n\n\n\n}\n\n    \n\n    \n        \n    \n        Profil\n        \n            \n                \n            \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n            {{ mainUser.name || '...'}}\n            Bearbeiten\n        \n        \n            \n            @if (activityService.getUserState(mainUser).state == 'active') {\n                Aktiv\n            } @else if (activityService.getUserState(mainUser).state == 'idle') {\n                Abwesend\n            }\n        \n    \n    \n        \n            \n            E-Mail-Adresse\n        \n        \n            {{ mainUser.email || 'vorname.name@beispiel.de' }}\n        \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Profil                                                                                                                    {{ mainUser.name || \\'...\\'}}            Bearbeiten                                        @if (activityService.getUserState(mainUser).state == \\'active\\') {                Aktiv            } @else if (activityService.getUserState(mainUser).state == \\'idle\\') {                Abwesend            }                                                E-Mail-Adresse                            {{ mainUser.email || \\'vorname.name@beispiel.de\\' }}              '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainUserProfileCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberListComponent.html":{"url":"components/MemberListComponent.html","title":"component - MemberListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/member-list/member-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./member-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./member-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeUsers\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addmember\n                            \n                            \n                                closeCard\n                            \n                            \n                                openUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type, dialog: MatDialog, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/member-list/member-list.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addmember\n                        \n                    \n                \n            \n            \n                \naddmember()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-list/member-list.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeCard\n                        \n                    \n                \n            \n            \n                \ncloseCard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-list/member-list.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserProfile\n                        \n                    \n                \n            \n            \n                \nopenUserProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/member-list/member-list.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/member-list/member-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/member-list/member-list.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainChatComponent } from '../components/main-chat/main-chat.component';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { User } from '../../models/user.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddMembersComponent } from '../add-members/add-members.component';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { UserProfileCardComponent } from '../user-profile-card/user-profile-card.component';\n@Component({\n  selector: 'app-member-list',\n  standalone: true,\n  imports: [CommonModule,],\n  templateUrl: './member-list.component.html',\n  styleUrl: './member-list.component.scss'\n})\nexport class MemberListComponent  {\n  activeUsers: User[];\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { activeUsers: User[] }, private dialog:MatDialog,private dialogRef: MatDialogRef) {\n    this.activeUsers = data.activeUsers;\n  }\n\n\n\n  addmember():void{\n    this.dialog.open(AddMembersComponent);\n  }\n\n  openUserProfile(): void {\n    this.dialog.open(UserProfileCardComponent);\n  }\n\n  closeCard(){\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Mitglieder\n    \n    \n      close\n    \n  \n  \n    \n      \n        \n        {{ user.name }}\n        \n      \n    \n\n    \n      \n        person_add_alt\n        Mitglieder hinzufügen\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Mitglieder              close                                  {{ user.name }}                                    person_add_alt        Mitglieder hinzufügen            '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MemberListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageBoxComponent.html":{"url":"components/MessageBoxComponent.html","title":"component - MessageBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessageBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/message-box/message-box.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message-box\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./message-box.component.html\n            \n\n\n\n            \n                styleUrl\n                ./message-box.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlaceholder\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                channelName\n                            \n                            \n                                replying\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        channelName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-box/message-box.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        replying\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-box/message-box.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-box/message-box.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaceholder\n                        \n                    \n                \n            \n            \n                \ngetPlaceholder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-box/message-box.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-box/message-box.component.ts:28\n                        \n                    \n\n\n            \n                \n                        This function is triggered by the login form submission.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nlogin form\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    message: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-box/message-box.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { Post } from '../../../models/post.class';\n\n@Component({\n  selector: 'app-message-box',\n  standalone: true,\n  imports: [FormsModule],\n  templateUrl: './message-box.component.html',\n  styleUrl: './message-box.component.scss'\n})\nexport class MessageBoxComponent {\n  data = {\n    message: ''\n  }\n  @Input() replying: boolean = false;\n  @Input() channelName?: string;\n  @Output() sent = new EventEmitter();\n\n  getPlaceholder() {\n    return this.replying ? 'Antworten...' : `Nachricht an # ${this.channelName}`;\n  }\n\n  /**\n   * This function is triggered by the login form submission.\n   * @param form - login form\n   */\n  onSubmit(form: NgForm) {\n    if (form.submitted && form.valid) { \n      this.sent.emit(this.data.message);\n      // clear form\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n        \n            \n                add\n            \n            \n                sentiment_satisfied_alt\n            \n            \n                alternate_email\n            \n        \n        \n            send\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    add                                        sentiment_satisfied_alt                                        alternate_email                                        send            '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageItemComponent.html":{"url":"components/MessageItemComponent.html","title":"component - MessageItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessageItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/message-item/message-item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                TimeSeparatorComponent\n                            PickerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./message-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./message-item.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                emojiPicker\n                            \n                            \n                                    Private\n                                emojiSub\n                            \n                            \n                                groupedEmojis\n                            \n                            \n                                    Optional\n                                postReactions\n                            \n                            \n                                    Public\n                                timeService\n                            \n                            \n                                    Private\n                                usersSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEmoji\n                            \n                            \n                                getAuthor\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                objectKeys\n                            \n                            \n                                onHandleEmoji\n                            \n                            \n                                onOpenNewThread\n                            \n                            \n                                onShowEmojiPicker\n                            \n                            \n                                openUserProfile\n                            \n                            \n                                subAuth\n                            \n                            \n                                subEmoji\n                            \n                            \n                                subUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideEmojiPicker\n                            \n                            \n                                lastReply\n                            \n                            \n                                messageSender\n                            \n                            \n                                post\n                            \n                            \n                                threadLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                showEmojiPicker\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, threadsService: ThreadsService, authService: AuthService, usersService: UsersService, reactionsService: ReactionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/message-item/message-item.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadsService\n                                                  \n                                                        \n                                                                        ThreadsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reactionsService\n                                                  \n                                                        \n                                                                        ReactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideEmojiPicker\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-item/message-item.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lastReply\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-item/message-item.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messageSender\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-item/message-item.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        post\n                    \n                \n                \n                    \n                        Type :         Post\n\n                    \n                \n                \n                    \n                        Default value : new Post()\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-item/message-item.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        threadLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-item/message-item.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        showEmojiPicker\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-item/message-item.component.ts:31\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEmoji\n                        \n                    \n                \n            \n            \n                \naddEmoji(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-item/message-item.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthor\n                        \n                    \n                \n            \n            \n                \ngetAuthor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-item/message-item.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         User\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-item/message-item.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        objectKeys\n                        \n                    \n                \n            \n            \n                \nobjectKeys(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-item/message-item.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onHandleEmoji\n                        \n                    \n                \n            \n            \n                \nonHandleEmoji(emoji: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-item/message-item.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emoji\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOpenNewThread\n                        \n                    \n                \n            \n            \n                \nonOpenNewThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-item/message-item.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onShowEmojiPicker\n                        \n                    \n                \n            \n            \n                \nonShowEmojiPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-item/message-item.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserProfile\n                        \n                    \n                \n            \n            \n                \nopenUserProfile(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-item/message-item.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subAuth\n                        \n                    \n                \n            \n            \n                \nsubAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-item/message-item.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subEmoji\n                        \n                    \n                \n            \n            \n                \nsubEmoji()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-item/message-item.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subUsers\n                        \n                    \n                \n            \n            \n                \nsubUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-item/message-item.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Subscription\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-item/message-item.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-item/message-item.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emojiPicker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-item/message-item.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emojiSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-item/message-item.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupedEmojis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-item/message-item.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        postReactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-item/message-item.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TimeService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-item/message-item.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-item/message-item.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, inject, OnDestroy, OnInit } from '@angular/core';\nimport { TimeSeparatorComponent } from '../time-separator/time-separator.component';\nimport { PickerComponent } from '@ctrl/ngx-emoji-mart';\nimport { CommonModule } from '@angular/common';\nimport { UserProfileCardComponent } from '../../user-profile-card/user-profile-card.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ThreadsService } from '../../../services/content/threads.service';\nimport { Post } from '../../../models/post.class';\nimport { UsersService } from '../../../services/users.service';\nimport { User } from '../../../models/user.class';\nimport { TimeService } from '../../../services/time.service';\nimport { Subscription } from 'rxjs';\nimport { Reaction } from '../../../models/reaction.class';\nimport { ReactionsService } from '../../../services/content/reactions.service';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-message-item',\n  standalone: true,\n  imports: [CommonModule, TimeSeparatorComponent, PickerComponent],\n  templateUrl: './message-item.component.html',\n  styleUrl: './message-item.component.scss'\n})\nexport class MessageItemComponent implements OnDestroy {\n\n  @Input() post: Post = new Post();\n  @Input() threadLength?: number;\n  @Input() lastReply?: number;\n  @Input() messageSender = false;\n  @Input() hideEmojiPicker = false;\n  @Output() showEmojiPicker = new EventEmitter();\n\n  author: User;\n  emojiPicker = false;\n  postReactions?: Reaction[];\n  groupedEmojis: { [key: string]: { count: number, users: string[] } } = {};\n  currentUser?: User;\n\n  public timeService = inject(TimeService);\n  private usersSub = new Subscription();\n  private emojiSub = new Subscription();\n\n\n  constructor(\n    private dialog: MatDialog,\n    private threadsService: ThreadsService,\n    private authService: AuthService,\n    private usersService: UsersService,\n    private reactionsService: ReactionsService,\n  ) {\n    this.author = this.getAuthor();\n    this.usersSub = this.subUsers();\n    this.subAuth();\n    this.emojiSub = this.subEmoji();\n  }\n\n\n  onShowEmojiPicker() {\n    this.emojiPicker = !this.emojiPicker;\n    this.showEmojiPicker.emit(this.emojiPicker);\n  }\n\n\n  onOpenNewThread() {\n\n  }\n\n\n  getAuthor(): User {\n    return this.usersService.getUserByUid(this.post.user_id);\n  }\n\n\n  subUsers(): Subscription {\n    return this.usersService.users$.subscribe(() => this.author = this.getAuthor());\n  }\n\n\n  subAuth() {\n    return this.authService.user$.subscribe(() => {\n      const uid = this.authService.getCurrentUid();\n      if (uid) {\n        this.currentUser = this.usersService.getUserByUid(uid);\n      }\n    });\n  }\n\n\n  openUserProfile(uid: string): void {\n    if (uid) {\n      this.dialog.open(UserProfileCardComponent);\n      // TO DO: transfer UID to ProfileCardComponent\n    }\n  }\n\n\n  subEmoji() {\n    return this.reactionsService.reactions$.subscribe((reactions) => {\n      this.postReactions = this.reactionsService.getPostReactions(reactions, this.post.post_id);\n      this.groupedEmojis = this.reactionsService.getGroupedEmojis(this.postReactions);\n    });\n  }\n\n  // Hilfsfunktion, um die Schlüssel eines Objekts zu bekommen\n  objectKeys(obj: any): string[] {\n    return Object.keys(obj);\n  }\n\n\n  onHandleEmoji(emoji: string) {\n    let curremoji = this.postReactions?.find(r => r.emoji === emoji && r.user_id === this.currentUser?.uid);\n    if (curremoji) {\n      this.reactionsService.deleteDoc(curremoji.reaction_id);\n    } else {\n      this.reactionsService.addDoc(new Reaction({\n        user_id: this.currentUser?.uid,\n        post_id: this.post.post_id,\n        emoji: emoji\n      }))\n    }\n  }\n\n\n  addEmoji(event: any) {\n    this.reactionsService.addDoc(new Reaction(\n      {\n        user_id: this.currentUser?.uid,\n        post_id: this.post.post_id,\n        emoji: event.emoji.native\n      }\n    ));\n\n    this.emojiPicker = !this.emojiPicker;\n  }\n\n\n  ngOnDestroy(): void {\n    this.usersSub.unsubscribe();\n    this.emojiSub.unsubscribe();\n  }\n}\n\n\n    \n\n    \n        \n    \n        \n                👍\n             -->\n        \n            add_reaction\n        \n        \n            insert_comment\n        \n        \n            more_verti\n        \n    \n    \n        \n    \n    \n        \n            {{author.name}}\n            {{timeService.toClock(post.date)}} Uhr\n        \n        \n            {{ post.message }}\n        \n         1\" class=\"message-answers\">\n            {{threadLength - 1}} Antworten\n            Letzte Antwort {{timeService.toRelativeDateWithClock(lastReply)}}\n        \n        \n            \n                \n                    {{ emoji }}\n                    \n                        {{ user }}\n                    \n                    hat reagiert\n                \n                \n                    {{ emoji }}\n                    {{ groupedEmojis[emoji].count }}\n                \n            \n\n            \n                add_reaction\n            \n        \n    \n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            👍             -->                    add_reaction                            insert_comment                            more_verti                                                    {{author.name}}            {{timeService.toClock(post.date)}} Uhr                            {{ post.message }}                 1\" class=\"message-answers\">            {{threadLength - 1}} Antworten            Letzte Antwort {{timeService.toRelativeDateWithClock(lastReply)}}                                                                {{ emoji }}                                            {{ user }}                                        hat reagiert                                                    {{ emoji }}                    {{ groupedEmojis[emoji].count }}                                                        add_reaction                            '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navigation/navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                                ExpandableButtonComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navigation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showNav\n                            \n                            \n                                user_id\n                            \n                            \n                                userChannels\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showNav\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        user_id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userChannels\n                    \n                \n                \n                    \n                        Type :         Channel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navigation/navigation.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ExpandableButtonComponent } from '../expandable-button/expandable-button.component';\nimport { RouterLink } from '@angular/router';\nimport { Channel } from '../../../models/channel.class';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-navigation',\n  standalone: true,\n  imports: [CommonModule, RouterLink, ExpandableButtonComponent],\n  templateUrl: './navigation.component.html',\n  styleUrl: './navigation.component.scss'\n})\nexport class NavigationComponent {\n  @Input() user_id: string = '';\n  @Input() showNav: boolean = true;\n  @Input() userChannels: Channel[] = [];\n}\n\n    \n\n    \n        \n    \n        \n            \n            Devspace\n        \n        \n            \n        \n    \n    \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Devspace                                                                '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewMessageComponent.html":{"url":"components/NewMessageComponent.html","title":"component - NewMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/new-message/new-message.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-message\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                MessageBoxComponent\n                            PickerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./new-message.component.html\n            \n\n\n\n            \n                styleUrl\n                ./new-message.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emojiPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emojiPicker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/new-message/new-message.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { PickerComponent } from '@ctrl/ngx-emoji-mart';\nimport { MessageBoxComponent } from '../message-box/message-box.component';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-new-message',\n  standalone: true,\n  imports: [CommonModule, MessageBoxComponent, PickerComponent],\n  templateUrl: './new-message.component.html',\n  styleUrl: './new-message.component.scss'\n})\nexport class NewMessageComponent {\n  emojiPicker = false;\n\n}\n\n    \n\n    \n        \n    \n        Neue Nachricht\n        \n    \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Neue Nachricht                    '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PLAYGROUNDComponent.html":{"url":"components/PLAYGROUNDComponent.html","title":"component - PLAYGROUNDComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PLAYGROUNDComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/playground/playground.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component exists solely for TESTING purposes.\nDELETE before production. Also delete the ROUTING to this component.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-playground\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./playground.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playground.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channels\n                            \n                            \n                                    Public\n                                channelsService\n                            \n                            \n                                channelsSub\n                            \n                            \n                                currentChannel\n                            \n                            \n                                currentThreads\n                            \n                            \n                                posts\n                            \n                            \n                                    Public\n                                postsService\n                            \n                            \n                                postsSub\n                            \n                            \n                                reactions\n                            \n                            \n                                    Public\n                                reactionsService\n                            \n                            \n                                reactionsSub\n                            \n                            \n                                threads\n                            \n                            \n                                    Public\n                                threadsService\n                            \n                            \n                                threadsSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectChannel\n                            \n                            \n                                subChannels\n                            \n                            \n                                subPosts\n                            \n                            \n                                subReactions\n                            \n                            \n                                subThreads\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/playground/playground.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/playground/playground.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectChannel\n                        \n                    \n                \n            \n            \n                \nselectChannel(channel_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/playground/playground.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subChannels\n                        \n                    \n                \n            \n            \n                \nsubChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/playground/playground.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Subscription\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subPosts\n                        \n                    \n                \n            \n            \n                \nsubPosts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/playground/playground.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Subscription\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subReactions\n                        \n                    \n                \n            \n            \n                \nsubReactions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/playground/playground.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Subscription\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subThreads\n                        \n                    \n                \n            \n            \n                \nsubThreads()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/playground/playground.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Subscription\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:36\n                        \n                    \n\n            \n                \n                    Array of channels.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChannelsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelsSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Channel()\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentThreads\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Thread[] | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        postsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postsSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reaction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reactionsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ReactionsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reactionsSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threads\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Thread[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThreadsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threadsSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/playground/playground.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { Channel } from '../../models/channel.class';\nimport { ChannelsService } from '../../services/content/channels.service';\nimport { Thread } from '../../models/thread.class';\nimport { ThreadsService } from '../../services/content/threads.service';\nimport { Post } from '../../models/post.class';\nimport { PostsService } from '../../services/content/posts.service';\nimport { Reaction } from '../../models/reaction.class';\nimport { ReactionsService } from '../../services/content/reactions.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * This component exists solely for TESTING purposes.\n * DELETE before production. Also delete the ROUTING to this component. \n */\n@Component({\n  selector: 'app-playground',\n  standalone: true,\n  imports: [],\n  templateUrl: './playground.component.html',\n  styleUrl: './playground.component.scss'\n})\nexport class PLAYGROUNDComponent implements OnInit, OnDestroy {\n  public channelsService = inject(ChannelsService);\n  public threadsService = inject(ThreadsService);\n  public postsService = inject(PostsService);\n  public reactionsService = inject(ReactionsService);\n  channelsSub = new Subscription();\n  threadsSub = new Subscription();\n  postsSub = new Subscription();\n  reactionsSub = new Subscription();\n\n  /**\n   * Array of channels.\n   */\n  channels: Channel[] = [];\n  \n  threads: Thread[] = [];\n  posts: Post[] = [];\n  reactions: Reaction[] = [];\n\n  currentChannel = new Channel();\n  currentThreads: Thread[] | null = null;\n\n\n  ngOnInit(): void {\n    this.channelsSub = this.subChannels();\n    this.threadsSub = this.subThreads();\n    this.postsSub = this.subPosts();\n    this.reactionsSub = this.subReactions();\n  }\n\n  ngOnDestroy(): void {\n    this.channelsSub.unsubscribe();\n    this.threadsSub.unsubscribe();\n    this.postsSub.unsubscribe();\n    this.reactionsSub.unsubscribe();\n  }\n\n  subChannels(): Subscription {\n    return this.channelsService.channels$.subscribe((channels: Channel[]) => {\n      this.channels = channels;\n    })\n  }\n\n  subThreads(): Subscription {\n    return this.threadsService.threads$.subscribe((threads: Thread[]) => {\n      this.threads = threads;\n    })\n  }\n\n  subPosts(): Subscription {\n    return this.postsService.posts$.subscribe((posts: Post[]) => {\n      this.posts = posts;\n    })\n  }\n\n  subReactions(): Subscription {\n    return this.reactionsService.reactions$.subscribe((reactions: Reaction[]) => {\n      this.reactions = reactions;\n    })\n  }\n\n  selectChannel(channel_id: string) {\n      this.currentChannel = new Channel(this.channels.find(c => c.channel_id == channel_id));\n  }\n}\n    \n\n    \n        \n    Channels:\n    @for (channel of channels; track channel) {\n    {{channel.name}}\n    }\n    @if(currentChannel.channel_id) {\n    Threads:\n    @for (thread of threadsService.getChannelThreads(threads, currentChannel.channel_id); track thread) {\n    {{thread.thread_id}}\n    }\n    }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Channels:    @for (channel of channels; track channel) {    {{channel.name}}    }    @if(currentChannel.channel_id) {    Threads:    @for (thread of threadsService.getChannelThreads(threads, currentChannel.channel_id); track thread) {    {{thread.thread_id}}    }    }'\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PLAYGROUNDComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PickAvatarComponent.html":{"url":"components/PickAvatarComponent.html","title":"component - PickAvatarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PickAvatarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pick-avatar/pick-avatar.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the avatar picking page\nwith the avatar picking form at the center.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pick-avatar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterLink\n                                LegalFooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./pick-avatar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./pick-avatar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                customFile\n                            \n                            \n                                fileError\n                            \n                            \n                                initializing\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                storageService\n                            \n                            \n                                userData\n                            \n                            \n                                    Private\n                                usersService\n                            \n                            \n                                usersSub\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFileError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onCustomSelection\n                            \n                            \n                                    Async\n                                onCustomUpload\n                            \n                            \n                                onError\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetFileError\n                            \n                            \n                                selectDefaultAvatar\n                            \n                            \n                                setFileError\n                            \n                            \n                                setPreSelectionAvatar\n                            \n                            \n                                subUser\n                            \n                            \n                                subUsers\n                            \n                            \n                                syncAvatar\n                            \n                            \n                                unselectAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFileError\n                        \n                    \n                \n            \n            \n                \ngetFileError(response?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:170\n                        \n                    \n\n\n            \n                \n                        This function translates the internal error messages to German error messages\nto be displayed to the user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nerror from upload or update response\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                German error message for the UI\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:53\n                        \n                    \n\n\n            \n                \n                        This function unsubscribes all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:45\n                        \n                    \n\n\n            \n                \n                        This function creates an authentication service subscription for user authentication.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onCustomSelection\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCustomSelection(e: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:119\n                        \n                    \n\n\n            \n                \n                        This function handles custom avatar selection by contacting the file storage service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    click event on hidden file input element (triggered by custom upload button)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onCustomUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCustomUpload(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:145\n                        \n                    \n\n\n            \n                \n                        This function updates the user data to the custom avatar upload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nupload process response\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError(err: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:135\n                        \n                    \n\n\n            \n                \n                        This function handles errors/exceptions during avatar picking.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nerror\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:201\n                        \n                    \n\n\n            \n                \n                        This function is triggered by the pick avatar form submission.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \npick avatar form\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFileError\n                        \n                    \n                \n            \n            \n                \nresetFileError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:182\n                        \n                    \n\n\n            \n                \n                        This function removes the file error message by resetting it.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectDefaultAvatar\n                        \n                    \n                \n            \n            \n                \nselectDefaultAvatar(index: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:109\n                        \n                    \n\n\n            \n                \n                        This function sets a selected avatar from the default avatars assortment.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    avatar index as in the corresponding file name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileError\n                        \n                    \n                \n            \n            \n                \nsetFileError(response?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:159\n                        \n                    \n\n\n            \n                \n                        This function sets the \"fileError\" property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nerror from upload or update response\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPreSelectionAvatar\n                        \n                    \n                \n            \n            \n                \nsetPreSelectionAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:82\n                        \n                    \n\n\n            \n                \n                        This function sets the avatar which is displayed to the user\nbefore the user has selected any avatar. (Google users are being\ndisplayed their Google avatar.)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subUser\n                        \n                    \n                \n            \n            \n                \nsubUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:63\n                        \n                    \n\n\n            \n                \n                        This function defines the user authentication process.\n\n\n                        \n                            Returns :     Subscription\n\n                        \n                            \n                                authentication service subscription\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subUsers\n                        \n                    \n                \n            \n            \n                \nsubUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:100\n                        \n                    \n\n\n            \n                \n                        This function defines the users synchronization process.\n\n\n                        \n                            Returns :     Subscription\n\n                        \n                            \n                                users service subscription\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncAvatar\n                        \n                    \n                \n            \n            \n                \nsyncAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:91\n                        \n                    \n\n\n            \n                \n                        This function updates the \"userData\" property avatar to the users service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unselectAvatar\n                        \n                    \n                \n            \n            \n                \nunselectAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:191\n                        \n                    \n\n\n            \n                \n                        This function unselects the current avatar in favor of\na blank user profile picture.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileError\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(StorageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    uid: '',\n    name: '...',\n    avatarSrc: 'assets/img/profile_blank.svg'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pick-avatar/pick-avatar.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject, OnInit, OnDestroy } from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { RouterLink, Router } from '@angular/router';\nimport { LegalFooterComponent } from '../legal-footer/legal-footer.component';\nimport { AuthService } from '../../../services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { StorageService } from '../../../services/storage.service';\nimport { UsersService } from '../../../services/users.service';\nimport { User } from '../../../models/user.class';\n\n\n/**\n * This component displays the avatar picking page\n * with the avatar picking form at the center.\n */\n@Component({\n  selector: 'app-pick-avatar',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterLink, LegalFooterComponent],\n  templateUrl: './pick-avatar.component.html',\n  styleUrl: './pick-avatar.component.scss'\n})\nexport class PickAvatarComponent implements OnInit, OnDestroy {\n  private authService = inject(AuthService);\n  private storageService = inject(StorageService);\n  private usersService = inject(UsersService);\n  private router = inject(Router);\n  userData = {\n    uid: '',\n    name: '...',\n    avatarSrc: 'assets/img/profile_blank.svg'\n  }\n  userSub = new Subscription();\n  usersSub = new Subscription();\n  customFile: any = '';\n  loading: boolean = true;\n  initializing: boolean = true;\n  fileError: string | null = null;\n\n\n  /**\n   * This function creates an authentication service subscription for user authentication.\n   */\n  ngOnInit(): void {\n    this.userSub = this.subUser();\n  }\n\n\n  /**\n   * This function unsubscribes all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.userSub.unsubscribe();\n    this.usersSub.unsubscribe();\n  }\n\n\n  /**\n   * This function defines the user authentication process.\n   * @returns authentication service subscription\n   */\n  subUser(): Subscription {\n    return this.authService.user$.subscribe((user) => {\n      if (user && user.displayName) {\n        this.loading = false;\n        this.initializing = false;\n        const uid = this.authService.getCurrentUid();\n        if (uid) { this.userData.uid = uid };\n        this.setPreSelectionAvatar();\n        this.userData.name = user.displayName;\n      }\n    });\n  }\n\n\n  /**\n   * This function sets the avatar which is displayed to the user\n   * before the user has selected any avatar. (Google users are being\n   * displayed their Google avatar.)\n   */\n  setPreSelectionAvatar() {\n    this.syncAvatar();\n    this.usersSub = this.subUsers();\n  }\n\n\n  /**\n   * This function updates the \"userData\" property avatar to the users service.\n   */\n  syncAvatar() {\n    this.userData.avatarSrc = this.usersService.getUserByUid(this.userData.uid).avatarSrc;\n  }\n\n\n  /**\n   * This function defines the users synchronization process.\n   * @returns users service subscription\n   */\n  subUsers(): Subscription {\n    return this.usersService.users$.subscribe(() => this.syncAvatar());\n  }\n\n\n  /**\n   * This function sets a selected avatar from the default avatars assortment.\n   * @param index avatar index as in the corresponding file name\n   */\n  selectDefaultAvatar(index: string) {\n    this.resetFileError();\n    this.userData.avatarSrc = `assets/img/avatar/avatar_${index}.svg`;\n  }\n\n\n  /**\n   * This function handles custom avatar selection by contacting the file storage service.\n   * @param e click event on hidden file input element (triggered by custom upload button)\n   */\n  async onCustomSelection(e: Event) {\n    this.resetFileError();\n    this.loading = true;\n    const input = e.target as HTMLInputElement;\n    if (input.files) {\n      this.storageService.uploadAvatar(input.files[0], this.userData.uid)\n        .then((response) => this.onCustomUpload(response))\n        .catch((err: Error) => this.onError(err));\n    }\n  }\n\n\n  /**\n   * This function handles errors/exceptions during avatar picking.\n   * @param err - error\n   */\n  onError(err: Error) {\n    this.setFileError(err.toString());\n    this.loading = false;\n  }\n\n\n  /**\n   * This function updates the user data to the custom avatar upload. \n   * @param response - upload process response\n   */\n  async onCustomUpload(response: any) {\n    if (response.includes(this.userData.uid)) {\n      this.userData.avatarSrc = response;\n      this.usersService.updateUser(new User(this.userData))\n        .then(() => this.loading = false)\n        .catch((err: Error) => this.onError(err));\n    }\n  }\n\n\n  /**\n   * This function sets the \"fileError\" property.\n   * @param response - error from upload or update response\n   */\n  setFileError(response?: string) {\n    this.fileError = response ? this.getFileError(response) : this.getFileError();\n  }\n\n\n  /**\n   * This function translates the internal error messages to German error messages\n   * to be displayed to the user.\n   * @param response - error from upload or update response\n   * @returns German error message for the UI\n   */\n  getFileError(response?: string): string {\n    if (response && response.includes('err/not-an-image')) {\n      return 'Ungültiger Dateityp.'\n    } else {\n      return 'Upload fehlgeschlagen.'\n    }\n  }\n\n\n  /**\n   * This function removes the file error message by resetting it.\n   */\n  resetFileError(): void {\n    this.fileError = null;\n  }\n\n\n  /**\n   * This function unselects the current avatar in favor of\n   * a blank user profile picture. \n   */\n  unselectAvatar() {\n    this.userData.avatarSrc = 'assets/img/profile_blank.svg';\n    this.resetFileError();\n  }\n\n\n  /**\n   * This function is triggered by the pick avatar form submission.\n   * @param form - pick avatar form\n   */\n  onSubmit(form: NgForm) {\n    if (form.submitted && form.valid) { this.router.navigateByUrl('') }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Wähle deinen Avatar\n            \n                \n                    \n                \n            \n        \n        \n            \n        \n        \n            {{userData.name}}\n            Aus der Liste wählen\n            \n                @for (i of ['00','01','02','03','04','05']; track i)\n                {\n                    \n                }\n            \n            \n                eigenes Bild verwenden\n                \n                Datei\n                    hochladen\n                @if(fileError)\n                {\n                    {{fileError}}\n                }\n            \n            \n                Weiter\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Wähle deinen Avatar                                                                                                                                    {{userData.name}}            Aus der Liste wählen                            @for (i of [\\'00\\',\\'01\\',\\'02\\',\\'03\\',\\'04\\',\\'05\\']; track i)                {                                    }                                        eigenes Bild verwenden                                Datei                    hochladen                @if(fileError)                {                    {{fileError}}                }                                        Weiter                        '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PickAvatarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/post.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                message\n                            \n                            \n                                post_id\n                            \n                            \n                                thread_id\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/post.class.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/post.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/post.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/post.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thread_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/post.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/post.class.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/post.class.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { post_id: string; message: string; user_id: string; thread_id: string; date: number; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Post {\n    post_id: string;\n    message: string;\n    user_id: string;\n    thread_id: string;\n    date: number;\n\n    constructor(obj?: any) {\n        this.post_id = obj && obj.post_id ? obj.post_id : '';\n        this.message = obj && obj.message ? obj.message : '';\n        this.user_id = obj && obj.user_id ? obj.user_id : '';\n        this.thread_id = obj && obj.thread_id ? obj.thread_id : '';\n        this.date = obj && obj.date ? obj.date : -1;\n    }\n\n    toJson() {\n        return {\n            post_id: this.post_id,\n            message: this.message,\n            user_id: this.user_id,\n            thread_id: this.thread_id,\n            date: this.date\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/content/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firestore\n                            \n                            \n                                posts\n                            \n                            \n                                posts$\n                            \n                            \n                                unsubPosts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addDoc\n                            \n                            \n                                    Async\n                                deleteDoc\n                            \n                            \n                                getColRef\n                            \n                            \n                                getSingleDocRef\n                            \n                            \n                                getThreadPosts\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                subPosts\n                            \n                            \n                                    Async\n                                updateDoc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/content/posts.service.ts:15\n                            \n                        \n\n                \n                    \n                            Create subscription\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDoc(post: Post)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/posts.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Add doc to Firestore collection.\nThe Firestore document ID will be identical to the doc's Firebase authentication ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                post\n                                            \n                                                            Post\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDoc(post_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/posts.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Delete doc from Firestore collection\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                post_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nFirestore doc ID of doc to be deleted\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColRef\n                        \n                    \n                \n            \n            \n                \ngetColRef()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/posts.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Get reference to Firestore \"posts\" collection\n\n\n                        \n                            Returns :     CollectionReference\n\n                        \n                            \n                                reference\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSingleDocRef\n                        \n                    \n                \n            \n            \n                \ngetSingleDocRef(post_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/posts.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Get reference to single doc Firestore data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                post_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nFirestore post ID\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DocumentReference\n\n                        \n                            \n                                reference\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getThreadPosts\n                        \n                    \n                \n            \n            \n                \ngetThreadPosts(posts: Post[], thread_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/posts.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                posts\n                                            \n                                                            Post[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                thread_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Post[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/posts.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Unsubscribe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subPosts\n                        \n                    \n                \n            \n            \n                \nsubPosts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/posts.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDoc(post: Post)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/posts.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Update doc in Firestore collection.\nThe update will only be executed if the doc (i.e., its Firestore ID) exists in the Firestore collection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                post\n                                            \n                                                            Post\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/services/content/posts.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Post[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/content/posts.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        posts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/content/posts.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubPosts\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/services/content/posts.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject, OnDestroy } from '@angular/core';\nimport { Firestore, collection, doc, onSnapshot, updateDoc, deleteDoc } from '@angular/fire/firestore';\nimport { Subject } from 'rxjs';\nimport { CollectionReference, DocumentReference, addDoc } from 'firebase/firestore';\nimport { Post } from '../../models/post.class';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService implements OnDestroy {\n  posts: Post[] = [];\n  posts$: Subject = new Subject();\n  unsubPosts;\n  firestore: Firestore = inject(Firestore);\n\n\n  /**\n   * Create subscription\n   */\n  constructor() {\n    this.unsubPosts = this.subPosts();\n  }\n\n\n  /**\n   * Unsubscribe\n   */\n  ngOnDestroy() {\n    this.unsubPosts();\n  }\n\n\n  subPosts() {\n    return onSnapshot(this.getColRef(), (list: any) => {\n      let posts: Post[] = [];\n      list.forEach((element: any) => posts.push(element.data()));\n      this.posts = posts;\n      this.posts$.next(posts);\n    });\n  }\n\n\n  /**\n   * Get reference to Firestore \"posts\" collection\n   * @returns reference\n   */\n  getColRef(): CollectionReference {\n    return collection(this.firestore, 'posts');\n  }\n\n\n  /**\n   * Get reference to single doc Firestore data\n   * @param post_id - Firestore post ID\n   * @returns reference\n   */\n  getSingleDocRef(post_id: string): DocumentReference {\n    return doc(this.getColRef(), post_id);\n  }\n\n\n  /**\n   * Add doc to Firestore collection.\n   * The Firestore document ID will be identical to the doc's Firebase authentication ID.\n   * @param doc - doc to be added\n   */\n  async addDoc(post: Post) {\n    await addDoc(this.getColRef(), post.toJson())\n      .then((response: any) => {\n        post.post_id = response.id;\n        post.date = Date.now();\n        this.updateDoc(post);\n      })\n      .catch((err: Error) => { console.error(err) });\n  }\n\n\n  /**\n   * Update doc in Firestore collection.\n   * The update will only be executed if the doc (i.e., its Firestore ID) exists in the Firestore collection.\n   * @param doc - doc to be updated\n   */\n  async updateDoc(post: Post) {\n    if (post.post_id) {\n      const docRef = this.getSingleDocRef(post.post_id);\n      await updateDoc(docRef, post.toJson())\n        .catch((err: Error) => { console.error(err) });\n    }\n  }\n\n\n  /**\n   * Delete doc from Firestore collection\n   * @param post_id - Firestore doc ID of doc to be deleted\n   */\n  async deleteDoc(post_id: string) {\n    const docRef = this.getSingleDocRef(post_id);\n    await deleteDoc(docRef)\n      .catch((err: Error) => { console.error(err) });\n  }\n\n\n  getThreadPosts(posts: Post[], thread_id: string): Post[] {\n    posts = posts.filter(p => p.thread_id == thread_id);\n    posts.sort((a, b) => a.date - b.date);\n    posts.forEach(p => p = new Post(p))\n    return posts;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacypolicyComponent.html":{"url":"components/PrivacypolicyComponent.html","title":"component - PrivacypolicyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivacypolicyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/legal/privacypolicy/privacypolicy.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacypolicy\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./privacypolicy.component.html\n            \n\n\n\n            \n                styleUrl\n                ./privacypolicy.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideBackBtn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                historyBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/legal/privacypolicy/privacypolicy.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        historyBack\n                        \n                    \n                \n            \n            \n                \nhistoryBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/legal/privacypolicy/privacypolicy.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/legal/privacypolicy/privacypolicy.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hideBackBtn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/legal/privacypolicy/privacypolicy.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule, Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-privacypolicy',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './privacypolicy.component.html',\n  styleUrl: './privacypolicy.component.scss'\n})\nexport class PrivacypolicyComponent implements OnInit {\n  hideBackBtn: boolean = false;\n\n  constructor(\n    private location: Location,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n      this.route.queryParams.subscribe(params => {\n        this.hideBackBtn = (params['back'] === 'false');\n      });\n  }\n\n  historyBack() {\n    this.location.back();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        Datenschutz\n        \n            Allgemeine Hinweise\n            \n                Die folgenden Hinweise geben einen einfachen Überblick darüber, was mit\n                Ihren personenbezogenen Daten passiert, wenn Sie diese Internetseiten besuchen.\n                Personenbezogene Daten sind alle Daten, mit denen Sie persönlich\n                identifiziert werden können. Ausführliche Informationen zum Thema\n                Datenschutz entnehmen Sie diesen unter diesem Text aufgeführten\n                Datenschutzhinweisen.\n            \n            Verantwortlich\n            \n                Die Datenverarbeitung auf diesen Internetseiten erfolgt durch den Betreiber der Internetseiten.\n                Kontaktdaten:\n            \n            Alexander Leitermann\n            Grünwalder Str. 69a\n                81547 München\n            \n            E-Mail: kontakt&nbsp;&commat;&nbsp;leitermann.online\n        \n            Art der Daten\n            1. Nutzung der Internetseite\n            Bei jedem Aufruf dieser Internetseiten werden automatisch Daten und \n                Informationen vom Computersystem des aufrufenden Geräts erfasst. Dies \n                sind z. B. Informationen wie:\n            \n            \n                Informationen über den Typ und die Version Ihres Internet-Browsers\n                Das Betriebssystem Ihres Computers oder Smartphones\n                Ihr Internet-Anbieter\n                Ihre IP-Adresse\n                Datum und Uhrzeit des Zugriffs\n                Geografischer Standort\n                Internetseiten, von denen Sie zu mir gekommen sind\n                Internetseiten, die Sie von meinen Internetseiten aus besuchen\n            \n            Derartige technische Informationen werden in sogenannten \"Log Files\" (Protokolldateien)\n                erfasst, damit die Internetseiten korrekt bei Ihnen angezeigt werden und bei \n                technischen Problemen die Ursachen ermittelt werden können. Ebenso dienen diese \n                Informationen der technischen Optimierung der Internetseiten und dem Zweck der \n                Sicherheit der Serversysteme und Netze. In diesen Zwecken liegt auch ein berechtigtes \n                Interesse an der Datenverarbeitung nach Art. 6 Abs. 1 S. 1 lit. f DSGVO.\n            \n            Die Erfassung der Daten zur Bereitstellung der Internetseiten und die Speicherung der Daten \n                in Log Files ist für den Betrieb der Internetseiten zwingend erforderlich.\n            \n            2. Kontaktformular\n            Mit dem Kontaktformular werden folgende personenbezogene Daten erhoben:\n            \n                Name - Ihren Namen (Vorname, Name) für die korrekte Anrede in der Kommunikation mit Ihnen\n                E-Mail Adresse - Ihre gültige elektronische Adresse, damit Sie eine Antwort erhalten können\n                Passwort - Ein gültiges Passwort, welches für den erfolgreichen Login benötigt wird.\n                Profilbild (optional) - Ein Bild, welches anderen Nutzern erlaubt, Sie rasch und eindeutig zu erkennen\n            \n            Die Rechtsgrundlage für die Datenverarbeitung ist Art. 6 Abs. 1 lit. f DSGVO, da der Betreiber ein \n                berechtigtes Interesse an der Beantwortung Ihres Anliegens und an einer unkomplizierten \n                Kontaktaufnahme-Möglichkeit hat.\n            \n            \n            Umgang\n            Der Betreiber verarbeitet personenbezogene Daten grundsätzlich nur, soweit dies zur \n                Bereitstellung einer funktionsfähigen Internetseite sowie deren Inhalte \n                erforderlich ist. Die Verarbeitung von personenbezogenen Daten erfolgt \n                regelmäßig nur nach Einwilligung. Eine Ausnahme gilt für Fälle, in denen \n                eine vorherige Einwilligung aus tatsächlichen Gründen nicht eingeholt \n                werden kann und die Verarbeitung der Daten gesetzlich zulässig ist.\n            \n        \n            Rechtsgrundlage\n            Soweit der Betreiber für Verarbeitungsvorgänge personenbezogener Daten eine Einwilligung der \n                betroffenen Person eingeholt hat, dient Art. 6 Abs. 1 S. 1 lit. a DSGVO als Rechtsgrundlage.\n            \n            Soweit eine Verarbeitung personenbezogener Daten zur Erfüllung einer rechtlichen Verpflichtung \n                erforderlich ist, der der Betreiber unterliegt, dient Art. 6 Abs. 1 S. 1 lit. c DSGVO als Rechtsgrundlage.\n            \n            Ist die Verarbeitung zur Wahrung eines berechtigten Interesses vom Betreiber oder eines Dritten \n                erforderlich und überwiegen die Interessen, Grundrechte und Grundfreiheiten des Betroffenen \n                das erstgenannte Interesse nicht, so dient Art. 6 Abs. 1 S. 1 lit. f DSGVO als \n                Rechtsgrundlage für die Verarbeitung.\n            \n        \n            Speicherdauer\n            Die personenbezogenen Daten welche in den IONOS WebAnalytics (Hosting-Dienstleister) \n                anonymisiert und ohne Personenbezug in den Log Files verarbeitet werden, bleiben wenigstens \n                für die Dauer der Beauftragung durch den Betreiber gespeichert.\n            \n            Die erhobenen personenbezogenen Daten aus dem Kontaktformular sowie aus direkt empfangenen E-Mails\n                werden für die Dauer der Kommunikation mit Ihnen gespeichert. \n            \n            Sind die Daten für den vorgesehenen Zweck nicht mehr erforderlich, müssen diese gemäß Art. 17 DSGVO \n                unverzüglich gelöscht werden. Die Speicherdauer kann abhängig von der Art der Daten durch andere \n                Vorschriften und Gesetze vorgeschrieben und länger sein. \n            \n        \n            Ihre Rechte\n            Wenn der Betreiber Ihre personenbezogenen Daten verarbeitet, gelten Sie als Betroffener gemäß \n                der DSGVO und es stehen Ihnen – nach erfolgreicher Identifizierung – folgende \n                Rechte gegenüber dem Betreiber zu:\n            \n            \n                Auskunftsrecht (Artikel 15 DSGVO, § 34 BDSG)\n                Recht auf Löschung (Artikel 17 DSGVO, § 35 BDSG)\n                Recht auf Berichtigung (Artikel 16 DSGVO, § 34 BDSG)\n                Recht auf Einschränkung der Verarbeitung (Artikel 18 DSGVO)\n                Recht auf Datenübertragbarkeit (Artikel 20 DSGVO)\n                Recht, Ihre Einwilligung jederzeit zu widerrufen (Artikel 7 Abs. 3 DSGVO)\n                Widerspruchsrecht (Artikel 21 DSGVO)\n            \n            Um Ihre hier beschriebenen Rechte auszuüben, können Sie den Betreiber jederzeit unter den unter \n                „Verantwortlich” aufgeführten Kontaktdaten kontaktieren.\n            \n            Sie können jederzeit eine Beschwerde bei einer Aufsichtsbehörde über die Erhebung und \n                Verarbeitung Ihrer personenbezogenen Daten durch dabubble-257.developerakademie.net \n                einreichen (Beschwerderecht nach Art. 77 DSGVO). Sie können sich an die Datenschutzbehörde Ihres Wohnsitzes wenden, die \n                Ihren Antrag dann an die zuständige Behörde weiterleiten wird.\n            \n        \n            Gewährleistung des Schutzes\n            Der Betreiber von dabubble-257.developerakademie.net sorgt durch sein Handeln\n                und mit technischen Möglichkeiten für die sichere Verwahrung der personenbezogenen Daten.\n                Der Hosting-Dienstleister verwendet technische Maßnahmen zum Schutz der erhobenen Daten für \n                die Log Files.\n            \n        \n            Links von Dritten\n            Gelegentlich kann der Betreiber nach eigenem Ermessen Produkte oder Dienste von Dritten auf diesen \n                Internetseiten anbieten. Diese Internetseiten von Drittanbietern verfügen über separate, \n                unabhängige Datenschutzrichtlinien. Der Betreiber von dabubble-257.developerakademie.net \n                übernimmt daher keine Verantwortung oder Haftung für den Inhalt und die Aktivitäten dieser \n                verlinkten Internetseiten. Trotzdem wird versucht, die Integrität der eigenen Internetseiten zu schützen \n                und der Betreiber begrüßt jedes Feedback zu den verlinkten Internetseiten.\n            \n        \n            Tools von Drittanbietern\n            Hosting\n            Diese Internetseiten werden im Auftrag bei einem Hoster zum Abruf bereitgestellt. Der Hosting-Dienstleister ist:\n            IONOS SE\n            Elgendorfer Str. 57 \n                56410 Montabaur \n            &nbsp;\n            WebAnalytics\n            Die unter \"Art der Daten\" genannten Daten zu Punkt 1 werden von diesem \n                Dienstleister unter dem Namen \"WebAnalytics\" in den erwähnten Log Files verarbeitet. Die IP-Adresse \n                wird nach der Übermittlung Direkt anonymisiert und ohne Personenbezug verarbeitet. Zum Schutz von \n                personenbezogenen Daten verwendet WebAnalytics keine Cookies.\n            \n        \n            Datenweitergabe\n            In einigen wenigen Fällen wird der Betreiber vom Gesetzgeber zur Auskunft verpflichtet für Zwecke \n                der Strafverfolgung an Strafverfolgungsbehörden und Gerichte.\n            \n            Rechtsgrundlage für diese Verarbeitung ist Art. 6 Abs. 1 lit. c DSGVO.\n        \n            \n            \n\n        \n    \n    \n     -->\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Datenschutz                    Allgemeine Hinweise                            Die folgenden Hinweise geben einen einfachen Überblick darüber, was mit                Ihren personenbezogenen Daten passiert, wenn Sie diese Internetseiten besuchen.                Personenbezogene Daten sind alle Daten, mit denen Sie persönlich                identifiziert werden können. Ausführliche Informationen zum Thema                Datenschutz entnehmen Sie diesen unter diesem Text aufgeführten                Datenschutzhinweisen.                        Verantwortlich                            Die Datenverarbeitung auf diesen Internetseiten erfolgt durch den Betreiber der Internetseiten.                Kontaktdaten:                        Alexander Leitermann            Grünwalder Str. 69a                81547 München                        E-Mail: kontakt @ leitermann.online                    Art der Daten            1. Nutzung der Internetseite            Bei jedem Aufruf dieser Internetseiten werden automatisch Daten und                 Informationen vom Computersystem des aufrufenden Geräts erfasst. Dies                 sind z. B. Informationen wie:                                        Informationen über den Typ und die Version Ihres Internet-Browsers                Das Betriebssystem Ihres Computers oder Smartphones                Ihr Internet-Anbieter                Ihre IP-Adresse                Datum und Uhrzeit des Zugriffs                Geografischer Standort                Internetseiten, von denen Sie zu mir gekommen sind                Internetseiten, die Sie von meinen Internetseiten aus besuchen                        Derartige technische Informationen werden in sogenannten \"Log Files\" (Protokolldateien)                erfasst, damit die Internetseiten korrekt bei Ihnen angezeigt werden und bei                 technischen Problemen die Ursachen ermittelt werden können. Ebenso dienen diese                 Informationen der technischen Optimierung der Internetseiten und dem Zweck der                 Sicherheit der Serversysteme und Netze. In diesen Zwecken liegt auch ein berechtigtes                 Interesse an der Datenverarbeitung nach Art. 6 Abs. 1 S. 1 lit. f DSGVO.                        Die Erfassung der Daten zur Bereitstellung der Internetseiten und die Speicherung der Daten                 in Log Files ist für den Betrieb der Internetseiten zwingend erforderlich.                        2. Kontaktformular            Mit dem Kontaktformular werden folgende personenbezogene Daten erhoben:                            Name - Ihren Namen (Vorname, Name) für die korrekte Anrede in der Kommunikation mit Ihnen                E-Mail Adresse - Ihre gültige elektronische Adresse, damit Sie eine Antwort erhalten können                Passwort - Ein gültiges Passwort, welches für den erfolgreichen Login benötigt wird.                Profilbild (optional) - Ein Bild, welches anderen Nutzern erlaubt, Sie rasch und eindeutig zu erkennen                        Die Rechtsgrundlage für die Datenverarbeitung ist Art. 6 Abs. 1 lit. f DSGVO, da der Betreiber ein                 berechtigtes Interesse an der Beantwortung Ihres Anliegens und an einer unkomplizierten                 Kontaktaufnahme-Möglichkeit hat.                                    Umgang            Der Betreiber verarbeitet personenbezogene Daten grundsätzlich nur, soweit dies zur                 Bereitstellung einer funktionsfähigen Internetseite sowie deren Inhalte                 erforderlich ist. Die Verarbeitung von personenbezogenen Daten erfolgt                 regelmäßig nur nach Einwilligung. Eine Ausnahme gilt für Fälle, in denen                 eine vorherige Einwilligung aus tatsächlichen Gründen nicht eingeholt                 werden kann und die Verarbeitung der Daten gesetzlich zulässig ist.                                Rechtsgrundlage            Soweit der Betreiber für Verarbeitungsvorgänge personenbezogener Daten eine Einwilligung der                 betroffenen Person eingeholt hat, dient Art. 6 Abs. 1 S. 1 lit. a DSGVO als Rechtsgrundlage.                        Soweit eine Verarbeitung personenbezogener Daten zur Erfüllung einer rechtlichen Verpflichtung                 erforderlich ist, der der Betreiber unterliegt, dient Art. 6 Abs. 1 S. 1 lit. c DSGVO als Rechtsgrundlage.                        Ist die Verarbeitung zur Wahrung eines berechtigten Interesses vom Betreiber oder eines Dritten                 erforderlich und überwiegen die Interessen, Grundrechte und Grundfreiheiten des Betroffenen                 das erstgenannte Interesse nicht, so dient Art. 6 Abs. 1 S. 1 lit. f DSGVO als                 Rechtsgrundlage für die Verarbeitung.                                Speicherdauer            Die personenbezogenen Daten welche in den IONOS WebAnalytics (Hosting-Dienstleister)                 anonymisiert und ohne Personenbezug in den Log Files verarbeitet werden, bleiben wenigstens                 für die Dauer der Beauftragung durch den Betreiber gespeichert.                        Die erhobenen personenbezogenen Daten aus dem Kontaktformular sowie aus direkt empfangenen E-Mails                werden für die Dauer der Kommunikation mit Ihnen gespeichert.                         Sind die Daten für den vorgesehenen Zweck nicht mehr erforderlich, müssen diese gemäß Art. 17 DSGVO                 unverzüglich gelöscht werden. Die Speicherdauer kann abhängig von der Art der Daten durch andere                 Vorschriften und Gesetze vorgeschrieben und länger sein.                                 Ihre Rechte            Wenn der Betreiber Ihre personenbezogenen Daten verarbeitet, gelten Sie als Betroffener gemäß                 der DSGVO und es stehen Ihnen – nach erfolgreicher Identifizierung – folgende                 Rechte gegenüber dem Betreiber zu:                                        Auskunftsrecht (Artikel 15 DSGVO, § 34 BDSG)                Recht auf Löschung (Artikel 17 DSGVO, § 35 BDSG)                Recht auf Berichtigung (Artikel 16 DSGVO, § 34 BDSG)                Recht auf Einschränkung der Verarbeitung (Artikel 18 DSGVO)                Recht auf Datenübertragbarkeit (Artikel 20 DSGVO)                Recht, Ihre Einwilligung jederzeit zu widerrufen (Artikel 7 Abs. 3 DSGVO)                Widerspruchsrecht (Artikel 21 DSGVO)                        Um Ihre hier beschriebenen Rechte auszuüben, können Sie den Betreiber jederzeit unter den unter                 „Verantwortlich” aufgeführten Kontaktdaten kontaktieren.                        Sie können jederzeit eine Beschwerde bei einer Aufsichtsbehörde über die Erhebung und                 Verarbeitung Ihrer personenbezogenen Daten durch dabubble-257.developerakademie.net                 einreichen (Beschwerderecht nach Art. 77 DSGVO). Sie können sich an die Datenschutzbehörde Ihres Wohnsitzes wenden, die                 Ihren Antrag dann an die zuständige Behörde weiterleiten wird.                                Gewährleistung des Schutzes            Der Betreiber von dabubble-257.developerakademie.net sorgt durch sein Handeln                und mit technischen Möglichkeiten für die sichere Verwahrung der personenbezogenen Daten.                Der Hosting-Dienstleister verwendet technische Maßnahmen zum Schutz der erhobenen Daten für                 die Log Files.                                Links von Dritten            Gelegentlich kann der Betreiber nach eigenem Ermessen Produkte oder Dienste von Dritten auf diesen                 Internetseiten anbieten. Diese Internetseiten von Drittanbietern verfügen über separate,                 unabhängige Datenschutzrichtlinien. Der Betreiber von dabubble-257.developerakademie.net                 übernimmt daher keine Verantwortung oder Haftung für den Inhalt und die Aktivitäten dieser                 verlinkten Internetseiten. Trotzdem wird versucht, die Integrität der eigenen Internetseiten zu schützen                 und der Betreiber begrüßt jedes Feedback zu den verlinkten Internetseiten.                                Tools von Drittanbietern            Hosting            Diese Internetseiten werden im Auftrag bei einem Hoster zum Abruf bereitgestellt. Der Hosting-Dienstleister ist:            IONOS SE            Elgendorfer Str. 57                 56410 Montabaur                          WebAnalytics            Die unter \"Art der Daten\" genannten Daten zu Punkt 1 werden von diesem                 Dienstleister unter dem Namen \"WebAnalytics\" in den erwähnten Log Files verarbeitet. Die IP-Adresse                 wird nach der Übermittlung Direkt anonymisiert und ohne Personenbezug verarbeitet. Zum Schutz von                 personenbezogenen Daten verwendet WebAnalytics keine Cookies.                                Datenweitergabe            In einigen wenigen Fällen wird der Betreiber vom Gesetzgeber zur Auskunft verpflichtet für Zwecke                 der Strafverfolgung an Strafverfolgungsbehörden und Gerichte.                        Rechtsgrundlage für diese Verarbeitung ist Art. 6 Abs. 1 lit. c DSGVO.                                                     -->'\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacypolicyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reaction.html":{"url":"classes/Reaction.html","title":"class - Reaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/reaction.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emoji\n                            \n                            \n                                post_id\n                            \n                            \n                                reaction_id\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/reaction.class.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emoji\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/reaction.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/reaction.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reaction_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/reaction.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/reaction.class.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/reaction.class.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { reaction_id: string; user_id: string; post_id: string; emoji: any; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Reaction {\n    reaction_id: string;\n    user_id: string;\n    post_id: string;\n    emoji: any;\n\n    constructor(obj?: any) {\n        this.reaction_id = obj && obj.reaction_id ? obj.reaction_id : '';\n        this.user_id = obj && obj.user_id ? obj.user_id : '';\n        this.post_id = obj && obj.post_id ? obj.post_id : '';\n        this.emoji = obj && obj.emoji ? obj.emoji : '';\n    }\n\n    toJson() {\n        return {\n            reaction_id: this.reaction_id,\n            user_id: this.user_id,\n            post_id: this.post_id,\n            emoji: this.emoji\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReactionsService.html":{"url":"injectables/ReactionsService.html","title":"injectable - ReactionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReactionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/content/reactions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firestore\n                            \n                            \n                                reactions$\n                            \n                            \n                                unsubReactions\n                            \n                            \n                                usersService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addDoc\n                            \n                            \n                                    Async\n                                deleteDoc\n                            \n                            \n                                getColRef\n                            \n                            \n                                getGroupedEmojis\n                            \n                            \n                                getPostReactions\n                            \n                            \n                                getSingleDocRef\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                subReactions\n                            \n                            \n                                    Async\n                                updateDoc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/content/reactions.service.ts:17\n                            \n                        \n\n                \n                    \n                            Create subscription\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDoc(reaction: Reaction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/reactions.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Add doc to Firestore collection.\nThe Firestore document ID will be identical to the doc's Firebase authentication ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reaction\n                                            \n                                                            Reaction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDoc(reaction_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/reactions.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Delete doc from Firestore collection\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reaction_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColRef\n                        \n                    \n                \n            \n            \n                \ngetColRef()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/reactions.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Get reference to Firestore \"reactions\" collection\n\n\n                        \n                            Returns :     CollectionReference\n\n                        \n                            \n                                reference\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupedEmojis\n                        \n                    \n                \n            \n            \n                \ngetGroupedEmojis(reactions: Reaction[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/reactions.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reactions\n                                            \n                                                            Reaction[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPostReactions\n                        \n                    \n                \n            \n            \n                \ngetPostReactions(reactions: Reaction[], post_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/reactions.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reactions\n                                            \n                                                            Reaction[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                post_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Reaction[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSingleDocRef\n                        \n                    \n                \n            \n            \n                \ngetSingleDocRef(reaction_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/reactions.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Get reference to single doc Firestore data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reaction_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DocumentReference\n\n                        \n                            \n                                reference\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/reactions.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Unsubscribe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subReactions\n                        \n                    \n                \n            \n            \n                \nsubReactions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/reactions.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDoc(reaction: Reaction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/reactions.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Update doc in Firestore collection.\nThe update will only be executed if the doc (i.e., its Firestore ID) exists in the Firestore collection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reaction\n                                            \n                                                            Reaction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/services/content/reactions.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reactions$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/content/reactions.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubReactions\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/services/content/reactions.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/services/content/reactions.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject, OnDestroy } from '@angular/core';\nimport { Firestore, collection, doc, onSnapshot, updateDoc, deleteDoc } from '@angular/fire/firestore';\nimport { Subject } from 'rxjs';\nimport { CollectionReference, DocumentReference, addDoc } from 'firebase/firestore';\nimport { Reaction } from '../../models/reaction.class';\nimport { UsersService } from '../users.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReactionsService implements OnDestroy {\n  reactions$: Subject = new Subject();\n  unsubReactions;\n\n  firestore: Firestore = inject(Firestore);\n  usersService: UsersService = inject(UsersService);\n\n\n  /**\n   * Create subscription\n   */\n  constructor() {\n    this.unsubReactions = this.subReactions();\n  }\n\n\n  /**\n   * Unsubscribe\n   */\n  ngOnDestroy() {\n    this.unsubReactions();\n  }\n\n\n  subReactions() {\n    return onSnapshot(this.getColRef(), (list: any) => {\n      let reactions: Reaction[] = [];\n      list.forEach((element: any) => {\n        reactions.push(element.data());\n      });\n      this.reactions$.next(reactions);\n    });\n  }\n\n\n  /**\n   * Get reference to Firestore \"reactions\" collection\n   * @returns reference\n   */\n  getColRef(): CollectionReference {\n    return collection(this.firestore, 'reactions');\n  }\n\n\n  /**\n   * Get reference to single doc Firestore data\n   * @param id - Firestore task ID\n   * @returns reference\n   */\n  getSingleDocRef(reaction_id: string): DocumentReference {\n    return doc(this.getColRef(), reaction_id);\n  }\n\n\n  /**\n   * Add doc to Firestore collection.\n   * The Firestore document ID will be identical to the doc's Firebase authentication ID.\n   * @param doc - doc to be added\n   */\n  async addDoc(reaction: Reaction) {\n\n    await addDoc(this.getColRef(), reaction.toJson())\n      .then((response: any) => {\n        reaction.reaction_id = response.id;\n        this.updateDoc(reaction);\n      })\n      .catch((err: Error) => { console.error(err) });\n  }\n\n\n  /**\n   * Update doc in Firestore collection.\n   * The update will only be executed if the doc (i.e., its Firestore ID) exists in the Firestore collection.\n   * @param doc - doc to be updated\n   */\n  async updateDoc(reaction: Reaction) {\n    if (reaction.reaction_id) {\n      const docRef = this.getSingleDocRef(reaction.reaction_id);\n      await updateDoc(docRef, reaction.toJson())\n        .catch((err: Error) => { console.error(err) });\n    }\n  }\n\n\n  /**\n   * Delete doc from Firestore collection\n   * @param uid - Firestore doc ID of doc to be deleted\n   */\n  async deleteDoc(reaction_id: string) {\n    const docRef = this.getSingleDocRef(reaction_id);\n    await deleteDoc(docRef)\n      .catch((err: Error) => { console.error(err) });\n  }\n\n\n  getPostReactions(reactions: Reaction[], post_id: string): Reaction[] {\n    return reactions.filter(r => r.post_id === post_id).slice();\n  }\n\n  \n  getGroupedEmojis(reactions: Reaction[]): { [key: string]: { count: number, users: string[] } } {\n    let groups: { [key: string]: { count: number, users: string[] } } = {};\n\n    reactions.forEach(r => {\n      if (!groups[r.emoji]) {\n        groups[r.emoji] = { count: 0, users: [] };\n      }\n      groups[r.emoji].count++;\n      if (r.user_id) {\n        const user = this.usersService.getUserByUid(r.user_id);\n        if (user) {\n          groups[r.emoji].users.push(user.name);\n        }\n      }\n    });\n\n    return groups;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RequestPwResetComponent.html":{"url":"components/RequestPwResetComponent.html","title":"component - RequestPwResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RequestPwResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/request-pw-reset/request-pw-reset.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the password reset request page with the request form at the center.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-request-pw-reset\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterLink\n                                LegalFooterComponent\n                                ToastNotificationComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./request-pw-reset.component.html\n            \n\n\n\n            \n                styleUrl\n                ./request-pw-reset.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                data\n                            \n                            \n                                loading\n                            \n                            \n                                showToast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterToast\n                            \n                            \n                                onRequest\n                            \n                            \n                                onSubmit\n                            \n                            \n                                requestPasswordReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterToast\n                        \n                    \n                \n            \n            \n                \nafterToast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/request-pw-reset/request-pw-reset.component.ts:64\n                        \n                    \n\n\n            \n                \n                        This function is called when the toast notification timeout has expired.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRequest\n                        \n                    \n                \n            \n            \n                \nonRequest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/request-pw-reset/request-pw-reset.component.ts:56\n                        \n                    \n\n\n            \n                \n                        This function is triggered by the password reset request.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/request-pw-reset/request-pw-reset.component.ts:33\n                        \n                    \n\n\n            \n                \n                        This function is triggered by the request form submission.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nrequest form\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestPasswordReset\n                        \n                    \n                \n            \n            \n                \nrequestPasswordReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/request-pw-reset/request-pw-reset.component.ts:41\n                        \n                    \n\n\n            \n                \n                        This function requests the password reset using the authentication service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/request-pw-reset/request-pw-reset.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    email: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/request-pw-reset/request-pw-reset.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/request-pw-reset/request-pw-reset.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/request-pw-reset/request-pw-reset.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { LegalFooterComponent } from '../legal-footer/legal-footer.component';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastNotificationComponent } from '../toast-notification/toast-notification.component';\n\n\n/**\n * This component displays the password reset request page with the request form at the center.\n */\n@Component({\n  selector: 'app-request-pw-reset',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterLink, LegalFooterComponent, ToastNotificationComponent],\n  templateUrl: './request-pw-reset.component.html',\n  styleUrl: './request-pw-reset.component.scss'\n})\nexport class RequestPwResetComponent {\n  private authService = inject(AuthService);\n  data = {\n    email: ''\n  }\n  showToast: boolean = false;\n  loading: boolean = false;\n\n\n  /**\n   * This function is triggered by the request form submission.\n   * @param form - request form\n   */\n  onSubmit(form: NgForm) {\n    if (form.submitted && form.valid) { this.requestPasswordReset() }\n  }\n\n\n  /**\n   * This function requests the password reset using the authentication service.\n   */\n  requestPasswordReset() {\n    this.loading = true;\n    this.authService.requestPasswordReset(this.data.email).subscribe({\n      next: () => this.onRequest(),\n      error: (err) => {\n        console.error(err);\n        this.loading = false;\n      }\n    });\n  }\n\n\n  /**\n   * This function is triggered by the password reset request.\n   */\n  onRequest() {\n    this.showToast = true;\n  }\n\n\n  /**\n   * This function is called when the toast notification timeout has expired.\n   */\n  afterToast() {\n    this.loading = false;\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Passwort zurücksetzen\n            \n                \n                    \n                \n            \n        \n        Bitte geben Sie Ihre E-Mail-Adresse ein.\n        \n            mail\n            \n            @if(email.touched && !email.valid)\n            {\n                Diese E-Mail-Adresse ist leider ungültig.\n            }\n        \n        Wir senden Ihnen eine E-Mail, über die Sie Ihr Passwort ändern können.\n        \n            E-Mail\n                senden\n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Passwort zurücksetzen                                                                                            Bitte geben Sie Ihre E-Mail-Adresse ein.                    mail                        @if(email.touched && !email.valid)            {                Diese E-Mail-Adresse ist leider ungültig.            }                Wir senden Ihnen eine E-Mail, über die Sie Ihr Passwort ändern können.                    E-Mail                senden                '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RequestPwResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPwComponent.html":{"url":"components/ResetPwComponent.html","title":"component - ResetPwComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPwComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/reset-pw/reset-pw.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the password reset page with the reset form at the center.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-pw\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            RouterLink\n                                LegalFooterComponent\n                                ToastNotificationComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-pw.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-pw.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authError\n                            \n                            \n                                    Private\n                                authService\n                            \n                            \n                                loading\n                            \n                            \n                                oobCode\n                            \n                            \n                                passwords\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                showToast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterToast\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onError\n                            \n                            \n                                onPasswordReset\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetPassword\n                            \n                            \n                                setAuthError\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterToast\n                        \n                    \n                \n            \n            \n                \nafterToast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/reset-pw/reset-pw.component.ts:102\n                        \n                    \n\n\n            \n                \n                        This function is called when the toast notification timeout has expired.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/reset-pw/reset-pw.component.ts:37\n                        \n                    \n\n\n            \n                \n                        This function obtains the OOBCode from the Firebase email URL\nand stores it in the \"oobCode\" property.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/reset-pw/reset-pw.component.ts:85\n                        \n                    \n\n\n            \n                \n                        This function handles errors/exceptions during password reset.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPasswordReset\n                        \n                    \n                \n            \n            \n                \nonPasswordReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/reset-pw/reset-pw.component.ts:76\n                        \n                    \n\n\n            \n                \n                        This function is triggered by the password reset.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/reset-pw/reset-pw.component.ts:56\n                        \n                    \n\n\n            \n                \n                        This function is triggered by the reset form submission.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \npassword reset form\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/reset-pw/reset-pw.component.ts:64\n                        \n                    \n\n\n            \n                \n                        This function resets the password using the authentication service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAuthError\n                        \n                    \n                \n            \n            \n                \nsetAuthError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/reset-pw/reset-pw.component.ts:94\n                        \n                    \n\n\n            \n                \n                        This function sets the error message to be displayed to the user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n            \n                \nvalidateForm(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/reset-pw/reset-pw.component.ts:47\n                        \n                    \n\n\n            \n                \n                        This function validates the reset form input fields.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \npassword reset form\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                validation result\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authError\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-pw/reset-pw.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-pw/reset-pw.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-pw/reset-pw.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-pw/reset-pw.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwords\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    password: '',\n    passwordConfirmation: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-pw/reset-pw.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-pw/reset-pw.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-pw/reset-pw.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/reset-pw/reset-pw.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { RouterLink, Router, ActivatedRoute } from '@angular/router';\nimport { LegalFooterComponent } from '../legal-footer/legal-footer.component';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastNotificationComponent } from '../toast-notification/toast-notification.component';\n\n\n/**\n * This component displays the password reset page with the reset form at the center.\n */\n@Component({\n  selector: 'app-reset-pw',\n  standalone: true,\n  imports: [FormsModule, RouterLink, LegalFooterComponent, ToastNotificationComponent],\n  templateUrl: './reset-pw.component.html',\n  styleUrl: './reset-pw.component.scss'\n})\nexport class ResetPwComponent implements OnInit {\n  private authService = inject(AuthService);\n  private router = inject(Router);\n  private route = inject(ActivatedRoute);\n  passwords = {\n    password: '',\n    passwordConfirmation: ''\n  }\n  showToast: boolean = false;\n  authError: string | null = null;\n  loading: boolean = false;\n  oobCode: string = '';\n\n\n  /**\n   * This function obtains the OOBCode from the Firebase email URL\n   * and stores it in the \"oobCode\" property. \n   */\n  ngOnInit(): void {\n      this.route.queryParams.subscribe(params => this.oobCode = params['oobCode']);\n  }\n\n\n  /**\n   * This function validates the reset form input fields.\n   * @param form - password reset form\n   * @returns validation result\n   */\n  validateForm(form: NgForm) {\n    return form.valid && this.passwords.password == this.passwords.passwordConfirmation;\n  }\n\n\n  /**\n   * This function is triggered by the reset form submission.\n   * @param form - password reset form\n   */\n  onSubmit(form: NgForm) {\n    if (form.submitted && form.valid && this.oobCode.length > 0) {this.resetPassword() }\n  }\n\n\n  /**\n   * This function resets the password using the authentication service.\n   */\n  resetPassword() {\n    this.loading = true;\n    this.authService.resetPassword(this.oobCode, this.passwords.password).subscribe({\n      next: () => this.onPasswordReset(),\n      error: () => this.onError() \n    })\n  }\n\n\n  /**\n   * This function is triggered by the password reset.\n   */\n  onPasswordReset() {\n    this.showToast = true;\n  }\n\n\n  /**\n   * This function handles errors/exceptions during password reset.\n   * @param err - error\n   */\n  onError() {\n    this.setAuthError();\n    this.loading = false;    \n  }\n\n\n  /**\n   * This function sets the error message to be displayed to the user.\n   */\n  setAuthError() {\n    this.authError = 'Zurücksetzen fehlgeschlagen. Bitte versuchen Sie es erneut.';\n  }\n\n\n  /**\n   * This function is called when the toast notification timeout has expired.\n   */\n  afterToast() {\n    this.router.navigateByUrl('auth');\n  }\n}\n    \n\n    \n        \n    \n        \n            Passwort zurücksetzen\n            \n                \n                    \n                \n            \n        \n        \n            \n                \n                @if(password.touched && password.value.length == 0)\n                {\n                    Bitte geben Sie ein Passwort ein.\n                }\n                @else if(password.touched && password.value.length \n                    Ihr Passwort muss mindestens 6 Zeichen enthalten.\n                    }\n            \n            \n                \n                @if(passwordConfirmation.touched && !passwordConfirmation.valid)\n                {\n                    Bitte geben Sie ein Passwort ein.\n                }\n                @else if (password.value.length > 0 && passwordConfirmation.touched && password.value !=\n                passwordConfirmation.value)\n                {\n                    Ihre Kennwörter stimmen nicht überein.\n                }\n                @else if(resetPwForm.submitted && authError)\n                {{{authError}}}\n            \n            \n                Passwort\n                    ändern\n            \n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Passwort zurücksetzen                                                                                                                                        @if(password.touched && password.value.length == 0)                {                    Bitte geben Sie ein Passwort ein.                }                @else if(password.touched && password.value.length                     Ihr Passwort muss mindestens 6 Zeichen enthalten.                    }                                                        @if(passwordConfirmation.touched && !passwordConfirmation.valid)                {                    Bitte geben Sie ein Passwort ein.                }                @else if (password.value.length > 0 && passwordConfirmation.touched && password.value !=                passwordConfirmation.value)                {                    Ihre Kennwörter stimmen nicht überein.                }                @else if(resetPwForm.submitted && authError)                {{{authError}}}                                        Passwort                    ändern                            '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPwComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-up/sign-up.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the signup page with the signup form at the center.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterLink\n                                LegalFooterComponent\n                                ToastNotificationComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authError\n                            \n                            \n                                    Private\n                                authService\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                showToast\n                            \n                            \n                                user\n                            \n                            \n                                    Private\n                                usersService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterToast\n                            \n                            \n                                onError\n                            \n                            \n                                onSignUp\n                            \n                            \n                                onSubmit\n                            \n                            \n                                setAuthError\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterToast\n                        \n                    \n                \n            \n            \n                \nafterToast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:97\n                        \n                    \n\n\n            \n                \n                        This function is called when the toast notification timeout has expired.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n            \n                \nonError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:61\n                        \n                    \n\n\n            \n                \n                        This function handles system errors/exceptions during signup.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSignUp\n                        \n                    \n                \n            \n            \n                \nonSignUp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:70\n                        \n                    \n\n\n            \n                \n                        This function handles the sign in.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:40\n                        \n                    \n\n\n            \n                \n                        This function is triggered by the signup form submission.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nsignup form\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAuthError\n                        \n                    \n                \n            \n            \n                \nsetAuthError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:89\n                        \n                    \n\n\n            \n                \n                        This function sets the \"authError\" property.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:48\n                        \n                    \n\n\n            \n                \n                        This function signs up the new user via authentication service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authError\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: '',\n    email: '',\n    password: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { LegalFooterComponent } from '../legal-footer/legal-footer.component';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastNotificationComponent } from '../toast-notification/toast-notification.component';\nimport { User } from '../../../models/user.class';\nimport { UsersService } from '../../../services/users.service';\n\n\n/**\n * This component displays the signup page with the signup form at the center.\n */\n@Component({\n  selector: 'app-sign-up',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterLink, LegalFooterComponent, ToastNotificationComponent],\n  templateUrl: './sign-up.component.html',\n  styleUrl: './sign-up.component.scss'\n})\nexport class SignUpComponent {\n  private authService = inject(AuthService);\n  private usersService = inject(UsersService);\n  private router = inject(Router);\n  user = {\n    name: '',\n    email: '',\n    password: ''\n  }\n  showToast: boolean = false;\n  authError: string | null = null;\n  loading: boolean = false;\n\n\n  /**\n   * This function is triggered by the signup form submission.\n   * @param form - signup form\n   */\n  onSubmit(form: NgForm) {\n    if (form.submitted && form.valid) { this.signUp() }\n  }\n\n\n  /**\n   * This function signs up the new user via authentication service.\n   */\n  signUp() {\n    this.loading = true;\n    this.authService.register(this.user.name, this.user.email, this.user.password).subscribe({\n      next: () => this.onSignUp(),\n      error: () => this.onError()\n    });\n  }\n\n\n  /**\n   * This function handles system errors/exceptions during signup.\n   * @param err - error\n   */\n  onError() {\n    this.setAuthError();\n    this.loading = false;\n  }\n\n\n  /**\n   * This function handles the sign in.\n   */\n  onSignUp() {\n    this.showToast = true;\n    const uid = this.authService.getCurrentUid();\n    if (uid) {\n      const user = new User({\n        uid: uid,\n        name: this.user.name,\n        email: this.user.email\n      });\n      this.usersService.addUser(user)\n        .catch(() => this.onError());\n    }\n  }\n\n\n  /**\n   * This function sets the \"authError\" property.\n   * @param response - error from log in response\n   */\n  setAuthError() {\n    this.authError = 'Registrierung fehlgeschlagen. Bitte versuchen Sie es erneut.';\n  }\n\n\n  /**\n   * This function is called when the toast notification timeout has expired.\n   */\n  afterToast() {\n    this.router.navigateByUrl('auth/pickAvatar');\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Konto erstellen\n            \n                \n                    \n                \n            \n        \n        Mit deinem Namen und deiner E-Mail-Adresse hast du dein neues DABubble-Konto.\n        \n            person\n            \n            @if(name.touched && !name.valid)\n            {\n                Bitte schreiben Sie einen Namen.\n            }\n        \n        \n            mail\n            \n            @if(email.touched && !email.valid)\n            {\n                Diese E-Mail-Adresse ist leider ungültig.\n            }\n        \n        \n            lock\n            \n            @if(password.touched && password.value.length == 0)\n            {\n                Bitte geben Sie ein Passwort ein.\n            }\n            @else if(password.touched && password.value.length \n                Ihr Passwort muss mindestens 6 Zeichen enthalten.\n                }\n                @else if(signUpForm.submitted && authError)\n                {{{authError}}}\n        \n        \n            \n                \n                    \n                \n            \n            \n                Ich stimme der\n                Datenschutzerklärung\n                zu.\n            \n        \n        \n            Weiter\n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Konto erstellen                                                                                            Mit deinem Namen und deiner E-Mail-Adresse hast du dein neues DABubble-Konto.                    person                        @if(name.touched && !name.valid)            {                Bitte schreiben Sie einen Namen.            }                            mail                        @if(email.touched && !email.valid)            {                Diese E-Mail-Adresse ist leider ungültig.            }                            lock                        @if(password.touched && password.value.length == 0)            {                Bitte geben Sie ein Passwort ein.            }            @else if(password.touched && password.value.length                 Ihr Passwort muss mindestens 6 Zeichen enthalten.                }                @else if(signUpForm.submitted && authError)                {{{authError}}}                                                                                                                        Ich stimme der                Datenschutzerklärung                zu.                                        Weiter                '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatarsRef\n                            \n                            \n                                storage\n                            \n                            \n                                storageRef\n                            \n                            \n                                tempAvatarsRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cancelAvatar\n                            \n                            \n                                    Async\n                                deleteFolder\n                            \n                            \n                                generateAvatarName\n                            \n                            \n                                    Async\n                                getAvatarRef\n                            \n                            \n                                    Async\n                                getTempAvatarRef\n                            \n                            \n                                    Async\n                                getUrl\n                            \n                            \n                                isImage\n                            \n                            \n                                    Async\n                                upload\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                            \n                                    Async\n                                uploadImage\n                            \n                            \n                                    Async\n                                uploadTempAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/storage.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cancelAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    cancelAvatar(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Deletes a file with the main user ID in the Temp folder\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nthe ID of current MainUser\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFolder\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFolder(ref: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ref\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateAvatarName\n                        \n                    \n                \n            \n            \n                \ngenerateAvatarName(img: File, uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                img\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAvatarRef\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAvatarRef(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTempAvatarRef\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTempAvatarRef(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage.service.ts:90\n                        \n                    \n\n\n            \n                \n                        Searches the Temp folder for files with the main user ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nthe ID of current MainUser\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA reference of image file or undefined\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUrl(fileRef: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileRef\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isImage\n                        \n                    \n                \n            \n            \n                \nisImage(img: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                img\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(file: File, ref: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ref\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(img: File, uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                img\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadImage(img: File, ref: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                img\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ref\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadTempAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadTempAvatar(img: File, uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Function to upload a temporary avatar image\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                img\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA reference of image file\n\n\n                                            \n                                        \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nthe ID of current MainUser\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatarsRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ref(this.storage, 'avatars')\n                    \n                \n                    \n                        \n                                Defined in src/services/storage.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Storage)\n                    \n                \n                    \n                        \n                                Defined in src/services/storage.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ref(this.storage)\n                    \n                \n                    \n                        \n                                Defined in src/services/storage.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempAvatarsRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ref(this.storage, 'tempAvatars')\n                    \n                \n                    \n                        \n                                Defined in src/services/storage.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport {\n  Storage,\n  ref,\n  uploadBytesResumable,\n  listAll,\n  deleteObject,\n  getDownloadURL\n} from '@angular/fire/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  storage = inject(Storage);\n  storageRef = ref(this.storage);\n  avatarsRef = ref(this.storage, 'avatars');\n  tempAvatarsRef = ref(this.storage, 'tempAvatars');\n\n  constructor() { }\n\n  async upload(file: File, ref: any) {\n    await uploadBytesResumable(ref, file);\n  }\n\n  async uploadImage(img: File, ref: any): Promise {\n    if (this.isImage(img)) {\n      await this.upload(img, ref);\n      return this.getUrl(ref);\n    } else {\n      throw ('err/not-an-image');\n    }\n  }\n\n  isImage(img: File): boolean {\n    return img.type.includes('image');\n  }\n\n\n  // not in use so far\n  async deleteFolder(ref: any) {\n    await listAll(ref)\n      .then((dir: any) => {\n        dir.items.forEach((fileRef: any) => deleteObject(fileRef));\n        dir.prefixes.forEach((folderRef: any) => this.deleteFolder(folderRef.fullPath))\n      })\n      .catch((err: Error) => console.error(err));\n  }\n\n\n  async getUrl(fileRef: any): Promise {\n    return await getDownloadURL(fileRef);\n  }\n\n\n    // Methode zum Hochladen des temporären Avatars\n    /**\n     * Function to upload a temporary avatar image\n     * \n     * @param img - A reference of image file\n     * @param uid - the ID of current MainUser\n     * @returns \n     */\n    async uploadTempAvatar(img: File, uid: string): Promise {\n        const relFilePath = 'tempAvatars/' + this.generateAvatarName(img, uid);\n        const fileRef = ref(this.storage, relFilePath);\n        return await this.uploadImage(img, fileRef);\n    }\n\n\n    /**\n     * Deletes a file with the main user ID in the Temp folder\n     * \n     * @param uid - the ID of current MainUser\n     */\n    async cancelAvatar(uid: string): Promise {\n        const tempAvatarRef = await this.getTempAvatarRef(uid);\n        if (tempAvatarRef) {\n            await deleteObject(tempAvatarRef);\n        }\n    }\n\n\n    /**\n     * Searches the Temp folder for files with the main user ID\n     * \n     * @param uid - the ID of current MainUser\n     * @returns - A reference of image file or undefined\n     */\n    async getTempAvatarRef(uid: string): Promise {\n        let fileFound = false;\n        return await listAll(this.tempAvatarsRef)\n            .then((dir: any) => {\n                for (const fileRef of dir.items) {\n                    if (fileRef.name.includes(uid)) {\n                        fileFound = true;\n                        return fileRef;\n                    }\n                }\n                if (!fileFound) {\n                    return undefined;\n                }\n            })\n            .catch((err: Error) => console.error(err));\n    }\n\n\n  // OPTIONAL: implement file compression or maximum file size on upload\n  async uploadAvatar(img: File, uid: string): Promise {\n    const relFilePath = 'avatars/' + this.generateAvatarName(img, uid);\n    const fileRef: any = ref(this.storage, relFilePath);\n    const previousAvatarRef = await this.getAvatarRef(uid)\n    if (previousAvatarRef) { await deleteObject(previousAvatarRef) };\n    return await this.uploadImage(img, fileRef);\n  }\n\n\n  generateAvatarName(img: File, uid: string): string {\n    const nameParts = img.name.split('.');\n    const fileExtension = nameParts[nameParts.length - 1];\n    return uid + '.' + fileExtension;\n  }\n\n\n  async getAvatarRef(uid: string): Promise {\n    return await listAll(this.avatarsRef)\n      .then((dir: any) => {\n        dir.items.forEach((fileRef: any) => { if (fileRef.name.includes(uid)) { return fileRef } });\n        return undefined;\n      })\n      .catch((err: Error) => console.error(err));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Thread.html":{"url":"classes/Thread.html","title":"class - Thread","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Thread\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/thread.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channel_id\n                            \n                            \n                                date\n                            \n                            \n                                thread_id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/thread.class.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channel_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/thread.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/thread.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thread_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/thread.class.ts:2\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/thread.class.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { thread_id: string; channel_id: string; date: number; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Thread {\n    thread_id: string;\n    channel_id: string;\n    date: number;\n    \n    constructor(obj?: any) {\n        this.thread_id = obj && obj.thread_id ? obj.thread_id : '';\n        this.channel_id = obj && obj.channel_id ? obj.channel_id : '';\n        this.date = obj && obj.date ? obj.date : '';\n    }\n\n    toJson() {\n        return {\n            thread_id: this.thread_id,\n            channel_id: this.channel_id,\n            date: this.date\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreadComponent.html":{"url":"components/ThreadComponent.html","title":"component - ThreadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/thread/thread.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-thread\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                MessageItemComponent\n                                MessageBoxComponent\n                            PickerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./thread.component.html\n            \n\n\n\n            \n                styleUrl\n                ./thread.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emojiPicker\n                            \n                            \n                                thread\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEmoji\n                            \n                            \n                                handleStateChange\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openUserProfile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                thread\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    emojis\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(emojiService: EmojiService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/thread/thread.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emojiService\n                                                  \n                                                        \n                                                                        EmojiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        thread\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/thread/thread.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEmoji\n                        \n                    \n                \n            \n            \n                \naddEmoji(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/thread/thread.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleStateChange\n                        \n                    \n                \n            \n            \n                \nhandleStateChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/thread/thread.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/thread/thread.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserProfile\n                        \n                    \n                \n            \n            \n                \nopenUserProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/thread/thread.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emojiPicker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/thread/thread.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thread\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/thread/thread.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        emojis\n                    \n                \n\n                \n                    \n                        getemojis()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/thread/thread.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, input, Input, OnInit } from '@angular/core';\nimport { MessageItemComponent } from \"../message-item/message-item.component\";\nimport { MessageBoxComponent } from \"../message-box/message-box.component\";\nimport { EmojiService } from '../../../services/emoji-service/emoji-service';\nimport { PickerComponent } from '@ctrl/ngx-emoji-mart';\nimport { CommonModule } from '@angular/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UserProfileCardComponent } from '../../user-profile-card/user-profile-card.component';\nimport { Thread } from '../../../models/thread.class';\n\n@Component({\n    selector: 'app-thread',\n    standalone: true,\n    templateUrl: './thread.component.html',\n    styleUrl: './thread.component.scss',\n    imports: [CommonModule, MessageItemComponent, MessageBoxComponent, PickerComponent]\n})\nexport class ThreadComponent implements OnInit {\n    thread = input.required();\n    emojiPicker = false;\n\n    constructor(private emojiService: EmojiService, private dialog: MatDialog) { }\n\n    ngOnInit(): void {\n    }\n\n\n    handleStateChange(newState: boolean) {\n        this.emojiPicker = newState;\n    }\n\n    addEmoji(event: any) {\n        this.emojiService.addEmoji({\n            unified: event.emoji.unified,\n            native: event.emoji.native\n        });\n        this.emojiPicker = !this.emojiPicker;\n        console.log(this.emojiService.getEmojis());\n    }\n\n    \n    get emojis() {\n        return this.emojiService.getEmojis();\n    }\n\n\n    openUserProfile(): void {\n        this.dialog.open(UserProfileCardComponent);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                Thread\n                # Entwicklerteam\n            \n            \n                close\n            \n        \n        \n            \n                \n                    \n                        \n                            \n                                👍\n                             -->\n                            \n                                add_reaction\n                            \n                            \n                                more_verti\n                             -->\n                        \n                        \n                            \n                        \n                        \n                            \n                                Noah Braun\n                                15:32 Uhr\n                            \n                            \n                                Welche Version ist aktuell von Angular?\n                            \n                            \n                                2 Antworten\n                                Letzte Antwort 14:56\n                            \n                            \n                                \n                                    \n                                        😱\n                                        Max Musterman\n                                        hat reagiert\n                                    \n                                    😱\n                                    1\n                                \n                                \n                                    \n                                        🚀\n                                        Max Musterman\n                                        hat reagiert\n                                    \n                                    🚀\n                                    1\n                                \n                                \n                                    add_reaction\n                                \n                            \n                        \n                    \n                \n                2 Antworten\n            \n            \n                \n                \n                \n                 -->\n            \n        \n    \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Thread                # Entwicklerteam                                        close                                                                                                                                                                👍                             -->                                                            add_reaction                                                                                        more_verti                             -->                                                                                                                                                                                        Noah Braun                                15:32 Uhr                                                                                        Welche Version ist aktuell von Angular?                                                                                        2 Antworten                                Letzte Antwort 14:56                                                                                                                                                                    😱                                        Max Musterman                                        hat reagiert                                                                        😱                                    1                                                                                                                                            🚀                                        Max Musterman                                        hat reagiert                                                                        🚀                                    1                                                                                                    add_reaction                                                                                                                                        2 Antworten                                                                                         -->                                '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThreadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThreadsService.html":{"url":"injectables/ThreadsService.html","title":"injectable - ThreadsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThreadsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/content/threads.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firestore\n                            \n                            \n                                    Private\n                                postsService\n                            \n                            \n                                threads\n                            \n                            \n                                threads$\n                            \n                            \n                                unsubThreads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addDoc\n                            \n                            \n                                    Async\n                                createThread\n                            \n                            \n                                    Async\n                                deleteDoc\n                            \n                            \n                                getChannelThreads\n                            \n                            \n                                getColRef\n                            \n                            \n                                getSingleDocRef\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                subThreads\n                            \n                            \n                                    Async\n                                updateDoc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/content/threads.service.ts:19\n                            \n                        \n\n                \n                    \n                            Create subscription\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDoc(thread: Thread)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/threads.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Add doc to Firestore collection.\nThe Firestore document ID will be identical to the doc's Firebase authentication ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                thread\n                                            \n                                                            Thread\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createThread\n                        \n                    \n                \n            \n            \n                \n                        \n                    createThread(message: string, channel_id: string, author_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/threads.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                author_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDoc(thread_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/threads.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Delete doc from Firestore collection\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                thread_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChannelThreads\n                        \n                    \n                \n            \n            \n                \ngetChannelThreads(threads: Thread[], channel_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/threads.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                threads\n                                            \n                                                            Thread[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Thread[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColRef\n                        \n                    \n                \n            \n            \n                \ngetColRef()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/threads.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Get reference to Firestore \"threads\" collection\n\n\n                        \n                            Returns :     CollectionReference\n\n                        \n                            \n                                reference\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSingleDocRef\n                        \n                    \n                \n            \n            \n                \ngetSingleDocRef(thread_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/threads.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Get reference to single doc Firestore data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                thread_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nFirestore thread ID\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DocumentReference\n\n                        \n                            \n                                reference\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/threads.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Unsubscribe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subThreads\n                        \n                    \n                \n            \n            \n                \nsubThreads()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/threads.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDoc(thread: Thread)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/content/threads.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Update doc in Firestore collection.\nThe update will only be executed if the doc (i.e., its Firestore ID) exists in the Firestore collection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                thread\n                                            \n                                                            Thread\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/services/content/threads.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PostsService)\n                    \n                \n                    \n                        \n                                Defined in src/services/content/threads.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threads\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Thread[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/content/threads.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threads$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/content/threads.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubThreads\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/services/content/threads.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject, OnDestroy } from '@angular/core';\nimport { Firestore, collection, doc, onSnapshot, updateDoc, deleteDoc } from '@angular/fire/firestore';\nimport { Subject } from 'rxjs';\nimport { CollectionReference, DocumentReference, addDoc } from 'firebase/firestore';\nimport { Thread } from '../../models/thread.class';\nimport { PostsService } from './posts.service';\nimport { Post } from '../../models/post.class';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThreadsService implements OnDestroy {\n  threads: Thread[] = [];\n  threads$: Subject = new Subject();\n  unsubThreads;\n\n  firestore: Firestore = inject(Firestore);\n  private postsService = inject(PostsService);\n\n  /**\n   * Create subscription\n   */\n  constructor() {\n    this.unsubThreads = this.subThreads();\n  }\n\n  /**\n   * Unsubscribe\n   */\n  ngOnDestroy() {\n    // this.unsubThreads();\n  }\n\n  subThreads() {\n    return onSnapshot(this.getColRef(), (list: any) => {\n      let threads: Thread[] = [];\n      list.forEach((element: any) => threads.push(element.data()));\n      this.threads = threads;\n      this.threads$.next(threads);\n    });\n  }\n\n  /**\n   * Get reference to Firestore \"threads\" collection\n   * @returns reference\n   */\n  getColRef(): CollectionReference {\n    return collection(this.firestore, 'threads');\n  }\n\n\n  /**\n   * Get reference to single doc Firestore data\n   * @param thread_id - Firestore thread ID\n   * @returns reference\n   */\n  getSingleDocRef(thread_id: string): DocumentReference {\n    return doc(this.getColRef(), thread_id);\n  }\n\n\n  /**\n   * Add doc to Firestore collection.\n   * The Firestore document ID will be identical to the doc's Firebase authentication ID.\n   * @param doc - doc to be added\n   */\n\n  async addDoc(thread: Thread): Promise {\n    try {\n      const response = await addDoc(this.getColRef(), thread.toJson());\n      thread.thread_id = response.id;\n      thread.date = Date.now();\n      await this.updateDoc(thread);\n      return response.id;\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n\n  async createThread(message: string, channel_id: string, author_id: string): Promise {\n    try {\n      const thread = new Thread({ channel_id: channel_id });\n      const thread_id = await this.addDoc(thread);\n      const post = new Post({ message: message, user_id: author_id, thread_id: thread_id });\n      await this.postsService.addDoc(post);\n      return thread_id;\n    } catch (err) {\n      console.error(err);\n      throw err;  \n    }\n  }\n\n  /**\n   * Update doc in Firestore collection.\n   * The update will only be executed if the doc (i.e., its Firestore ID) exists in the Firestore collection.\n   * @param doc - doc to be updated\n   */\n  async updateDoc(thread: Thread) {\n    if (thread.thread_id) {\n      const docRef = this.getSingleDocRef(thread.thread_id);\n      await updateDoc(docRef, thread.toJson())\n        .catch((err: Error) => { console.error(err) });\n    }\n  }\n\n  /**\n   * Delete doc from Firestore collection\n   * @param uid - Firestore doc ID of doc to be deleted\n   */\n  async deleteDoc(thread_id: string) {\n    const docRef = this.getSingleDocRef(thread_id);\n    await deleteDoc(docRef)\n      .catch((err: Error) => { console.error(err) });\n  }\n\n  getChannelThreads(threads: Thread[], channel_id: string): Thread[] {\n    threads = threads.filter(t => t.channel_id == channel_id);\n    threads.sort((a, b) => a.date - b.date);\n    threads.forEach(t => t = new Thread(t));\n    return threads;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeSeparatorComponent.html":{"url":"components/TimeSeparatorComponent.html","title":"component - TimeSeparatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimeSeparatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/time-separator/time-separator.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-time-separator\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./time-separator.component.html\n            \n\n\n\n            \n                styleUrl\n                ./time-separator.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                timeService\n                            \n                            \n                                timestamp\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timestamp\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/time-separator/time-separator.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TimeService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/time-separator/time-separator.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/time-separator/time-separator.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, input, inject } from '@angular/core';\nimport { TimeService } from '../../../services/time.service';\n\n@Component({\n  selector: 'app-time-separator',\n  standalone: true,\n  imports: [],\n  templateUrl: './time-separator.component.html',\n  styleUrl: './time-separator.component.scss'\n})\nexport class TimeSeparatorComponent {\n  timestamp = input.required();\n  public timeService = inject(TimeService);\n}\n\n    \n\n    \n        \n    \n    {{timeService.toDate(timestamp())}}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{timeService.toDate(timestamp())}}    '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeSeparatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeService.html":{"url":"injectables/TimeService.html","title":"injectable - TimeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/time.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRelativeDay\n                            \n                            \n                                toClock\n                            \n                            \n                                toDate\n                            \n                            \n                                toRelativeDate\n                            \n                            \n                                toRelativeDateWithClock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/time.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRelativeDay\n                        \n                    \n                \n            \n            \n                \ngetRelativeDay(diffInDays: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/time.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                diffInDays\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toClock\n                        \n                    \n                \n            \n            \n                \ntoClock(timestamp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/time.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                timestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toDate\n                        \n                    \n                \n            \n            \n                \ntoDate(timestamp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/time.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                timestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toRelativeDate\n                        \n                    \n                \n            \n            \n                \ntoRelativeDate(timestamp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/time.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                timestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toRelativeDateWithClock\n                        \n                    \n                \n            \n            \n                \ntoRelativeDateWithClock(timestamp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/time.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                timestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeService {\n\n  constructor() { }\n\n  toClock(timestamp: number): string {\n    const date = new Date(timestamp);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const formattedHours = hours.toString().padStart(2, '0');\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    return formattedHours + ':' + formattedMinutes;\n  }\n\n  toDate(timestamp: number): string {\n    const date = new Date(timestamp);\n    const daysOfWeek = [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"];\n    const months = [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"];\n    const dayOfWeek = daysOfWeek[date.getDay()];\n    const day = date.getDate();\n    const month = months[date.getMonth()];\n    return `${dayOfWeek}, ${day} ${month}`;\n  }\n\n  toRelativeDate(timestamp: number): string {\n    const now = new Date();\n    const date = new Date(timestamp);\n    const midnight = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const msInDay = 86400000;\n    const diffInMs = midnight.getTime() - date.getTime();\n    const diffInDays = Math.floor(diffInMs / msInDay);\n    return this.getRelativeDay(diffInDays);\n  }\n\n  getRelativeDay(diffInDays: number): string {\n    switch(diffInDays) {\n      case 0: return 'heute';\n      case 1: return 'gestern';\n      case 2: return 'vorgestern';\n    }\n    return `vor ${diffInDays} Tagen`;\n  }\n\n  toRelativeDateWithClock(timestamp: number): string {\n    const now = new Date();\n    const date = new Date(timestamp);\n    const midnight = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const msInDay = 86400000;\n    const diffInMs = midnight.getTime() - date.getTime();\n    if (diffInMs \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastNotificationComponent.html":{"url":"components/ToastNotificationComponent.html","title":"component - ToastNotificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastNotificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/toast-notification/toast-notification.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a toast notification to the user.\nThe message is handled via the input parameter \"message\".\nAfter the message timeout has expired, the component will output a  \"then\" event.\nExample of usage:\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast-notification\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./toast-notification.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toast-notification.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _showing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onShow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                showing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                then\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    showing\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :     \"login\" | \"signup\" | \"email\" | \"resetPw\"\n\n                    \n                \n                \n                    \n                        Default value : 'login'\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/toast-notification/toast-notification.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/toast-notification/toast-notification.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        then\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/toast-notification/toast-notification.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onShow\n                        \n                    \n                \n            \n            \n                \nonShow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/toast-notification/toast-notification.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _showing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/toast-notification/toast-notification.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        showing\n                    \n                \n\n                \n                    \n                        getshowing()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/toast-notification/toast-notification.component.ts:33\n                                \n                            \n\n                \n                    \n                        setshowing(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/toast-notification/toast-notification.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n\n/**\n * This component displays a toast notification to the user.\n * \n * The message is handled via the input parameter \"message\".\n * After the message timeout has expired, the component will output a  \"then\" event.\n * \n * Example of usage:\n * \n */\n@Component({\n  selector: 'app-toast-notification',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './toast-notification.component.html',\n  styleUrl: './toast-notification.component.scss'\n})\nexport class ToastNotificationComponent {\n  @Input() message: 'login' | 'signup' | 'email' | 'resetPw' = 'login';\n  @Output() then = new EventEmitter;\n\n  private _showing: boolean = false;\n  @Input()\n  set showing(value: boolean) {\n    if (value) {\n      this._showing = true;\n      this.onShow();\n    }\n  };\n  get showing(): boolean {\n    return this._showing;\n  }\n\n  onShow() {\n    setTimeout(() => {\n      this._showing = false;\n      this.then.emit();\n    }, 1300);\n  }\n}\n\n    \n\n    \n        \n    @if(message == 'login')\n    {Anmelden}\n    @else if (message == 'signup')\n    {Konto erfolgreich erstellt!}\n    @else if (message == 'email') {\n        send\n        E-Mail gesendet\n    }\n    @else if (message == 'resetPw') {\n        Passwort zurückgesetzt\n    }  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if(message == \\'login\\')    {Anmelden}    @else if (message == \\'signup\\')    {Konto erfolgreich erstellt!}    @else if (message == \\'email\\') {        send        E-Mail gesendet    }    @else if (message == \\'resetPw\\') {        Passwort zurückgesetzt    }  '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastNotificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatarSrc\n                            \n                            \n                                email\n                            \n                            \n                                lastActivity\n                            \n                            \n                                name\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/user.class.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatarSrc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastActivity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user.class.ts:2\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/user.class.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { uid: string; name: string; email: string; avatarSrc: string; lastActivity: number; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    uid: string;\n    name: string;\n    email: string;\n    avatarSrc: string;\n    lastActivity: number;\n    \n    constructor(obj?: any) {\n        this.uid = obj && obj.uid ? obj.uid : '';\n        this.name = obj && obj.name ? obj.name : '';\n        this.email = obj && obj.email ? obj.email : '';\n        this.avatarSrc = obj && obj.avatarSrc ? obj.avatarSrc : 'assets/img/profile_blank.svg';\n        this.lastActivity = obj && obj.lastActivity ? obj.lastActivity : 0;        \n    }\n\n    toJson() {\n        return {\n            uid: this.uid,\n            name: this.name,\n            email: this.email,\n            avatarSrc: this.avatarSrc,\n            lastActivity: this.lastActivity\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileCardComponent.html":{"url":"components/UserProfileCardComponent.html","title":"component - UserProfileCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-profile-card/user-profile-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-profile-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-profile-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-profile-card/user-profile-card.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeCard\n                        \n                    \n                \n            \n            \n                \ncloseCard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile-card/user-profile-card.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-user-profile-card',\n  standalone: true,\n  imports: [RouterModule,RouterLink],\n  templateUrl: './user-profile-card.component.html',\n  styleUrl: './user-profile-card.component.scss'\n})\nexport class UserProfileCardComponent {\n  constructor(private dialogRef: MatDialogRef) { }\n  closeCard(){\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    Profil\n    \n      \n        \n    \n  \n  \n    \n  \n  \n    Sofia Müller\n    \n      \n      Aktiv\n    \n  \n  \n    \n      \n      E-Mail-Adresse\n    \n    \n      sofia.muel&#64;beispiel.com\n    \n  \n  \n    \n    \n      Nachricht\n      \n    \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Profil                                      Sofia Müller                Aktiv                        E-Mail-Adresse              sofia.muel@beispiel.com                      Nachricht              '\n    var COMPONENTS = [{'name': 'AddChannelComponent', 'selector': 'app-add-channel'},{'name': 'AddMembersAfterAddChannelComponent', 'selector': 'app-add-members-after-add-channel'},{'name': 'AddMembersComponent', 'selector': 'app-add-members'},{'name': 'AnimationIntroComponent', 'selector': 'app-animation-intro'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DirectMessageComponent', 'selector': 'app-direct-message'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditMainUserAvatarComponent', 'selector': 'app-edit-main-user-avatar'},{'name': 'EditMainUserProfileCardComponent', 'selector': 'app-edit-main-user-profile-card'},{'name': 'EditUserProfileCardComponent', 'selector': 'app-edit-user-profile-card'},{'name': 'ExpandableButtonComponent', 'selector': 'app-expandable-button'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImpressComponent', 'selector': 'app-impress'},{'name': 'LegalFooterComponent', 'selector': 'app-legal-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogOutCardComponent', 'selector': 'app-edit-user-log-out-card'},{'name': 'MainChatComponent', 'selector': 'app-main-chat'},{'name': 'MainUserProfileCardComponent', 'selector': 'app-main-user-profile-card'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageItemComponent', 'selector': 'app-message-item'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NewMessageComponent', 'selector': 'app-new-message'},{'name': 'PickAvatarComponent', 'selector': 'app-pick-avatar'},{'name': 'PLAYGROUNDComponent', 'selector': 'app-playground'},{'name': 'PrivacypolicyComponent', 'selector': 'app-privacypolicy'},{'name': 'RequestPwResetComponent', 'selector': 'app-request-pw-reset'},{'name': 'ResetPwComponent', 'selector': 'app-reset-pw'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'},{'name': 'UserProfileCardComponent', 'selector': 'app-user-profile-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/userState.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:     \"active\" | \"idle\" | \"loggedOut\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"active\" | \"idle\" | \"loggedOut\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserState {\n    uid: string;\n    state: 'active' | 'idle' | 'loggedOut';\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This injectable handles generic users operations.\nThis includes Firestore communication.\nHowever, Firebase authentication is not included here\n(see \"authService\" for user authentication).\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channelsService\n                            \n                            \n                                firestore\n                            \n                            \n                                unsubUsers\n                            \n                            \n                                users\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                getColRef\n                            \n                            \n                                getSingleDocRef\n                            \n                            \n                                getUserByUid\n                            \n                            \n                                isRegisteredUser\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                subUsers\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/users.service.ts:23\n                            \n                        \n\n                \n                    \n                            Create subscription\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    addUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/users.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Add user to Firestore collection.\nThe Firestore document ID will be identical to the user's Firebase authentication ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nuser to be added\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/users.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Delete user from Firestore collection\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nFirestore user ID of user to be deleted\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColRef\n                        \n                    \n                \n            \n            \n                \ngetColRef()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/users.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Get reference to Firestore \"users\" collection\n\n\n                        \n                            Returns :     CollectionReference\n\n                        \n                            \n                                reference\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSingleDocRef\n                        \n                    \n                \n            \n            \n                \ngetSingleDocRef(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/users.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Get reference to single user Firestore data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DocumentReference\n\n                        \n                            \n                                reference\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByUid\n                        \n                    \n                \n            \n            \n                \ngetUserByUid(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/users.service.ts:120\n                        \n                    \n\n\n            \n                \n                        Retrieve a complete user object from user ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nFirestore user ID\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                user object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRegisteredUser\n                        \n                    \n                \n            \n            \n                \nisRegisteredUser(authUid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/users.service.ts:133\n                        \n                    \n\n\n            \n                \n                        This function checks whether a user is registered. It checks if\na given UID is included in the users array.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                authUid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUID to be checked\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/users.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Unsubscribe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subUsers\n                        \n                    \n                \n            \n            \n                \nsubUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/users.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Subscribe to Firestore \"users\" collection to synchronize \"users\" array.\nAlso trigger \"users$\" observable on snapshot.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                subscription\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/users.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Update user in Firestore collection.\nThe update will only be executed if the user (i.e., its Firestore ID) exists in the Firestore collection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nuser to be updated\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channelsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ChannelsService)\n                    \n                \n                    \n                        \n                                Defined in src/services/users.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/services/users.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubUsers\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/services/users.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/users.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/users.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject, OnDestroy } from '@angular/core';\nimport { Firestore, collection, doc, onSnapshot, setDoc, updateDoc, deleteDoc } from '@angular/fire/firestore';\nimport { Subject } from 'rxjs';\nimport { User } from '../models/user.class';\nimport { CollectionReference, DocumentReference, addDoc } from 'firebase/firestore';\nimport { ChannelsService } from './content/channels.service';\n\n\n/**\n * This injectable handles generic users operations.\n * This includes Firestore communication.\n * However, Firebase authentication is not included here\n * (see \"authService\" for user authentication). \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService implements OnDestroy {\n  users: User[] = [];\n  users$: Subject = new Subject();\n  unsubUsers;\n  firestore: Firestore = inject(Firestore);\n  private channelsService = inject(ChannelsService);\n\n\n  /**\n   * Create subscription\n   */\n  constructor() {\n    this.unsubUsers = this.subUsers();\n  }\n\n\n  /**\n   * Unsubscribe\n   */\n  ngOnDestroy() {\n    this.unsubUsers();\n  }\n\n\n  /**\n   * Subscribe to Firestore \"users\" collection to synchronize \"users\" array.\n   * Also trigger \"users$\" observable on snapshot.\n   * @returns subscription\n   */\n  subUsers() {\n    return onSnapshot(this.getColRef(), (list: any) => {\n      this.users = [];\n      list.forEach((element: any) => {\n        this.users.push(new User(element.data()));\n      });\n      this.users$.next();\n    });\n  }\n\n\n  /**\n   * Get reference to Firestore \"users\" collection\n   * @returns reference\n   */\n  getColRef(): CollectionReference {\n    return collection(this.firestore, 'users');\n  }\n\n\n  /**\n   * Get reference to single user Firestore data\n   * @param id - Firestore task ID\n   * @returns reference\n   */\n  getSingleDocRef(uid: string): DocumentReference {\n    return doc(this.getColRef(), uid);\n  }\n\n\n  /**\n   * Add user to Firestore collection.\n   * The Firestore document ID will be identical to the user's Firebase authentication ID.\n   * @param user - user to be added\n   */\n  async addUser(user: User) {\n    user.lastActivity = Date.now();\n    await setDoc(this.getSingleDocRef(user.uid), user.toJson())\n      .then(() => this.channelsService.initUserChannels(user))\n      .catch((err: Error) => { console.error(err) });\n  }\n\n\n  /**\n   * Update user in Firestore collection.\n   * The update will only be executed if the user (i.e., its Firestore ID) exists in the Firestore collection.\n   * @param user - user to be updated\n   */\n  async updateUser(user: User) {\n    if (user.uid) {\n      const docRef = this.getSingleDocRef(user.uid);\n      await updateDoc(docRef, user.toJson())\n        .catch((err: Error) => { console.error(err) });\n    }\n  }\n\n\n  /**\n   * Delete user from Firestore collection\n   * @param uid - Firestore user ID of user to be deleted\n   */\n  async deleteUser(uid: string) {\n    const docRef = this.getSingleDocRef(uid);\n    await deleteDoc(docRef)\n      .catch((err: Error) => { console.error(err) });\n  }\n\n\n  /**\n   * Retrieve a complete user object from user ID\n   * @param uid - Firestore user ID\n   * @returns user object\n   */\n  getUserByUid(uid: string): User {\n    let user = new User();\n    this.users.forEach(u => { if (u.uid == uid) { user = u } });\n    return user;\n  }\n\n\n  /**\n   * This function checks whether a user is registered. It checks if\n   * a given UID is included in the users array.\n   * @param authUid - UID to be checked\n   * @returns check result\n   */\n  isRegisteredUser(authUid: string): boolean {\n    return this.getUserByUid(authUid).uid.length > 0;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/add-channel/add-channel.component.ts\n            \n            component\n            AddChannelComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/add-members-after-add-channel/add-members-after-add-channel.component.ts\n            \n            component\n            AddMembersAfterAddChannelComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/add-members/add-members.component.ts\n            \n            component\n            AddMembersComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/animation-intro/animation-intro.component.ts\n            \n            component\n            AnimationIntroComponent\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/legal-footer/legal-footer.component.ts\n            \n            component\n            LegalFooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                68 %\n                (17/25)\n            \n        \n        \n            \n                \n                src/app/auth/pick-avatar/pick-avatar.component.ts\n            \n            component\n            PickAvatarComponent\n            \n                59 %\n                (16/27)\n            \n        \n        \n            \n                \n                src/app/auth/request-pw-reset/request-pw-reset.component.ts\n            \n            component\n            RequestPwResetComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/auth/reset-pw/reset-pw.component.ts\n            \n            component\n            ResetPwComponent\n            \n                52 %\n                (9/17)\n            \n        \n        \n            \n                \n                src/app/auth/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/app/auth/toast-notification/toast-notification.component.ts\n            \n            component\n            ToastNotificationComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/components/direct-message/direct-message.component.ts\n            \n            component\n            DirectMessageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/expandable-button/expandable-button.component.ts\n            \n            component\n            ExpandableButtonComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/main-chat/main-chat.component.ts\n            \n            component\n            MainChatComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/components/message-box/message-box.component.ts\n            \n            component\n            MessageBoxComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/components/message-item/message-item.component.ts\n            \n            component\n            MessageItemComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/components/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/new-message/new-message.component.ts\n            \n            component\n            NewMessageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/thread/thread.component.ts\n            \n            component\n            ThreadComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/time-separator/time-separator.component.ts\n            \n            component\n            TimeSeparatorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/edit-channel/edit-channel.component.ts\n            \n            component\n            EditChannelComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/edit-user-profile-card/edit-user-profile-card.component.ts\n            \n            component\n            EditUserProfileCardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/home/legal/impress/impress.component.ts\n            \n            component\n            ImpressComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/legal/privacypolicy/privacypolicy.component.ts\n            \n            component\n            PrivacypolicyComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/main-user/edit-main-user-avatar/edit-main-user-avatar.component.ts\n            \n            component\n            EditMainUserAvatarComponent\n            \n                29 %\n                (10/34)\n            \n        \n        \n            \n                \n                src/app/main-user/edit-main-user-profile-card/edit-main-user-profile-card.component.ts\n            \n            component\n            EditMainUserProfileCardComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/main-user/log-out-card/log-out-card.component.ts\n            \n            component\n            LogOutCardComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/main-user/main-user-profile-card/main-user-profile-card.component.ts\n            \n            component\n            MainUserProfileCardComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/member-list/member-list.component.ts\n            \n            component\n            MemberListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/playground/playground.component.ts\n            \n            component\n            PLAYGROUNDComponent\n            \n                9 %\n                (2/22)\n            \n        \n        \n            \n                \n                src/app/shared/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/user-profile-card/user-profile-card.component.ts\n            \n            component\n            UserProfileCardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/userState.interface.ts\n            \n            interface\n            UserState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/channel.class.ts\n            \n            class\n            Channel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/post.class.ts\n            \n            class\n            Post\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/reaction.class.ts\n            \n            class\n            Reaction\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/thread.class.ts\n            \n            class\n            Thread\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/user.class.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/activity.service.ts\n            \n            injectable\n            ActivityService\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/services/content/channels.service.ts\n            \n            injectable\n            ChannelsService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/services/content/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/services/content/reactions.service.ts\n            \n            injectable\n            ReactionsService\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                src/services/content/threads.service.ts\n            \n            injectable\n            ThreadsService\n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/services/emoji-service/emoji-service.ts\n            \n            injectable\n            EmojiService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                src/services/time.service.ts\n            \n            injectable\n            TimeService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                68 %\n                (11/16)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.0\n        \n            @angular/cdk : ^17.3.10\n        \n            @angular/common : ^17.0.0\n        \n            @angular/compiler : ^17.0.0\n        \n            @angular/core : ^17.0.0\n        \n            @angular/fire : ^17.1.0\n        \n            @angular/forms : ^17.0.0\n        \n            @angular/material : ^17.3.10\n        \n            @angular/platform-browser : ^17.0.0\n        \n            @angular/platform-browser-dynamic : ^17.0.0\n        \n            @angular/router : ^17.0.0\n        \n            @ctrl/ngx-emoji-mart : ^9.2.0\n        \n            firebase : ^10.12.2\n        \n            material-icons : ^1.13.12\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDaBubble\nThis project was generated with Angular CLI version 17.0.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    35 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideFirebaseApp(() => initializeApp({\n      apiKey: \"AIzaSyDuQGRRfGVVjVBJRhRprhg3bG61pHevMvM\",    \n      authDomain: \"dabubble-257.firebaseapp.com\",    \n      projectId: \"dabubble-257\",    \n      storageBucket: \"dabubble-257.appspot.com\",    \n      messagingSenderId: \"1048437261939\",    \n      appId: \"1:1048437261939:web:6545ca4790290b7b660c06\"\n    })),\n    provideFirestore(() => getFirestore()),\n    provideAuth(() => getAuth()), provideAnimationsAsync('noop'),\n    provideStorage(() => getStorage())\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const router = new Router();\n  const mode = route.queryParams['mode'];\n  const oobCode = route.queryParams['oobCode'];\n  if (mode == 'resetPassword' && oobCode) {\n    router.navigate(['/auth/resetPw'], { queryParams: { oobCode } });\n    return false;\n  }\n  router.navigate(['/main-chat']);\n  return false;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
